{"version":3,"sources":["acte.min.js"],"names":["root","factory","tempRoot","exports","module","define","amd","acte","this","anneeTropique","argNutCoeff","argNutMult","delta","jde0Tab1000","jde0Tab2000","jjAn1Gregorien","jjAn2000Gregorien","jjDebutCommuneDeParis","jjDebutGregorien","jjDebutRepublicain","jjFinCommuneDeParis","jjFinRepublicain","regexpGregorien","jan(v)?(\\.)?(ier)?","f(é|e)v(r)?(\\.)?(ier)?","mar(s|\\.)?","avr(il|\\.)?","mai","ju(i)?n","ju(i)?l(\\.|l)?(\\.)?(et)?","ao(u|û)(t|\\.)?","sep(t)?(\\.)?(embre)?","7bre","oct(obre|\\.)?","8bre","nov(embre|\\.)?","9bre","d(é|e)c(embre|\\.)?","Xbre","[^-()\\d/*+.]","regexpRepublicain","vend(é|e)miaire","brumaire","frimaire","niv(ô|o)se","pluvi(ô|o)se","vent(ô|o)se","germinal","flor(é|e)al","prairial","messidor","thermidor","fructidor","san(s-)?culottide(s)?","jour(s)?\\scompl(é|e)mentaire(s)?","d(é|e)cade\\s(\\d){1,2}","siecleJulien","termesPerEquinoxes","degresVersRadians","d","Math","PI","normaliserDegres","a","floor","radiansVersDegres","r","reste","b","sinus","sin","cosinus","cos","equinoxe","an","item","deltaL","i","j","Jde0","Jde0tab","S","T","W","Y","pow","deltaT","dt","f","t","obliquiteEcliptique","jj","oTerms","u","v","eps","abs","positionSoleil","t2","l0","M","e","C","sunLong","sunAnomaly","sunR","Omega","Lambda","epsilon0","epsilon","Alpha","atan2","Delta","asin","AlphaApp","DeltaApp","nutation","to10","ang","ta","dp","de","t3","equationDuTemps","tau","alpha","deltaPsi","E","fractionEquinoxe","dtParis","equAPP","equJD","equJED","equinoxeAParis","ep","gregorienBissextile","gregorienVersJj","mois","jour","anneeBissextile","jjVersGregorien","yearday","leapadj","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","absInt","num","parseInt","anRepublicain","adr","nexteq","guess","lasteq","round","dateValide","resultat","Date","setFullYear","jjVersJulien","c","jjVersRepublicain","tempJj","equinox","decade","remplacements","texte","regex","options","val","tempTexte","hasOwnProperty","replace","RegExp","republicainVersJj","rjmcVersRdc","rjmc","rjmcVersRjdc","romainVersArabe","romain","lookup","I","V","X","L","D","arabe","length","tempRomain","toUpperCase","saisieValide","saisie","regexp","tempSaisie","split","match","tabGregorien","limites","dateJulienne","dateRepublicaine","iesaisie","saisieGregorien","tab","concat","tabRepublicain","dateGregorienne","saisieRepublicain","x","p1","Jour","variables","gregorien","jmc","mc","ac","od","julien","republicain","jdc","dc"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC,SAAmCA,EAAMC,GACxC,YACA,IAAIC,GAAWF,CAGQ,iBAAZG,UAA0C,gBAAXC,QACxCA,OAAOD,QAAUF,IACU,kBAAXI,SAAyBA,OAAOC,IAChDD,UAAWJ,GACiB,gBAAZE,SAChBA,QAAQI,KAAON,IAEfC,EAASK,KAAON,KAElBO,KAAM,WACN,YAIA,IAAID,GAAOA,MAaTE,EAAgB,aAUhBC,GAAe,QAAW,MAAS,MAAO,GAAI,OAAU,IAAO,KACjE,IAAO,MAAS,GAAM,IAAK,GAAM,KAAM,EAAG,KAAQ,EAAG,KAAM,IAAO,GAClE,GAAM,IAAK,EAAG,GAAM,EAAG,KAAQ,GAAI,IAAK,GAAM,KAAQ,GAAM,IAAK,EACjE,KAAQ,EAAG,IAAK,GAAM,IAAK,GAAM,IAAO,EAAG,KAAQ,EAAG,EAAG,EAAG,IAAK,EACjE,IAAO,EAAG,IAAK,EAAG,IAAO,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,IAAO,EAAG,IAAO,EACjE,GAAI,EAAG,IAAO,GAAM,GAAI,EAAG,IAAO,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,IAChE,EAAG,IAAO,EAAG,GAAI,EAAG,IAAO,EAAG,GAAI,EAAG,GAAI,EAAG,EAAG,EAAG,GAAI,EAAG,IAAO,EAAG,GACnE,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,GAAI,EAAG,IAAO,EAAG,GAAI,GAAM,EAAG,EAAG,GAAI,EAAG,GACjE,EAAG,IAAO,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,GACnE,EAAG,EAAG,EAAG,IAAO,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,GAAM,EAAG,EAAG,EACnE,GAAM,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,GAC/D,EAAG,GAAM,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,GAAM,EAClE,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EAClE,EAAG,GAAM,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,GAAM,EAClE,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAC/D,GAAM,EAAG,EAAG,GAWVC,GACF,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClE,EAAG,GAAM,GAAM,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAClE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EACrE,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAClE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAClE,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,GAAM,EAAG,EACrE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,GAAM,EAAG,EAAG,EAAG,EAAG,EAAG,E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","file":"acte.min.js","sourcesContent":["/**\n * acte - Librairie Javascript pour manipuler des données généalogiques\n * @copyright 2015-Present, Gilles Toubiana\n * @namespace acte\n * @version 0.0.1\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @license MIT\n */\n(function universalModuleDefinition(root, factory) {\n  'use strict';\n  var tempRoot = root;\n\n  /* istanbul ignore next */\n  if (typeof exports === 'object' && typeof module === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    exports.acte = factory();\n  } else {\n    tempRoot.acte = factory();\n  }\n}(this, function umdCallback() {\n  'use strict';\n\n  /** @namespace */\n  /* eslint-disable no-use-before-define */\n  var acte = acte || {};\n\n  /* eslint-enable no-use-before-define */\n/**\n * Nombre de jours, sur Terre, pour que le Soleil retourne à la même\n * position\n * dans le cycle des saisons\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @see {@link http://fourmilab.ch/documents/calendar/|TropicalYear}\n * @constant {Number}\n */\nvar anneeTropique = 365.24219878;\n\n/**\n * Coefficient des sinus et cosinus de l'argument pour la nutation\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @see {@link http://fourmilab.ch/documents/calendar/|nutArgCoeff}\n * @constant {Array}\n */\nvar argNutCoeff = [(-171996), (-1742), 92095, 89, (-13187), (-16), 5736,\n  (-31), (-2274), (-2), 977, (-5), 2062, 2, (-895), 5, 1426, (-34), 54,\n  (-1), 712, 1, (-7), 0, (-517), 12, 224, (-6), (-386), (-4), 200, 0,\n  (-301), 0, 129, (-1), 217, (-5), (-95), 3, (-158), 0, 0, 0, 129, 1,\n  (-70), 0, 123, 0, (-53), 0, 63, 0, 0, 0, 63, 1, (-33), 0, (-59), 0,\n  26, 0, (-58), (-1), 32, 0, (-51), 0, 27, 0, 48, 0, 0, 0, 46, 0, (-24),\n  0, (-38), 0, 16, 0, (-31), 0, 13, 0, 29, 0, 0, 0, 29, 0, (-12), 0, 26,\n  0, 0, 0, (-22), 0, 0, 0, 21, 0, (-10), 0, 17, (-1), 0, 0, 16, 0, (-8),\n  0, (-16), 1, 7, 0, (-15), 0, 9, 0, (-13), 0, 7, 0, (-12), 0, 6, 0, 11,\n  0, 0, 0, (-10), 0, 5, 0, (-8), 0, 3, 0, 7, 0, (-3), 0, (-7), 0, 0, 0,\n  (-7), 0, 3, 0, (-7), 0, 3, 0, 6, 0, 0, 0, 6, 0, (-3), 0, 6, 0, (-3),\n  0, (-6), 0, 3, 0, (-6), 0, 3, 0, 5, 0, 0, 0, (-5), 0, 3, 0, (-5), 0,\n  3, 0, (-5), 0, 3, 0, 4, 0, 0, 0, 4, 0, 0, 0, 4, 0, 0, 0, (-4), 0, 0,\n  0, (-4), 0, 0, 0, (-4), 0, 0, 0, 3, 0, 0, 0, (-3), 0, 0, 0, (-3), 0,\n  0, 0, (-3), 0, 0, 0, (-3), 0, 0, 0, (-3), 0, 0, 0, (-3), 0, 0, 0,\n  (-3), 0, 0, 0\n];\n\n/**\n * Termes périodiques pour la nutation en longitude et obliquité\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @see {@link http://fourmilab.ch/documents/calendar/|nutArgMult}\n * @constant {Array}\n */\nvar argNutMult = [\n  0, 0, 0, 0, 1, (-2), 0, 0, 2, 2, 0, 0, 0, 2, 2, 0, 0, 0, 0, 2, 0, 1,\n  0, 0, 0, 0, 0, 1, 0, 0, (-2), 1, 0, 2, 2, 0, 0, 0, 2, 1, 0, 0, 1, 2,\n  2, (-2), (-1), 0, 2, 2, (-2), 0, 1, 0, 0, (-2), 0, 0, 2, 1, 0, 0, (-1),\n  2, 2, 2, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, (-1), 2, 2, 0, 0, (-1), 0, 1,\n  0, 0, 1, 2, 1, (-2), 0, 2, 0, 0, 0, 0, (-2), 2, 1, 2, 0, 0, 2, 2, 0,\n  0, 2, 2, 2, 0, 0, 2, 0, 0, (-2), 0, 1, 2, 2, 0, 0, 0, 2, 0, (-2), 0,\n  0, 2, 0, 0, 0, (-1), 2, 1, 0, 2, 0, 0, 0, 2, 0, (-1), 0, 1, (-2), 2, 0,\n  2, 2, 0, 1, 0, 0, 1, (-2), 0, 1, 0, 1, 0, (-1), 0, 0, 1, 0, 0, 2, (-2),\n  0, 2, 0, (-1), 2, 1, 2, 0, 1, 2, 2, 0, 1, 0, 2, 2, (-2), 1, 1, 0, 0, 0,\n  (-1), 0, 2, 2, 2, 0, 0, 2, 1, 2, 0, 1, 0, 0, (-2), 0, 2, 2, 2, (-2), 0,\n  1, 2, 1, 2, 0, (-2), 0, 1, 2, 0, 0, 0, 1, 0, (-1), 1, 0, 0, (-2), (-1),\n  0, 2, 1, (-2), 0, 0, 0, 1, 0, 0, 2, 2, 1, (-2), 0, 2, 0, 1, (-2), 1, 0,\n  2, 1, 0, 0, 1, (-2), 0, (-1), 0, 1, 0, 0, (-2), 1, 0, 0, 0, 1, 0, 0, 0,\n  0, 0, 0, 1, 2, 0, (-1), (-1), 1, 0, 0, 0, 1, 1, 0, 0, 0, (-1), 1, 2, 2,\n  2, (-1), (-1), 2, 2, 0, 0, (-2), 2, 2, 0, 0, 3, 2, 2, 2, (-1), 0, 2, 2\n];\n\n/**\n * Tableau des Delta T (différence entre Temps universel et temps terrestre)\n * tous les 2 ans de 1620 à 2014\n * @access private\n * @author John Walker & Gilles Toubiana\n * @since 0.0.1\n * @see {@link http://fourmilab.ch/documents/calendar/|deltaTtab} |\n * {@link http://maia.usno.navy.mil/ser7/deltat.data|Valeurs} |\n * {@link http://maia.usno.navy.mil/ser7/deltat.preds|Predictions} |\n * {@link http://eclipse.gsfc.nasa.gov/SEcat5/deltatpoly.html|Expressions}\n * @constant {Array}\n */\nvar delta = [\n  121, 112, 103, 95, 88,\n  82, 77, 72, 68, 63,\n  60, 56, 53, 51, 48,\n  46, 44, 42, 40, 38,\n  35, 33, 31, 29, 26,\n  24, 22, 20, 18, 16,\n  14, 12, 11, 10, 9,\n  8, 7, 7, 7, 7,\n  7, 7, 8, 8, 9,\n  9, 9, 9, 9, 10,\n  10, 10, 10, 10, 10,\n  10, 10, 11, 11, 11,\n  11, 11, 12, 12, 12,\n  12, 13, 13, 13, 14,\n  14, 14, 14, 15, 15,\n  15, 15, 15, 16, 16,\n  16, 16, 16, 16, 16,\n  16, 15, 15, 14, 13,\n  13.1, 12.5, 12.2, 12, 12,\n  12, 12, 12, 12, 11.9,\n  11.6, 11, 10.2, 9.2, 8.2,\n  7.1, 6.2, 5.6, 5.4, 5.3,\n  5.4, 5.6, 5.9, 6.2, 6.5,\n  6.8, 7.1, 7.3, 7.5, 7.6,\n  7.7, 7.3, 6.2, 5.2, 2.7,\n  1.4, (-1.2), (-2.8), (-3.8), (-4.8),\n  (-5.5), (-5.3), (-5.6), (-5.7), (-5.9),\n  (-6), (-6.3), (-6.5), (-6.2), (-4.7),\n  (-2.8), (-0.1), 2.6, 5.3, 7.7,\n  10.4, 13.3, 16, 18.2, 20.2,\n  21.1, 22.4, 23.5, 23.8, 24.3,\n  24, 23.9, 23.9, 23.7, 24,\n  24.3, 25.3, 26.2, 27.3, 28.2,\n  29.1, 30, 30.7, 31.4, 32.2,\n  33.1, 34, 35, 36.5, 38.3,\n  40.2, 42.2, 44.9, 46.9, 49,\n  50.9, 52.5, 54, 55.1, 56.1,\n  57.2, 58.7, 60.4, 61.9, 63.2,\n  64, 64.4, 64.6, 65, 65.6,\n  66.2, 66.7, 67.5\n];\n\n/**\n * Jours juliens des équinoxes avant l'an 1000\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @see {@link http://fourmilab.ch/documents/calendar/|JDE0tab1000}\n * @constant {Array}\n */\nvar jde0Tab1000 = [\n  [1721139.29189, 365242.13740, 0.06134, 0.00111, -0.00071],\n  [1721233.25401, 365241.72562, -0.05323, 0.00907, 0.00025],\n  [1721325.70455, 365242.49558, -0.11677, -0.00297, 0.00074],\n  [1721414.39987, 365242.88257, -0.00769, -0.00933, -0.00006]\n];\n\n/**\n * Jours juliens des équinoxes de l'an 1000 à l'an 2000\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @see {@link http://fourmilab.ch/documents/calendar/|JDE0tab2000}\n * @constant {Array}\n */\nvar jde0Tab2000 = [\n  [2451623.80984, 365242.37404, 0.05169, -0.00411, -0.00057],\n  [2451716.56767, 365241.62603, 0.00325, 0.00888, -0.00030],\n  [2451810.21715, 365242.01767, -0.11575, 0.00337, 0.00078],\n  [2451900.05952, 365242.74049, -0.06223, -0.00823, 0.00032]\n];\n\n/**\n * Nombre de jours juliens correspondants à l'an 1 gregorien\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @see {@link http://fourmilab.ch/documents/calendar/|GREGORIAN_EPOCH}\n * @constant {Number}\n * @example\n * jjVersGregorien(1721425.5); // [1, 1, 1]\n */\nvar jjAn1Gregorien = 1721425.5;\n\n/**\n * Nombre de jours juliens correspondants à l'an 2000 grégorien\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @see {@link http://fourmilab.ch/documents/calendar/|J2000}\n * @constant {Number}\n * @example\n * jjVersGregorien(2451545.0); // [2000, 1, 1]\n */\nvar jjAn2000Gregorien = 2451545.0;\n\n/**\n * Nombre de jours juliens correspondants à l'adoption du calendrier\n * républicain dans le journal officiel lors de la Commune de Paris\n * en 1871\n * @access private\n * @author Gilles Toubiana\n * @since 0.0.1\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @constant {Number}\n * @example\n * jjVersGregorien(2404504.5); // [1871, 3, 18]\n * jjVersRepublicain(2404504.5); // [79, 6, 3, 7]\n */\nvar jjDebutCommuneDeParis = 2404504.5;\n\n/**\n * Nombre de jours juliens correspondants à l'adoption du calendrier\n * grégorien\n * @access private\n * @author Gilles Toubiana\n * @since 0.0.1\n * @see {@link https://github.com/gtoubiana/acte.js|Projet sur GitHub}\n * @constant {Number}\n * @example\n * jjVersGregorien(2299160.5); // [1582, 10, 15]\n * jjVersJulien(2299160.5); // [1582, 10, 5]\n */\nvar jjDebutGregorien = 2299160.5;\n\n/**\n * Nombre de jours juliens correspondants à l'an 1 républicain\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @see {@link fourmilab.ch/documents/calendar/|FRENCH_REVOLUTIONARY_EPOCH}\n * @constant {Number}\n * @example\n * jjVersGregorien(2375839.5); // [1792, 9, 22]\n * jjVersRepublicain(2375839.5); // [1, 1, 1, 1]\n */\nvar jjDebutRepublicain = 2375839.5;\n\n/**\n * Nombre de jours juliens correspondants à l'abrogation du calendrier\n * républicain dans le journal officiel lors de la Commune de Paris\n * en 1871\n * @access private\n * @author Gilles Toubiana\n * @since 0.0.1\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @constant {Number}\n * @example\n * jjVersGregorien(2404575.5); // [1871, 5, 28]\n * jjVersRepublicain(2404575.5); // [79, 9, 1, 8]\n */\nvar jjFinCommuneDeParis = 2404575.5;\n\n/**\n * Nombre de jours juliens correspondants à l'abrogation du calendrier\n * républicain\n * @access private\n * @author Gilles Toubiana\n * @since 0.0.1\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @constant {Number}\n * @example\n * jjVersGregorien(2380686.5); // [1805, 12, 31]\n * jjVersRepublicain(2380686.5); // [14, 4, 1, 10]\n */\nvar jjFinRepublicain = 2380686.5;\n\n/**\n * Expressions régulières pour convertir les mois gregoriens\n * @access private\n * @author Gilles Toubiana\n * @since 0.0.1\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @constant {Object}\n */\nvar regexpGregorien = {\n  'jan(v)?(\\\\.)?(ier)?': '/1/',\n  'f(é|e)v(r)?(\\\\.)?(ier)?': '/2/',\n  'mar(s|\\\\.)?': '/3/',\n  'avr(il|\\\\.)?': '/4/',\n  mai: '/5/',\n  'ju(i)?n': '/6/',\n  'ju(i)?l(\\\\.|l)?(\\\\.)?(et)?': '/7/',\n  'ao(u|û)(t|\\\\.)?': '/8/',\n  'sep(t)?(\\\\.)?(embre)?': '/9/',\n  '7bre': '/9/',\n  'oct(obre|\\\\.)?': '/10/',\n  '8bre': '/10/',\n  'nov(embre|\\\\.)?': '/11/',\n  '9bre': '/11/',\n  'd(é|e)c(embre|\\\\.)?': '/12/',\n  Xbre: '/12/',\n  '[^-()\\\\d/*+.]': ''\n};\n\n/**\n * Expressions régulières pour convertir les mois républicains\n * @access private\n * @author Gilles Toubiana\n * @since 0.0.1\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @constant {Object}\n */\nvar regexpRepublicain = {\n  'vend(é|e)miaire': '/1/',\n  brumaire: '/2/',\n  frimaire: '/3/',\n  'niv(ô|o)se': '/4/',\n  'pluvi(ô|o)se': '/5/',\n  'vent(ô|o)se': '/6/',\n  germinal: '/7/',\n  'flor(é|e)al': '/8/',\n  prairial: '/9/',\n  messidor: '/10/',\n  thermidor: '/11/',\n  fructidor: '/12/',\n  'san(s-)?culottide(s)?': '/13/',\n  'jour(s)?\\\\scompl(é|e)mentaire(s)?': '/13/',\n  'd(é|e)cade\\\\s(\\\\d){1,2}': '',\n  '[^-()\\\\d/*+.]': ''\n};\n\n/**\n * Nombre de jours dans un siècle julien\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @see {@link http://fourmilab.ch/documents/calendar/|JulianCentury}\n * @constant {Number}\n */\nvar siecleJulien = 36525.0;\n\n/**\n * Termes périodiques pour obtenir des temps réels\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @see {@link http://fourmilab.ch/documents/calendar/|EquinoxpTerms}\n * @constant {Array}\n */\nvar termesPerEquinoxes = [\n  485, 324.96, 1934.136, 203, 337.23, 32964.467,\n  199, 342.08, 20.186, 182, 27.85, 445267.112,\n  156, 73.14, 45036.886, 136, 171.52, 22518.443,\n  77, 222.54, 65928.934, 74, 296.72, 3034.906,\n  70, 243.58, 9037.513, 58, 119.81, 33718.147,\n  52, 297.17, 150.678, 50, 21.02, 2281.226,\n  45, 247.54, 29929.562, 44, 325.15, 31555.956,\n  29, 60.93, 4443.417, 18, 155.12, 67555.328,\n  17, 288.79, 4562.452, 16, 198.04, 62894.029,\n  14, 199.76, 31436.921, 12, 95.39, 14577.848,\n  12, 287.11, 31931.756, 12, 320.81, 34777.259,\n  9, 227.73, 1222.114, 8, 15.45, 16859.074\n];\n\n/**\n * Pour convertir des degrés en radians\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|dtr}\n * @param  {Number} d - Angle en degrés\n * @return {Number} Angle en radians\n * @example\n * degresVersRadians(90); // 1.5707963267948966\n */\nvar degresVersRadians = function degresVersRadians(d) {\n  return (d * Math.PI) / 180.0;\n};\n\n/**\n * Pour normaliser un angle entre 0 et 360 degrés\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|fixangle}\n * @param  {Number} a - Angle en degrés\n * @return {Number} Angle entre 0 et 360 degrés\n * @example\n * normaliserDegres(375); // 15\n */\nvar normaliserDegres = function normaliserDegres(a) {\n  return a - 360.0 * (Math.floor(a / 360.0));\n};\n\n/**\n * Pour convertir des radians en degrés\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|rtd}\n * @param  {Number} r - Angle en radians\n * @return {Number} Angle en degrés\n * @example\n * radiansVersDegres(1.5707963267948966); // 90\n */\nvar radiansVersDegres = function radiansVersDegres(r) {\n  return (r * 180.0) / Math.PI;\n};\n\n/**\n * Pour calculer les restes avec des nombres décimaux\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|mod}\n * @param  {Number} a - Nombre à diviser\n * @param  {Number} b - Diviseur\n * @return {Number} Reste de a par b\n * @example\n * reste(3,2); // 1\n */\nvar reste = function reste(a, b) {\n  return a - (b * Math.floor(a / b));\n};\n\n/**\n * Pour calculer le sinus d'un angle en degrés\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|dsin}\n * @param  {Number} d - Angle en degrés\n * @return {Number} Sinus de l'angle en degrés\n * @example\n * sinus(90); // 1\n */\nvar sinus = function sinus(d) {\n  return Math.sin(degresVersRadians(d));\n};\n\n/**\n * Pour calculer le cosinus d'un angle en degrés\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|dcos}\n * @param  {Number} d - Angle en degrés\n * @return {Number} Cosinus de l'angle en degrés\n * @example\n * cosinus(0); // 1\n */\nvar cosinus = function cosinus(d) {\n  return Math.cos(degresVersRadians(d));\n};\n\n/**\n * Pour calculer le nombre de jours juliens d'une equinoxe ou d'un solstice\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|equinox}\n * @param  {Number} an - Année\n * @param  {Number} item - L'item à calculer :\n * 0 = Equinoxe de Mars,\n * 1 = Solstice de Juin,\n * 2 = Equinoxe de Septembre,\n * 3 = Solstice de Décembre\n * @return {Number} Le nombre de jours juliens pour l'equinoxe ou solstice\n * @example\n * equinoxe(2015,0); // 2457102.4488504543\n */\nvar equinoxe = function equinoxe(an, item) {\n  var deltaL;\n  var i;\n  var j;\n  var Jde0;\n  var Jde0tab;\n  var S;\n  var T;\n  var W;\n  var Y;\n\n  if (an < 1000) {\n    Jde0tab = jde0Tab1000;\n    Y = an / 1000;\n  } else {\n    Jde0tab = jde0Tab2000;\n    Y = (an - 2000) / 1000;\n  }\n  Jde0 = Jde0tab[item][0] + (Jde0tab[item][1] * Y) +\n    (Jde0tab[item][2] * Math.pow(Y, 2)) + (Jde0tab[item][3] *\n      Math.pow(Y, 3)) + (Jde0tab[item][4] * Math.pow(Y, 4));\n  T = (Jde0 - 2451545.0) / 36525;\n  W = (35999.373 * T) - 2.47;\n  deltaL = 1 + (0.0334 * cosinus(W)) + (0.0007 * cosinus(2 * W));\n  S = 0;\n\n  for (i = j = 0; i < 24; i++) {\n    S += termesPerEquinoxes[j] *\n      cosinus(termesPerEquinoxes[j + 1] +\n        (termesPerEquinoxes[j + 2] * T));\n    j += 3;\n  }\n\n  return Jde0 + ((S * 0.00001) / deltaL);\n};\n\n/**\n * Pour calculer la différence entre temps terrestre et temps universel,\n * en secondes\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|deltat}\n * @param {Number} an - Année\n * @return {Number} Différence entre temps terrestre et temps universel,\n * en secondes\n * @example\n * deltaT(2015); // 86.41924999999999\n */\nvar deltaT = function deltaT(an) {\n  var dt;\n  var f;\n  var i;\n  var t;\n\n  if ((an >= 1620) && (an <= 2012)) {\n    i = Math.floor((an - 1620) / 2);\n    f = ((an - 1620) / 2) - i;\n    dt = delta[i] + ((delta[i + 1] - delta[i]) * f);\n  } else {\n    t = (an - 2000) / 100;\n    if (an < 948) {\n      dt = 2177 + (497 * t) + (44.1 * t * t);\n    } else {\n      dt = 102 + (102 * t) + (25.3 * t * t);\n      if ((an > 2000) && (an < 2100)) {\n        dt += 0.37 * (an - 2100);\n      }\n    }\n  }\n\n  return dt;\n};\n\n/**\n * Pour calculer l'obliquité de l'écliptique pour un nombre de jours juliens\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|obliqeq}\n * @param  {Number} jj - Nombre de jours juliens\n * @return {Number} Obliquité de l'écliptique\n * @example\n * obliquiteEcliptique(2457333.5); // 23.437230456425635\n */\nvar obliquiteEcliptique = function obliquiteEcliptique(jj) {\n  var oTerms = [(-4680.93), (-1.55), 1999.25, (-51.38), (-249.67),\n    (-39.05), 7.12, 27.87, 5.79, 2.45\n  ];\n  var u = (jj - jjAn2000Gregorien) / (siecleJulien * 100);\n  var v = u;\n  var eps = 23 + (26 / 60.0) + (21.448 / 3600.0);\n  var i;\n\n  if (Math.abs(u) < 1.0) {\n    for (i = 0; i < 10; i++) {\n      eps += (oTerms[i] / 3600.0) * v;\n      v *= u;\n    }\n  }\n\n  return eps;\n};\n\n/**\n * Pour calculer la position du soleil\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|sunpos}\n * @param  {Number} jj - Nombre de jours juliens\n * @return {Array} Position du soleil : Angles en degrés.\n * [0] Longitude moyenne géométrique du Soleil,\n * [1] Anomalie moyenne du Soleil,\n * [2] Excentricité de l'orbite de la Terre,\n * [3] Équation du centre du Soleil,\n * [4] Longitude réelle du Soleil,\n * [5] Anomalie réelle du Soleil,\n * [6] Rayon vecteur du Soleil,\n * [7] Longitude apparente du Soleil pour une equinoxe,\n * [8] Ascension réelle du Soleil,\n * [9] Déclinaison réelle du Soleil,\n * [10] Ascension apparente du Soleil,\n * [11] Déclinaison apparente du Soleil\n * @example\n * positionSoleil(2457333.5); //[225.88621192607388, 302.6763369039327,\n * // 0.016701968773317977, -1.6291396906692837, 224.2570722354046,\n * // 301.0471972132634, 0.9911840619194138, 224.25125854183977,\n * // 221.79690960202632, -16.115660127694625, 221.79168151491098,\n * // -16.112230690435588]\n */\nvar positionSoleil = function positionSoleil(jj) {\n  var T = (jj - jjAn2000Gregorien) / siecleJulien;\n  var t2 = T * T;\n  var l0 = normaliserDegres(280.46646 + (36000.76983 * T) +\n    (0.0003032 * t2));\n  var M = normaliserDegres(357.52911 + (35999.05029 * T) +\n    (-0.0001537 * t2));\n  var e = 0.016708634 + (-0.000042037 * T) + (-0.0000001267 * t2);\n  var C = ((1.914602 + (-0.004817 * T) + (-0.000014 * t2)) * sinus(M)) +\n    ((0.019993 - (0.000101 * T)) * sinus(2 * M)) +\n    (0.000289 * sinus(3 * M));\n  var sunLong = l0 + C;\n  var sunAnomaly = M + C;\n  var sunR = (1.000001018 * (1 - (e * e))) / (1 + (e * cosinus(sunAnomaly)));\n  var Omega = 125.04 - (1934.136 * T);\n  var Lambda = sunLong + (-0.00569) + (-0.00478 * sinus(Omega));\n  var epsilon0 = obliquiteEcliptique(jj);\n  var epsilon = epsilon0 + (0.00256 * cosinus(Omega));\n  var Alpha = normaliserDegres(radiansVersDegres(Math.atan2(cosinus(\n    epsilon0) * sinus(sunLong), cosinus(sunLong))));\n  var Delta = radiansVersDegres(Math.asin(sinus(epsilon0) * sinus(\n    sunLong)));\n  var AlphaApp = normaliserDegres(radiansVersDegres(Math.atan2(cosinus(\n    epsilon) * sinus(Lambda), cosinus(Lambda))));\n  var DeltaApp = radiansVersDegres(Math.asin(sinus(epsilon) * sinus(\n    Lambda)));\n\n  return [l0, M, e, C, sunLong, sunAnomaly, sunR, Lambda, Alpha, Delta,\n    AlphaApp, DeltaApp\n  ];\n};\n\n/**\n * Pour calculer la nutation en longitude (deltaPsi),\n * et obliquité (deltaEpsilon) pour un nombre de jours juliens\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|nutation}\n * @param  {Number} jj - Nombre de jours juliens\n * @return {Array} Nutation en [0] longitude et [1] obliquité en degrés\n * @example\n * nutation(2457333.5);\n * // [-0.000514859690208824, -0.0025586654864005456]\n */\nvar nutation = function nutation(jj) {\n  var ta = [];\n  var dp = 0;\n  var de = 0;\n  var t = (jj - 2451545.0) / 36525.0;\n  var t2 = t * t;\n  var t3 = t * t2;\n  var i;\n  var j;\n  var to10;\n  var ang;\n\n  ta[0] = degresVersRadians(297.850363 + 445267.11148 * t - 0.0019142 *\n    t2 + t3 / 189474.0);\n  ta[1] = degresVersRadians(357.52772 + 35999.05034 * t - 0.0001603 *\n    t2 - t3 / 300000.0);\n  ta[2] = degresVersRadians(134.96298 + 477198.867398 * t + 0.0086972 *\n    t2 + t3 / 56250.0);\n  ta[3] = degresVersRadians(93.27191 + 483202.017538 * t - 0.0036825 *\n    t2 + t3 / 327270);\n  ta[4] = degresVersRadians(125.04452 - 1934.136261 * t + 0.0020708 *\n    t2 + t3 / 450000.0);\n  for (i = 0; i < 5; i++) {\n    ta[i] -= (2 * Math.PI) * (Math.floor(ta[i] / (2 * Math.PI)));\n  }\n  to10 = t / 10.0;\n\n  for (i = 0; i < 63; i++) {\n    ang = 0;\n\n    for (j = 0; j < 5; j++) {\n      if (argNutMult[(i * 5) + j] !== 0) {\n        ang += argNutMult[(i * 5) + j] * ta[j];\n      }\n    }\n    dp += (argNutCoeff[(i * 4) + 0] +\n      argNutCoeff[(i * 4) + 1] * to10) * Math.sin(ang);\n    de += (argNutCoeff[(i * 4) + 2] +\n      argNutCoeff[(i * 4) + 3] * to10) * Math.cos(ang);\n  }\n\n  return [dp / (3600.0 * 10000.0), de / (3600.0 * 10000.0)];\n};\n\n/**\n * Pour calculer l'équation du temps pour un moment précis\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|equationOfTime}\n * @param  {Number} jj - Nombre de jours juliens\n * @return {Number} Équation du temps pour une fraction de jour\n * @example\n * equationDuTemps(2457333.5); // 0.002839122270852552\n */\nvar equationDuTemps = function equationDuTemps(jj) {\n  var tau = (jj - jjAn2000Gregorien) / (siecleJulien * 10);\n  var l0 = normaliserDegres(280.4664567 + (360007.6982779 * tau) +\n    (0.03032028 * Math.pow(tau, 2)) + ((Math.pow(tau, 3)) / 49931) +\n    (-((Math.pow(tau, 4)) / 15300)) + (-((Math.pow(tau, 5)) / 2000000))\n  );\n  var alpha = positionSoleil(jj)[10];\n  var deltaPsi = nutation(jj)[0];\n  var epsilon = obliquiteEcliptique(jj) + nutation(jj)[1];\n  var E = l0 + (-0.0057183) + (-alpha) + (deltaPsi * cosinus(epsilon));\n\n  E -= 20.0 * (Math.floor(E / 20.0));\n\n  return E / (24 * 60);\n};\n\n/**\n * Pour calculer le nombre de jours juliens et la fraction de l'équinoxe\n * de septembre au méridien de Paris pour une année grégorienne\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|equinoxe_a_paris}\n * @param {Number} an - Année grégorienne\n * @return {Number} Nombre de jours juliens et fraction de l'équinoxe\n * de septembre au méridien de Paris pour une année grégorienne\n * @example\n * fractionEquinoxe(2015); // 2457288.855100263\n */\nvar fractionEquinoxe = function fractionEquinoxe(an) {\n  var dtParis;\n  var equAPP;\n  var equJD;\n  var equJED;\n\n  equJED = equinoxe(an, 2);\n  equJD = equJED - (deltaT(an) / (24 * 60 * 60));\n  equAPP = equJD + equationDuTemps(equJED);\n  dtParis = (2 + (20 / 60.0) + (15 / (60 * 60.0))) / 360;\n\n  return equAPP + dtParis;\n};\n\n/**\n * Pour calculer le nombre de jours juliens correspondant à l'équinoxe\n * de septembre au méridien de Paris, pour une année grégorienne\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|paris_equinoxe_jd}\n * @param {Number} an - Année grégorienne\n * @return {Number} Nombre de jours juliens pour l'équinoxe de septembre\n * @example\n * equinoxeAParis(2015); // 2457288.5\n */\nvar equinoxeAParis = function equinoxeAParis(an) {\n  var ep = fractionEquinoxe(an);\n\n  return Math.floor(ep - 0.5) + 0.5;\n};\n\n/**\n * Pour déterminer si une année grégorienne est bissextile\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|leap_gregorian}\n * @param {Number} an - Année grégorienne\n * @return {Boolean} Est-ce une année bissextile ?\n * @example\n * gregorienBissextile(2012); // true\n */\nvar gregorienBissextile = function gregorienBissextile(an) {\n  return ((an % 4) === 0) && (!(((an % 100) === 0) &&\n    ((an % 400) !== 0)));\n};\n\n/**\n * Pour calculer le nombre de jours juliens (jj) à partir d'une date\n * grégorienne\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|gregorian_to_jd}\n * @param {Number} an - Année grégorienne\n * @param {Number} mois - Mois grégorien\n * @param {Number} jour - Jour grégorien\n * @return {Number} Nombre de jours juliens\n * @example\n * gregorienVersJj(2015,11,7); // 2457333.5\n */\nvar gregorienVersJj = function gregorienVersJj(an, mois, jour) {\n  var anneeBissextile = gregorienBissextile(an) ? -1 : -2;\n\n  return (jjAn1Gregorien - 1) + (365 * (an - 1)) +\n    Math.floor((an - 1) / 4) + (-Math.floor((an - 1) / 100)) +\n    Math.floor((an - 1) / 400) + Math.floor((((367 * mois) - 362) / 12) +\n      ((mois <= 2) ? 0 : anneeBissextile) + jour);\n};\n\n/**\n * Pour calculer une date grégorienne à partir du nombre de jours juliens\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|jd_to_gregorian}\n * @param {Number} jj - Nombre de jours juliens\n * @return {Array} [0] Année, [1] Mois et [2] Jour grégorien\n * @example\n * jjVersGregorien(2457333.5); // [2015, 11, 7]\n */\nvar jjVersGregorien = function jjVersGregorien(jj) {\n  var wjd = Math.floor(jj - 0.5) + 0.5;\n  var depoch = wjd - jjAn1Gregorien;\n  var quadricent = Math.floor(depoch / 146097);\n  var dqc = reste(depoch, 146097);\n  var cent = Math.floor(dqc / 36524);\n  var dcent = reste(dqc, 36524);\n  var quad = Math.floor(dcent / 1461);\n  var dquad = reste(dcent, 1461);\n  var yindex = Math.floor(dquad / 365);\n  var an = (quadricent * 400) + (cent * 100) + (quad * 4) + yindex;\n  var anneeBissextile = (gregorienBissextile(an) ? 1 : 2);\n  var yearday;\n  var leapadj;\n  var mois;\n  var jour;\n\n  if (!((cent === 4) || (yindex === 4))) {\n    an++;\n  }\n  yearday = wjd - gregorienVersJj(an, 1, 1);\n  leapadj = ((wjd < gregorienVersJj(an, 3, 1)) ? 0 : anneeBissextile);\n  mois = Math.floor((((yearday + leapadj) * 12) + 373) / 367);\n  jour = (wjd - gregorienVersJj(an, mois, 1)) + 1;\n\n  return [an, mois, jour];\n};\n\n/**\n * Pour convertir en nombre entier positif\n * @access private\n * @author Gilles Toubiana\n * @since 0.0.1\n * @license MIT\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @param {Number} num - le nombre à convertir\n * @return {Number} Le nombre entier positif\n * @example\n * absInt(-23.45); // 23\n */\nvar absInt = function absInt(num) {\n  return Math.abs(parseInt(num, 10));\n};\n\n/**\n * Pour calculer l'année républicaine correspondant à un nombre de jours\n * juliens\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link fourmilab.ch/documents/calendar/|annee_da_la_revolution}\n * @param {Number} jj - Nombre de jours juliens\n * @return {Array} [0] An républicain,\n * [1] Nombre de jours juliens pour l'équinoxe de l'année républicaine\n * @example\n * anRepublicain(2379902.5); // [12, 2379857.5]\n */\nvar anRepublicain = function anRepublicain(jj) {\n  var guess = jjVersGregorien(jj)[0] - 2;\n  var lasteq = equinoxeAParis(guess);\n  var adr;\n  var nexteq;\n\n  while (lasteq > jj) {\n    guess--;\n    lasteq = equinoxeAParis(guess);\n  }\n\n  nexteq = lasteq - 1;\n  while (!((lasteq <= jj) && (jj < nexteq))) {\n    lasteq = nexteq;\n    guess++;\n    nexteq = equinoxeAParis(guess);\n  }\n  adr = Math.round((lasteq - jjDebutRepublicain) / anneeTropique) + 1;\n\n  return [adr, lasteq];\n};\n\n/**\n * Pour créer un objet date grégorien valide\n * @access private\n * @author Gilles Toubiana\n * @since 0.0.1\n * @license MIT\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @param {Number} jour - le jour du mois gregorien en chiffres\n * @param {Number} mois - le mois gregorien en chiffres\n * @param {Number} an - l'année gregorienne en chiffres\n * @return {Object} L'objet date valide\n * @example\n * dateValide(10,12,34); // Sun Dec 10 34 00:00:00 GMT+0100 (CET)\n */\nvar dateValide = function dateValide(jour, mois, an) {\n  var resultat = new Date(an, mois - 1, jour);\n\n  resultat.setFullYear(an);\n\n  return resultat;\n};\n\n/**\n * Pour calculer une date julienne à partir du nombre de jours juliens\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link http://fourmilab.ch/documents/calendar/|jd_to_julian}\n * @param {Number} jj - Nombre de jours juliens\n * @return {Array} [0] An, [1] Mois et [2] Jour julien\n * @example\n * jjVersJulien(2457346.5); // [2015,11,7]\n */\nvar jjVersJulien = function jjVersJulien(jj) {\n  var b = Math.floor(jj + 0.5) + 1524;\n  var c = Math.floor((b - 122.1) / 365.25);\n  var d = Math.floor(365.25 * c);\n  var e = Math.floor((b - d) / 30.6001);\n  var mois = Math.floor((e < 14) ? (e - 1) : (e - 13));\n  var an = Math.floor((mois > 2) ? (c - 4716) : (c - 4715));\n  var jour = b - d - Math.floor(30.6001 * e);\n\n  if (an < 1) {\n    an--;\n  }\n\n  return [an, mois, jour];\n};\n\n/**\n * Pour calculer la date républicaine à partir du nombre de jours juliens,\n * les 4 ou 5 'sansculottides' sont considérés comme un 13e mois\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link fourmilab.ch/documents/calendar/|jd_to_french_revolutionary}\n * @param {Number} jj - Nombre de jours juliens\n * @return {Array} [0] An, [1] Mois, [2] Décade et [3] Jour républicain\n * @example\n * jjVersRepublicain(2379902.5); // [12, 2, 2, 6]\n */\nvar jjVersRepublicain = function jjVersRepublicain(jj) {\n  var tempJj = Math.floor(jj) + 0.5;\n  var adr = anRepublicain(tempJj);\n  var an = adr[0];\n  var equinox = adr[1];\n  var mois = Math.floor((tempJj - equinox) / 30) + 1;\n  var jour = (tempJj - equinox) % 30;\n  var decade = Math.floor(jour / 10) + 1;\n\n  jour = (jour % 10) + 1;\n\n  return [an, mois, decade, jour];\n};\n\n/**\n * Pour remplacer en série avec un objet contenant des regex\n * @access private\n * @author Gilles Toubiana\n * @since 0.0.1\n * @license MIT\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @param {String} texte - Le texte à modifier\n * @param {Object} regex - Les expressions régulières de remplacements\n * @param {String} options - Les options des expressions régulières\n * @return {String} Le texte modifié\n * @example\n * remplacements('Bonjour', {'jour': 'soir'}, 'gi');\n * // 'Bonsoir'\n */\nvar remplacements = function remplacements(texte, regex, options) {\n  var tempTexte = texte;\n  var val;\n\n  for (val in regex) {\n    // istanbul ignore else\n    if (regex.hasOwnProperty(val)) {\n      tempTexte = tempTexte.replace(new RegExp(val, options), regex[val]);\n    }\n  }\n\n  return tempTexte;\n};\n\n/**\n * Pour calculer le nombre de jours juliens à partir d'une date républicaine\n * @access private\n * @author John Walker\n * @since 0.0.1\n * @license Domaine public\n * @see {@link fourmilab.ch/documents/calendar/|french_revolutionary_to_jd}\n * @param {Number} an - Année républicaine\n * @param {Number} mois - Mois républicain\n * @param {Number} decade - Décade républicaine\n * @param {Number} jour - Jour de la décade républicaine\n * @return {Number} Nombre de jours juliens\n * @example\n * republicainVersJj(12, 2, 2, 6); // 2379902.5\n */\nvar republicainVersJj = function republicainVersJj(an, mois, decade, jour) {\n  var guess = jjDebutRepublicain + (anneeTropique * ((an - 1) - 1));\n  var adr = [an - 1, 0];\n\n  while (adr[0] < an) {\n    adr = anRepublicain(guess);\n    guess = adr[1] + (anneeTropique + 2);\n  }\n\n  return adr[1] + (30 * (mois - 1)) + (10 * (decade - 1)) + (jour - 1);\n};\n\n/**\n * Pour convertir le jour du mois républicain en décade\n * @access private\n * @author Gilles Toubiana\n * @since 0.0.1\n * @license MIT\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @param {Number} rjmc - le jour du mois républicain\n * @return {Number} La décade républicaine\n * @example\n * rjmcVersRdc(28); // 3\n */\nvar rjmcVersRdc = function rjmcVersRdc(rjmc) {\n  return (Math.abs(parseInt(rjmc, 10) % 10) === 0) ? Math.abs(parseInt(rjmc /\n    10, 10)) : Math.abs(parseInt(rjmc / 10, 10) + 1);\n};\n\n/**\n * Pour convertir le jour du mois républicain en jour de la décade\n * @access private\n * @author Gilles Toubiana\n * @since 0.0.1\n * @license MIT\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @param {Number} rjmc - le jour du mois républicain\n * @return {Number} Le jour de la décade républicaine\n * @example\n * rjmcVersRjdc(28); // 8\n */\nvar rjmcVersRjdc = function rjmcVersRjdc(rjmc) {\n  return (Math.abs(parseInt(rjmc, 10) % 10) === 0) ? 10 : Math.abs(parseInt(\n    rjmc, 10) % 10);\n};\n\n/**\n * Pour convertir des chiffres romains en chiffres arabes\n * @access private\n * @author Iván Montes\n * @since 0.0.1\n * @license unknown\n * @see {@link http://blog.stevenlevithan.com/?p=65#comment-16129|Blog}\n * @param {String} romain - Chiffre romain\n * @return {Number} Chiffre arabe\n * @example\n * romainVersArabe('MMXII'); // 2012\n */\nvar romainVersArabe = function romainVersArabe(romain) {\n  var lookup = {\n    I: 1,\n    V: 5,\n    X: 10,\n    L: 50,\n    C: 100,\n    D: 500,\n    M: 1000\n  };\n  var arabe = 0;\n  var i = romain.length - 1;\n  var tempRomain = romain.toUpperCase();\n\n  for (i; i >= 0; i--) {\n    if (lookup[tempRomain[i]] < lookup[tempRomain[i + 1]]) {\n      arabe -= lookup[tempRomain[i]];\n    } else {\n      arabe += lookup[tempRomain[i]];\n    }\n  }\n\n  return arabe;\n};\n\n/**\n * Pour obtenir une saisie valide\n * @access private\n * @author Gilles Toubiana\n * @since 0.0.1\n * @license MIT\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @param {String} saisie - La saisie d'une date\n * @param {Object} regexp - Un objet regexpRepublicain ou regexpGregorien\n * pour convertir les mois\n * @return {Array} La saisie valide\n * @example\n * saisieValide(saisie, regexpRepublicain);\n * saisieValide(saisie, regexpGregorien);\n */\nvar saisieValide = function saisieValide(saisie, regexp) {\n  var tempSaisie = saisie;\n  var u;\n\n  // On remplace le texte restant par des chiffres arabes\n  tempSaisie = remplacements(tempSaisie, regexp, 'gi')\n    .split(/[\\/\\.]+/gi);\n\n  // Si il n'y a que l'année [1,1,ac]\n  if (!tempSaisie[1] && !tempSaisie[2]) {\n    if ((tempSaisie[0].match(/\\d-/gi)) || (tempSaisie[0] === '')) {\n      tempSaisie[0] = u;\n    } else {\n      tempSaisie = [1, 1, tempSaisie[0]];\n    }\n  }\n\n  // Si il n'y a que l'année et le mois [1,mc,ac]\n  if (!tempSaisie[0] && tempSaisie[1] && tempSaisie[2]) {\n    tempSaisie = [1, tempSaisie[1], tempSaisie[2]];\n  }\n  if (tempSaisie[1] && !tempSaisie[2]) {\n    tempSaisie = [1, tempSaisie[0], tempSaisie[1]];\n  }\n\n  return tempSaisie;\n};\n\n/**\n * Pour convertir la saisie grégorienne ou julienne en Objet Jour\n * @access private\n * @author Gilles Toubiana\n * @since 0.0.1\n * @license MIT\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @param {String} saisie - Saisie d'une date\n * @param {Boolean} limites - Par défaut, les résultats sont limités\n * aux périodes d'utilisation des calendriers. Seule la valeur `false`\n * permet de désactiver ces limites.\n * @return {Array} Les dates républicaines, grégoriennes et juliennes\n * @example\n * tabGregorien(saisie, this.limites);\n */\nvar tabGregorien = function tabGregorien(saisie, limites) {\n  // ie8 debug\n  var iesaisie = (saisie[0] === '/') ? '1' + saisie : saisie;\n\n  // Uniformisation de la saisie\n  var saisieGregorien = saisieValide(iesaisie, regexpGregorien);\n\n  // var saisieGregorien = saisieValide(saisie, regexpGregorien);\n  var tab = [];\n  var dateJulienne;\n  var dateRepublicaine;\n\n  // Lorsque la date est valide [gjmc,gmc,gac]\n  if (saisieGregorien[2] && saisieGregorien[0] < 32 &&\n    absInt(saisieGregorien[0]) !== 0 &&\n    saisieGregorien[1] < 13 && saisieGregorien[1] !== '' &&\n    absInt(saisieGregorien[1]) !== 0) {\n    tab[4] = gregorienVersJj(parseInt(saisieGregorien[2], 10), absInt(\n      saisieGregorien[1]), absInt(saisieGregorien[0]));\n\n    // Limitations gregorien/julien\n    if ((limites === true) && (tab[4] < jjDebutGregorien)) {\n      tab[5] = absInt(saisieGregorien[0]);\n      tab[6] = absInt(saisieGregorien[1]);\n      tab[7] = parseInt(saisieGregorien[2], 10);\n      tab[8] = dateValide(tab[5], tab[6], tab[7]);\n    } else {\n      tab[0] = absInt(saisieGregorien[0]);\n      tab[1] = absInt(saisieGregorien[1]);\n      tab[2] = parseInt(saisieGregorien[2], 10);\n      tab[3] = dateValide(tab[0], tab[1], tab[2]);\n      dateJulienne = jjVersJulien(tab[4]);\n      tab[5] = dateJulienne[2];\n      tab[6] = dateJulienne[1];\n      tab[7] = dateJulienne[0];\n      tab[8] = dateValide(tab[5], tab[6], tab[7]);\n    }\n\n    // Limitations republicain\n    if (((tab[4] >= jjDebutRepublicain) &&\n        (tab[4] <= jjFinRepublicain)) ||\n      ((tab[4] >= jjDebutCommuneDeParis) &&\n        (tab[4] <= jjFinCommuneDeParis)) ||\n      limites === false) {\n      dateRepublicaine = jjVersRepublicain(tab[4]);\n      tab = tab.concat([dateRepublicaine[3], dateRepublicaine[2], (\n          dateRepublicaine[2] - 1) * 10 + dateRepublicaine[3],\n        dateRepublicaine[1], dateRepublicaine[0]\n      ]);\n    }\n  }\n\n  return tab;\n};\n\n/**\n * Pour convertir la saisie républicaine en Objet Jour\n * @access private\n * @author Gilles Toubiana\n * @since 0.0.1\n * @license MIT\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @param {String} saisie - Saisie d'une date\n * @param {Boolean} limites - Par défaut, les résultats sont limités\n * aux périodes d'utilisation des calendriers. Seule la valeur `false`\n * permet de désactiver ces limites.\n * @return {Array} Les dates républicaines, grégoriennes et juliennes\n * @example\n * tabRepublicain(saisie, this.limites);\n */\nvar tabRepublicain = function tabRepublicain(saisie, limites) {\n  // On remplace les chiffres romains en chiffres arabes\n  var saisieRepublicain = saisie.replace(/\\W?an\\s-?([-MDCLXVI]+)\\W?/gi,\n    function romainNegatif(x, p1) {\n      return (x.match(/-/)) ? ' -' + romainVersArabe(p1) : ' ' +\n        romainVersArabe(p1);\n    });\n  var tab = [];\n  var dateJulienne;\n  var dateGregorienne;\n\n  // Uniformisation de la saisie\n  saisieRepublicain = saisieValide(saisieRepublicain, regexpRepublicain);\n\n  // Lorsque la date est valide [rjmc,rmc,rac]\n  if (saisieRepublicain[2] && saisieRepublicain[0] < 30 &&\n    absInt(saisieRepublicain[0]) !== 0 && saisieRepublicain[1] < 14 &&\n    absInt(saisieRepublicain[1]) !== 0) {\n    tab[4] = republicainVersJj(parseInt(saisieRepublicain[2], 10),\n      parseInt(saisieRepublicain[1], 10), rjmcVersRdc(saisieRepublicain[0]),\n      rjmcVersRjdc(saisieRepublicain[0]));\n\n    // Si jj (tab[4]) est dans les limites ou en illimité\n    if (((tab[4] >= jjDebutRepublicain) &&\n        (tab[4] <= jjFinRepublicain)) ||\n      ((tab[4] >= jjDebutCommuneDeParis) &&\n        (tab[4] <= jjFinCommuneDeParis)) ||\n      limites === false) {\n      tab[9] = rjmcVersRjdc(saisieRepublicain[0]);\n      tab[10] = rjmcVersRdc(saisieRepublicain[0]);\n      tab[11] = absInt(saisieRepublicain[0]);\n      tab[12] = parseInt(saisieRepublicain[1], 10);\n      tab[13] = parseInt(saisieRepublicain[2], 10);\n      dateGregorienne = jjVersGregorien(tab[4]);\n      tab[2] = dateGregorienne[0];\n      tab[1] = dateGregorienne[1];\n      tab[0] = dateGregorienne[2];\n      tab[3] = dateValide(tab[0], tab[1], tab[2]);\n      dateJulienne = jjVersJulien(tab[4]);\n      tab[7] = dateJulienne[0];\n      tab[6] = dateJulienne[1];\n      tab[5] = dateJulienne[2];\n      tab[8] = dateValide(tab[5], tab[6], tab[7]);\n    }\n  }\n\n  return tab;\n};\n\n/**\n * Pour formater une date grégorienne\n * @memberof acte\n * @access public\n * @since 0.0.1\n * @author Gilles Toubiana\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @version 0.0.1\n * @license MIT\n * @param {String} [format='%d/%m/%Y'] - Le modèle de formatage\n * @param {String} [erreur='Pas de correspondances'] - Le message d'erreur\n * @param {Function} [rappel] - Une fonction de rappel\n * @return {String} La date grégorienne formatée\n * @example\n * acte.jour('8 mai 1972').gregorien(); // \"8/5/1972\"\n\nacte.Jour.prototype.gregorien = function (format, erreur, rappel) {\n  return this.variables.gregorien.ac;\n}\n*/\n\n/**\n * Pour convertir une saisie en objet JavaScript\n * @memberof acte\n * @class\n * @chainable\n * @access public\n * @author Gilles Toubiana\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @param {String} saisie - Saisie d'une date grégorienne ou républicaine.\n * @param {Boolean} [limites=true] - Par défaut, les résultats sont limités\n * aux périodes d'utilisation des calendriers :<br>\n * - une saisie de date grégorienne sera considérée comme julienne avant\n * le 15/10/1582<br>\n * - une saisie de date républicaine ne sera valide que du 22/9/1792 au\n * 31/12/1805 (Période républicaine) et du 18/3/1871 au 28/5/1871\n * (Commune de Paris).<br>\n * La valeur `false` permet de désactiver ces limitations.\n * @version 0.0.1\n * @since 0.0.1\n * @license MIT\n */\nacte.Jour = function Jour(saisie, limites) {\n  var tab = [];\n\n  this.variables = this.variables || {};\n  this.limites = limites !== false;\n\n  // On detecte si c'est une date républicaine\n  if (saisie.match(/\\W?an\\s-?([-MDCLXVI]+|\\d+)\\W?/gi)) {\n    tab = tabRepublicain(saisie, this.limites);\n\n    // Si ce n'est pas du républicain (donc gregorien ou julien)\n  } else {\n    tab = tabGregorien(saisie, this.limites);\n  }\n\n  // Ecriture de toutes les valeurs\n  this.variables = {\n    gregorien: {\n      jmc: tab[0],\n      mc: tab[1],\n      ac: tab[2],\n      od: tab[3]\n    },\n    julien: {\n      jj: tab[4],\n      jmc: tab[5],\n      mc: tab[6],\n      ac: tab[7],\n      od: tab[8]\n    },\n    republicain: {\n      jdc: tab[9],\n      dc: tab[10],\n      jmc: tab[11],\n      mc: tab[12],\n      ac: tab[13]\n    },\n    limites: this.limites\n  };\n};\n\n  return acte;\n}));\n"],"sourceRoot":"/source/"}