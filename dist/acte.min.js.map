{"version":3,"sources":["acte.min.js"],"names":["Array","prototype","reduce","callback","this","TypeError","value","t","Object","len","length","k","arguments","universalModuleDefinition","root","factory","tempRoot","exports","module","define","amd","acte","umdCallback","_classCallCheck","instance","Constructor","jde0Tab2000","anneeTropique","argNutCoeff","argNutMult","delta","dixainesEnLettres","jde0Tab1000","jjAn1Gregorien","jjAn2000Gregorien","jjDebutCommuneDeParis","jjDebutGregorien","jjDebutRepublicain","jjFinCommuneDeParis","jjFinRepublicain","jourGregorien","jourRepublicain","moisGregorien","moisRepublicain","regexpGregorien","regexp","replace","regexpRepublicain","siecleJulien","termesPerEquinoxes","unitesEnLettres","degresVersRadians","d","result","Math","PI","normaliserDegres","a","floor","radiansVersDegres","r","reste","b","sinus","sin","cosinus","cos","equinoxe","an","item","i","j","Jde0tab","S","Y","Jde0","pow","T","W","deltaL","deltaT","dt","maxindex","obliquiteEcliptique","jj","oTerms","u","v","eps","abs","positionSoleil","t2","l0","M","e","C","sunLong","sunAnomaly","sunR","Omega","Lambda","epsilon0","epsilon","Alpha","atan2","Delta","asin","AlphaApp","DeltaApp","nutation","ta","t3","dp","de","to10","_i","ang","equationDuTemps","tau","alpha","deltaPsi","E","fractionEquinoxe","equJED","equJD","equAPP","dtParis","equinoxeAParis","ep","gregorienBissextile","gregorienVersJj","mois","jour","anneeBissextile","jjVersGregorien","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","yearday","leapadj","initialeEnCapitale","str","charAt","toUpperCase","slice","premierOrdinalEnLettres","saisie","genre","toString","prem","prefixeZero","n","nombreEnLettres","mill","sepcen","centl","sepdix","dixl","sepunit","unitl","dizunit","res","splus","mil","parseInt","dix","unit","avjc","ordinauxEnLettres","nombreOrdinal","exp","dateValide","resultat","Date","setFullYear","periodeEnJours","j1","m1","a1","j2","m2","a2","date1","date2","debut","fin","ceil","semaineComplete","m","x","jourSemaine","getDay","nombreSemaines","semainesValides","absInt","num","anRepublicain","guess","lasteq","nexteq","adr","round","arabeVersRomain","arabe","lookup","CM","D","CD","XC","L","XL","X","IX","V","IV","I","tempArabe","sign","romain","hasOwnProperty","balisesEtFiltres","obj","ordinaux","chiffres","match","A","JA","J","JS","Ml","JSl","lettres","toLowerCase","formatageDeJour","format","erreur","rappel","df","dd","dobj","pro","frmt","err","tvg","jjVersJulien","c","jjVersRepublicain","tempJj","equinox","decade","jourSemaineJulien","objGregorien","js","od","jm","objRepublicain","jd","remplacements","texte","regex","options","data","RegExp","republicainVersJj","rjmcVersRdc","rjmc","rjmcVersRjdc","romainVersArabe","tempRomain","saisieValide","tempSaisie","split","tabGregorien","limites","iesaisie","saisieGregorien","tab","dateJulienne","dateRepublicaine","concat","tabRepublicain","saisieRepublicain","p1","rva","dateGregorienne","Jour","variables","gregorien","julien","republicain"],"mappings":"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","file":"acte.min.js","sourcesContent":["/* POLYFILL: Internet Explorer 8 => Array.prototype.reduce */\n/* istanbul ignore if  */\nif (!Array.prototype.reduce) {\n  // jscs:disable\n  Array.prototype.reduce = function (callback /*, initialValue*/ ) {\n    'use strict';\n\n    if (this == null) {\n      throw new TypeError(\n        'Array.prototype.reduce called on null or undefined');\n    }\n    if (typeof callback !== 'function') {\n      throw new TypeError(callback + ' is not a function');\n    }\n    var t = Object(this),\n      len = t.length >>> 0,\n      k = 0,\n      value;\n    if (arguments.length == 2) {\n      value = arguments[1];\n    } else {\n      while (k < len && !(k in t)) {\n        k++;\n      }\n      if (k >= len) {\n        throw new TypeError('Reduce of empty array with no initial value');\n      }\n      value = t[k++];\n    }\n    for (; k < len; k++) {\n      if (k in t) {\n        value = callback(value, t[k], k, t);\n      }\n    }\n    return value;\n  };\n  // jscs:enable\n}\n\n/**\n * acte - Librairie Javascript pour manipuler des données généalogiques.\n * @copyright 2015-Present, Gilles Toubiana\n * @namespace acte\n * @version 0.0.15\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @license MIT\n */\n\n(function () {\n  function universalModuleDefinition(root, factory) {\n    var tempRoot = root;\n\n    /* istanbul ignore next */\n    if (typeof exports === 'object' && typeof module === 'object') {\n      module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n      define([], factory);\n    } else if (typeof exports === 'object') {\n      exports.acte = factory();\n    } else {\n      tempRoot.acte = factory();\n    }\n  }\n\n  return universalModuleDefinition;\n})()(this, function () {\n  function umdCallback() {\n    'use strict';\n\n    /** @namespace */\n    /* eslint-disable no-use-before-define */\n\n    var acte = acte || {};\n    /* eslint-enable no-use-before-define */\n    /* istanbul ignore next */\n    function _classCallCheck(instance, Constructor) {\n      if (!(instance instanceof Constructor)) {\n        throw new TypeError(\"Cannot call a class as a function\");\n      }\n    }\n\n    /**\n     * Jours juliens des équinoxes de l'an 1000 à l'an 2000.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @see {@link http://fourmilab.ch/documents/calendar/|JDE0tab2000}\n     * @constant {Array}\n     */\n    var jde0Tab2000 = [\n      [2451623.80984, 365242.37404, 0.05169, -0.00411, -0.00057],\n      [2451716.56767, 365241.62603, 0.00325, 0.00888, -0.00030],\n      [2451810.21715, 365242.01767, -0.11575, 0.00337, 0.00078],\n      [2451900.05952, 365242.74049, -0.06223, -0.00823, 0.00032]\n    ];\n\n    /**\n     * Nombre de jours, sur Terre, pour que le Soleil retourne à la même\n     * position\n     * dans le cycle des saisons.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @see {@link http://fourmilab.ch/documents/calendar/|TropicalYear}\n     * @constant {Number}\n     */\n    var anneeTropique = 365.24219878;\n\n    /**\n     * Coefficient des sinus et cosinus de l'argument pour la nutation.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @see {@link http://fourmilab.ch/documents/calendar/|nutArgCoeff}\n     * @constant {Array}\n     */\n    var argNutCoeff = [-171996, -1742, 92095, 89, -13187, -16, 5736, -31, -\n      2274, -2, 977, -5, 2062, 2, -895, 5, 1426, -34, 54, -1, 712, 1, -7, 0, -\n      517, 12, 224, -6, -386, -4, 200, 0, -301, 0, 129, -1, 217, -5, -95, 3, -\n      158, 0, 0, 0, 129, 1, -70, 0, 123, 0, -53, 0, 63, 0, 0, 0, 63, 1, -33,\n      0, -59, 0, 26, 0, -58, -1, 32, 0, -51, 0, 27, 0, 48, 0, 0, 0, 46, 0, -\n      24, 0, -38, 0, 16, 0, -31, 0, 13, 0, 29, 0, 0, 0, 29, 0, -12, 0, 26,\n      0, 0, 0, -22, 0, 0, 0, 21, 0, -10, 0, 17, -1, 0, 0, 16, 0, -8, 0, -16,\n      1, 7, 0, -15, 0, 9, 0, -13, 0, 7, 0, -12, 0, 6, 0, 11, 0, 0, 0, -10,\n      0, 5, 0, -8, 0, 3, 0, 7, 0, -3, 0, -7, 0, 0, 0, -7, 0, 3, 0, -7, 0, 3,\n      0, 6, 0, 0, 0, 6, 0, -3, 0, 6, 0, -3, 0, -6, 0, 3, 0, -6, 0, 3, 0, 5,\n      0, 0, 0, -5, 0, 3, 0, -5, 0, 3, 0, -5, 0, 3, 0, 4, 0, 0, 0, 4, 0, 0,\n      0, 4, 0, 0, 0, -4, 0, 0, 0, -4, 0, 0, 0, -4, 0, 0, 0, 3, 0, 0, 0, -3,\n      0, 0, 0, -3, 0, 0, 0, -3, 0, 0, 0, -3, 0, 0, 0, -3, 0, 0, 0, -3, 0, 0,\n      0, -3, 0, 0, 0\n    ];\n\n    /**\n     * Termes périodiques pour la nutation en longitude et obliquité.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @see {@link http://fourmilab.ch/documents/calendar/|nutArgMult}\n     * @constant {Array}\n     */\n    var argNutMult = [0, 0, 0, 0, 1, -2, 0, 0, 2, 2, 0, 0, 0, 2, 2, 0, 0, 0,\n      0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, -2, 1, 0, 2, 2, 0, 0, 0, 2, 1, 0,\n      0, 1, 2, 2, -2, -1, 0, 2, 2, -2, 0, 1, 0, 0, -2, 0, 0, 2, 1, 0, 0, -1,\n      2, 2, 2, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, -1, 2, 2, 0, 0, -1, 0, 1, 0,\n      0, 1, 2, 1, -2, 0, 2, 0, 0, 0, 0, -2, 2, 1, 2, 0, 0, 2, 2, 0, 0, 2, 2,\n      2, 0, 0, 2, 0, 0, -2, 0, 1, 2, 2, 0, 0, 0, 2, 0, -2, 0, 0, 2, 0, 0, 0, -\n      1, 2, 1, 0, 2, 0, 0, 0, 2, 0, -1, 0, 1, -2, 2, 0, 2, 2, 0, 1, 0, 0, 1, -\n      2, 0, 1, 0, 1, 0, -1, 0, 0, 1, 0, 0, 2, -2, 0, 2, 0, -1, 2, 1, 2, 0,\n      1, 2, 2, 0, 1, 0, 2, 2, -2, 1, 1, 0, 0, 0, -1, 0, 2, 2, 2, 0, 0, 2, 1,\n      2, 0, 1, 0, 0, -2, 0, 2, 2, 2, -2, 0, 1, 2, 1, 2, 0, -2, 0, 1, 2, 0,\n      0, 0, 1, 0, -1, 1, 0, 0, -2, -1, 0, 2, 1, -2, 0, 0, 0, 1, 0, 0, 2, 2,\n      1, -2, 0, 2, 0, 1, -2, 1, 0, 2, 1, 0, 0, 1, -2, 0, -1, 0, 1, 0, 0, -2,\n      1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, -1, -1, 1, 0, 0, 0, 1, 1, 0,\n      0, 0, -1, 1, 2, 2, 2, -1, -1, 2, 2, 0, 0, -2, 2, 2, 0, 0, 3, 2, 2, 2, -\n      1, 0, 2, 2\n    ];\n\n    /**\n     * Tableau des Delta T différence entre Temps universel et temps terrestre\n     * en secondes, observées pour les années paires de 1620 à 2016.\n     * @access private\n     * @author F.R. Stephenson & L.V. Morrison & IERS & Gilles Toubiana\n     * @since 0.0.15\n     * @see {@link https://www.staff.science.uu.nl/~gent0113/deltat/deltat_modern.htm|Valeurs} |\n     * {@link http://maia.usno.navy.mil/ser7/deltat.data|IERS} |\n     * {@link http://maia.usno.navy.mil/ser7/deltat.preds|Predictions}\n     * @constant {Array}\n     */\n    var delta = [124, 115, 106, 98, 91, 85, 79, 74, 70, 65, 62, 58, 55, 53,\n      50, 48, 46, 44, 42, 40, 37, 35, 33, 31, 28, 26, 24, 22, 20, 18, 16,\n      14, 13, 12, 11, 10, 9, 9, 9, 9, 9, 9, 9, 9, 10, 10, 10, 10, 10, 11,\n      11, 11, 11, 11, 11, 11, 11, 12, 12, 12, 12, 12, 13, 13, 13, 13, 14,\n      14, 14, 15, 15, 15, 15, 16, 16, 16, 16, 16, 17, 17, 17, 17, 17, 17,\n      17, 17, 16, 16, 15, 14, 13.7, 13.1, 12.7, 12.5, 12.5, 12.5, 12.5,\n      12.5, 12.5, 12.3, 12, 11.4, 10.6, 9.6, 8.6, 7.5, 6.6, 6, 5.7, 5.6,\n      5.7, 5.9, 6.2, 6.5, 6.8, 7.1, 7.3, 7.5, 7.7, 7.8, 7.88, 7.54, 6.4,\n      5.41, 2.92, 1.61, -1.02, -2.69, -3.64, -4.71, -5.4, -5.2, -5.46, -\n      5.63, -5.8, -5.87, -6.19, -6.44, -6.09, -4.66, -2.72, -0.02, 2.64,\n      5.37, 7.75, 10.46, 13.36, 16.01, 18.24, 20.25, 21.16, 22.41, 23.49,\n      23.86, 24.34, 24.02, 23.87, 23.86, 23.73, 23.96, 24.33, 25.3, 26.24,\n      27.28, 28.25, 29.15, 29.97, 30.72, 31.35, 32.18, 33.15, 34, 35.03,\n      36.54, 38.29, 40.18, 42.23, 44.94, 46.94, 49.03, 50.93, 52.53, 54.05,\n      55.08, 56.05, 57.18, 58.69, 60.35, 61.95, 63.23, 63.95, 64.39, 64.63,\n      64.97, 65.6, 66.2, 66.74, 67.45, 68.26\n    ];\n\n    /**\n     * Dixaines en toutes lettres.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @constant {Array}\n     */\n    var dixainesEnLettres = ['', 'dix', 'vingt', 'trente', 'quarante',\n      'cinquante', 'soixante', 'soixante', 'quatre-vingt', 'quatre-vingt'\n    ];\n\n    /**\n     * Jours juliens des équinoxes avant l'an 1000.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @see {@link http://fourmilab.ch/documents/calendar/|JDE0tab1000}\n     * @constant {Array}\n     */\n    var jde0Tab1000 = [\n      [1721139.29189, 365242.13740, 0.06134, 0.00111, -0.00071],\n      [1721233.25401, 365241.72562, -0.05323, 0.00907, 0.00025],\n      [1721325.70455, 365242.49558, -0.11677, -0.00297, 0.00074],\n      [1721414.39987, 365242.88257, -0.00769, -0.00933, -0.00006]\n    ];\n\n    /**\n     * Nombre de jours juliens correspondants à l'an 1 gregorien.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @see {@link http://fourmilab.ch/documents/calendar/|GREGORIAN_EPOCH}\n     * @constant {Number}\n     * @example\n     * jjVersGregorien(1721425.5); // [1, 1, 1]\n     * jjVersGregorien(jjAn1Gregorien); // [1, 1, 1]\n     */\n    var jjAn1Gregorien = 1721425.5;\n\n    /**\n     * Nombre de jours juliens correspondants à l'an 2000 grégorien.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @see {@link http://fourmilab.ch/documents/calendar/|J2000}\n     * @constant {Number}\n     * @example\n     * jjVersGregorien(2451545.0); // [2000, 1, 1]\n     * jjVersGregorien(jjAn2000Gregorien); // [2000, 1, 1]\n     */\n    var jjAn2000Gregorien = 2451545.0;\n\n    /**\n     * Nombre de jours juliens correspondants à l'adoption du calendrier\n     * républicain dans le journal officiel lors de la Commune de Paris\n     * en 1871.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.1\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @constant {Number}\n     * @example\n     * jjVersGregorien(2404504.5); // [1871, 3, 18]\n     * jjVersGregorien(jjDebutCommuneDeParis); // [1871, 3, 18]\n     * jjVersRepublicain(2404504.5); // [79, 6, 3, 7]\n     * jjVersRepublicain(jjDebutCommuneDeParis); // [79, 6, 3, 7]\n     */\n    var jjDebutCommuneDeParis = 2404504.5;\n\n    /**\n     * Nombre de jours juliens correspondants à l'adoption du calendrier\n     * grégorien.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.1\n     * @see {@link https://github.com/gtoubiana/acte.js|Projet sur GitHub}\n     * @constant {Number}\n     * @example\n     * jjVersGregorien(2299160.5); // [1582, 10, 15]\n     * jjVersGregorien(jjDebutGregorien); // [1582, 10, 15]\n     * jjVersJulien(2299160.5); // [1582, 10, 5]\n     * jjVersJulien(jjDebutGregorien); // [1582, 10, 5]\n     */\n    var jjDebutGregorien = 2299160.5;\n\n    /**\n     * Nombre de jours juliens correspondants à l'an 1 républicain.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @see {@link fourmilab.ch/documents/calendar/|FRENCH_REVOLUTIONARY_EPOCH}\n     * @constant {Number}\n     * @example\n     * jjVersGregorien(2375839.5); // [1792, 9, 22]\n     * jjVersGregorien(jjDebutRepublicain); // [1792, 9, 22]\n     * jjVersRepublicain(2375839.5); // [1, 1, 1, 1]\n     * jjVersRepublicain(jjDebutRepublicain); // [1, 1, 1, 1]\n     */\n    var jjDebutRepublicain = 2375839.5;\n\n    /**\n     * Nombre de jours juliens correspondants à l'abrogation du calendrier\n     * républicain dans le journal officiel lors de la Commune de Paris\n     * en 1871.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.1\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @constant {Number}\n     * @example\n     * jjVersGregorien(2404575.5); // [1871, 5, 28]\n     * jjVersGregorien(jjFinCommuneDeParis); // [1871, 5, 28]\n     * jjVersRepublicain(2404575.5); // [79, 9, 1, 8]\n     * jjVersRepublicain(jjFinCommuneDeParis); // [79, 9, 1, 8]\n     */\n    var jjFinCommuneDeParis = 2404575.5;\n\n    /**\n     * Nombre de jours juliens correspondants à l'abrogation du calendrier\n     * républicain.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.1\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @constant {Number}\n     * @example\n     * jjVersGregorien(2380686.5); // [1805, 12, 31]\n     * jjVersGregorien(jjFinRepublicain); // [1805, 12, 31]\n     * jjVersRepublicain(2380686.5); // [14, 4, 1, 10]\n     * jjVersRepublicain(jjFinRepublicain); // [14, 4, 1, 10]\n     */\n    var jjFinRepublicain = 2380686.5;\n\n    /**\n     * Nom des Jours Grégoriens et abbréviations courantes,\n     * sur 1, 2 et 3 caractères.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @constant {Array}\n     */\n    var jourGregorien = [\n      ['Dimanche', 'Dim', 'Dim', 'Di', 'D'],\n      ['Lundi', 'Lundi', 'Lun', 'Lu', 'L'],\n      ['Mardi', 'Mardi', 'Mar', 'Ma', 'M'],\n      ['Mercredi', 'Mercr', 'Mer', 'Me', 'M'],\n      ['Jeudi', 'Jeudi', 'Jeu', 'Je', 'J'],\n      ['Vendredi', 'Vendr', 'Ven', 'Ve', 'V'],\n      ['Samedi', 'Sam', 'Sam', 'Sa', 'S']\n    ];\n\n    /**\n     * Nom des Jours Republicains et abbréviations courantes,\n     * sur 1, 2 et 3 caractères.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @constant {Array}\n     */\n    var jourRepublicain = [\n      ['Primidi', 'Prim', 'Pri', 'Pi', 'P'],\n      ['Duodi', 'Duo', 'Duo', 'Du', 'D'],\n      ['Tridi', 'Tri', 'Tri', 'Ti', 'T'],\n      ['Quartidi', 'Quart', 'Qua', 'Qa', 'Q'],\n      ['Quintidi', 'Quint', 'Qui', 'Qi', 'Q'],\n      ['Sextidi', 'Sext', 'Sex', 'Sx', 'S'],\n      ['Septidi', 'Sept', 'Sep', 'Sp', 'S'],\n      ['Octidi', 'Oct', 'Oct', 'Oc', 'O'],\n      ['Nonidi', 'Non', 'Non', 'No', 'N'],\n      ['Décadi', 'Déc', 'Déc', 'Dé', 'D']\n    ];\n\n    /**\n     * Nom des Mois Grégoriens et abbréviations courantes,\n     * sur 1, 2 et 3 caractères.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @constant {Array}\n     */\n    var moisGregorien = [\n      ['Janvier', 'Janv', 'Jan', 'Jr', 'J'],\n      ['Février', 'Févr', 'Fév', 'Fr', 'F'],\n      ['Mars', 'Mars', 'Mar', 'Ms', 'M'],\n      ['Avril', 'Avr', 'Avr', 'Al', 'A'],\n      ['Mai', 'Mai', 'Mai', 'Mi', 'M'],\n      ['Juin', 'Juin', 'Jun', 'Jn', 'J'],\n      ['Juillet', 'Juill', 'Jul', 'Jt', 'J'],\n      ['Août', 'Août', 'Aoû', 'At', 'A'],\n      ['Septembre', 'Sept', 'Sep', 'Se', 'S'],\n      ['Octobre', 'Oct', 'Oct', 'Oe', 'O'],\n      ['Novembre', 'Nov', 'Nov', 'Ne', 'N'],\n      ['Décembre', 'Déc', 'Déc', 'De', 'D']\n    ];\n\n    /**\n     * Nom des Mois Republicains et abbréviations courantes,\n     * sur 1, 2 et 3 caractères.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @constant {Array}\n     */\n    var moisRepublicain = [\n      ['Vendémiaire', 'Vend', 'Vnd', 'Vd', 'V'],\n      ['Brumaire', 'Brum', 'Bru', 'Br', 'B'],\n      ['Frimaire', 'Frim', 'Fri', 'Fr', 'F'],\n      ['Nivôse', 'Nivô', 'Niv', 'Ni', 'N'],\n      ['Pluviôse', 'Pluv', 'Plu', 'Pl', 'P'],\n      ['Ventôse', 'Vent', 'Vnt', 'Vt', 'V'],\n      ['Germinal', 'Germ', 'Ger', 'Gr', 'G'],\n      ['Floréal', 'Flor', 'Flo', 'Fl', 'F'],\n      ['Prairial', 'Prai', 'Pra', 'Pr', 'P'],\n      ['Messidor', 'Mess', 'Mes', 'Ms', 'M'],\n      ['Thermidor', 'Ther', 'The', 'Tr', 'T'],\n      ['Fructidor', 'Fruc', 'Fru', 'Ft', 'F'],\n      ['Jour complémentaire', 'Comp', 'Cmp', 'Cp', 'C']\n    ];\n\n    /**\n     * Expressions régulières pour convertir les mois gregoriens.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.1\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @constant {Array}\n     */\n    var regexpGregorien = [{\n      regexp: 'jan(v)?(\\\\.)?(ier)?',\n      replace: '/1/'\n    }, {\n      regexp: 'Jer',\n      replace: '/1/'\n    }, {\n      regexp: 'f(é|e)v(r)?(\\\\.)?(ier)?',\n      replace: '/2/'\n    }, {\n      regexp: 'Fer',\n      replace: '/2/'\n    }, {\n      regexp: 'mar(s|\\\\.)?',\n      replace: '/3/'\n    }, {\n      regexp: 'avr(il|\\\\.)?',\n      replace: '/4/'\n    }, {\n      regexp: 'mai',\n      replace: '/5/'\n    }, {\n      regexp: 'ju(i)?n',\n      replace: '/6/'\n    }, {\n      regexp: 'ju(i)?l(\\\\.|l)?(\\\\.)?(et)?',\n      replace: '/7/'\n    }, {\n      regexp: 'Jet',\n      replace: '/7/'\n    }, {\n      regexp: 'ao(u|û)(t|\\\\.)?',\n      replace: '/8/'\n    }, {\n      regexp: 'sep(t)?(\\\\.)?(embre)?',\n      replace: '/9/'\n    }, {\n      regexp: '7bre',\n      replace: '/9/'\n    }, {\n      regexp: 'oct(obre|\\\\.)?',\n      replace: '/10/'\n    }, {\n      regexp: '8bre',\n      replace: '/10/'\n    }, {\n      regexp: 'nov(embre|\\\\.)?',\n      replace: '/11/'\n    }, {\n      regexp: '9bre',\n      replace: '/11/'\n    }, {\n      regexp: 'd(é|e)c(embre|\\\\.)?',\n      replace: '/12/'\n    }, {\n      regexp: 'Xbre',\n      replace: '/12/'\n    }, {\n      regexp: '10bre',\n      replace: '/12/'\n    }, {\n      regexp: '[^-()\\\\d/*+.]',\n      replace: ''\n    }];\n\n    /**\n     * Expressions régulières pour convertir les mois républicains.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.1\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @constant {Array}\n     */\n    var regexpRepublicain = [{\n      regexp: 'vend(é|e)miaire',\n      replace: '/1/'\n    }, {\n      regexp: 'brumaire',\n      replace: '/2/'\n    }, {\n      regexp: 'frimaire',\n      replace: '/3/'\n    }, {\n      regexp: 'niv(ô|o)se',\n      replace: '/4/'\n    }, {\n      regexp: 'pluvi(ô|o)se',\n      replace: '/5/'\n    }, {\n      regexp: 'vent(ô|o)se',\n      replace: '/6/'\n    }, {\n      regexp: 'germinal',\n      replace: '/7/'\n    }, {\n      regexp: 'flor(é|e)al',\n      replace: '/8/'\n    }, {\n      regexp: 'prairial',\n      replace: '/9/'\n    }, {\n      regexp: 'messidor',\n      replace: '/10/'\n    }, {\n      regexp: 'thermidor',\n      replace: '/11/'\n    }, {\n      regexp: 'fructidor',\n      replace: '/12/'\n    }, {\n      regexp: 'san(s-)?culottide(s)?',\n      replace: '/13/'\n    }, {\n      regexp: 'jour(s)?\\\\scompl(é|e)mentaire(s)?',\n      replace: '/13/'\n    }, {\n      regexp: 'd(é|e)cade\\\\s(\\\\d){1,2}',\n      replace: ''\n    }, {\n      regexp: '[^-()\\\\d/*+.]',\n      replace: ''\n    }];\n\n    /**\n     * Nombre de jours dans un siècle julien.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @see {@link http://fourmilab.ch/documents/calendar/|JulianCentury}\n     * @constant {Number}\n     */\n    var siecleJulien = 36525.0;\n\n    /**\n     * Termes périodiques pour obtenir des temps réels.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @see {@link http://fourmilab.ch/documents/calendar/|EquinoxpTerms}\n     * @constant {Array}\n     */\n    var termesPerEquinoxes = [485, 324.96, 1934.136, 203, 337.23, 32964.467,\n      199, 342.08, 20.186, 182, 27.85, 445267.112, 156, 73.14, 45036.886,\n      136, 171.52, 22518.443, 77, 222.54, 65928.934, 74, 296.72, 3034.906,\n      70, 243.58, 9037.513, 58, 119.81, 33718.147, 52, 297.17, 150.678, 50,\n      21.02, 2281.226, 45, 247.54, 29929.562, 44, 325.15, 31555.956, 29,\n      60.93, 4443.417, 18, 155.12, 67555.328, 17, 288.79, 4562.452, 16,\n      198.04, 62894.029, 14, 199.76, 31436.921, 12, 95.39, 14577.848, 12,\n      287.11, 31931.756, 12, 320.81, 34777.259, 9, 227.73, 1222.114, 8,\n      15.45, 16859.074\n    ];\n\n    /**\n     * Unités en toutes lettres.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @constant {Array}\n     */\n    var unitesEnLettres = ['', 'un', 'deux', 'trois', 'quatre', 'cinq', 'six',\n      'sept', 'huit', 'neuf', 'dix', 'onze', 'douze', 'treize', 'quatorze',\n      'quinze', 'seize', 'dix-sept', 'dix-huit', 'dix-neuf'\n    ];\n\n    /**\n     * Pour convertir des degrés en radians.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|dtr}\n     * @param  {Number} d - Angle en degrés\n     * @return {Number} Angle en radians\n     * @example\n     * degresVersRadians(90); // 1.5707963267948966\n     */\n    var degresVersRadians = function () {\n      function degresVersRadians(d) {\n        var result = d * Math.PI / 180.0;\n\n        return result;\n      }\n\n      return degresVersRadians;\n    }();\n\n    /**\n     * Pour normaliser un angle entre 0 et 360 degrés.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|fixangle}\n     * @param  {Number} a - Angle en degrés\n     * @return {Number} Angle entre 0 et 360 degrés\n     * @example\n     * normaliserDegres(375); // 15\n     */\n    var normaliserDegres = function () {\n      function normaliserDegres(a) {\n        var result = a - 360.0 * Math.floor(a / 360.0);\n\n        return result;\n      }\n\n      return normaliserDegres;\n    }();\n\n    /**\n     * Pour convertir des radians en degrés.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|rtd}\n     * @param  {Number} r - Angle en radians\n     * @return {Number} Angle en degrés\n     * @example\n     * radiansVersDegres(1.5707963267948966); // 90\n     */\n    var radiansVersDegres = function () {\n      function radiansVersDegres(r) {\n        var result = r * 180.0 / Math.PI;\n\n        return result;\n      }\n\n      return radiansVersDegres;\n    }();\n\n    /**\n     * Pour calculer les restes avec des nombres décimaux.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|mod}\n     * @param  {Number} a - Nombre à diviser\n     * @param  {Number} b - Diviseur\n     * @return {Number} Reste de a par b\n     * @example\n     * reste(3,2); // 1\n     */\n    var reste = function () {\n      function reste(a, b) {\n        var result = a - b * Math.floor(a / b);\n\n        return result;\n      }\n\n      return reste;\n    }();\n\n    /**\n     * Pour calculer le sinus d'un angle en degrés.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|dsin}\n     * @param  {Number} d - Angle en degrés\n     * @return {Number} Sinus de l'angle en degrés\n     * @example\n     * sinus(90); // 1\n     */\n    var sinus = function () {\n      function sinus(d) {\n        var result = Math.sin(degresVersRadians(d));\n\n        return result;\n      }\n\n      return sinus;\n    }();\n\n    /**\n     * Pour calculer le cosinus d'un angle en degrés.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|dcos}\n     * @param  {Number} d - Angle en degrés\n     * @return {Number} Cosinus de l'angle en degrés\n     * @example\n     * cosinus(0); // 1\n     */\n    var cosinus = function () {\n      function cosinus(d) {\n        var result = Math.cos(degresVersRadians(d));\n\n        return result;\n      }\n\n      return cosinus;\n    }();\n\n    /**\n     * Pour calculer le nombre de jours juliens d'une equinoxe ou d'un solstice.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|equinox}\n     * @param  {Number} an - Année\n     * @param  {Number} item - L'item à calculer :\n     * 0 = Equinoxe de Mars,\n     * 1 = Solstice de Juin,\n     * 2 = Equinoxe de Septembre,\n     * 3 = Solstice de Décembre\n     * @return {Number} Le nombre de jours juliens pour l'equinoxe ou solstice\n     * @example\n     * equinoxe(2015,0); // 2457102.4488504543\n     */\n    var equinoxe = function () {\n      function equinoxe(an, item) {\n        var i = void 0;\n        var j = void 0;\n        var Jde0tab = void 0;\n        var S = void 0;\n        var Y = void 0;\n\n        if (an < 1000) {\n          Jde0tab = jde0Tab1000;\n          Y = an / 1000;\n        } else {\n          Jde0tab = jde0Tab2000;\n          Y = (an - 2000) / 1000;\n        }\n        var Jde0 = Jde0tab[item][0] + Jde0tab[item][1] * Y + Jde0tab[item][\n          2\n        ] * Math.pow(Y, 2) + Jde0tab[item][3] * Math.pow(Y, 3) + Jde0tab[\n          item][4] * Math.pow(Y, 4);\n        var T = (Jde0 - 2451545.0) / 36525;\n        var W = 35999.373 * T - 2.47;\n        var deltaL = 1 + 0.0334 * cosinus(W) + 0.0007 * cosinus(2 * W);\n\n        S = 0;\n        for (i = j = 0; i < 24; i++) {\n          S += termesPerEquinoxes[j] * cosinus(termesPerEquinoxes[j + 1] +\n            termesPerEquinoxes[j + 2] * T);\n          j += 3;\n        }\n\n        return Jde0 + S * 0.00001 / deltaL;\n      }\n\n      return equinoxe;\n    }();\n\n    /**\n     * Pour calculer la différence entre temps terrestre et temps universel,\n     * en secondes.\n     * @access private\n     * @author John Walker & Gilles Toubiana\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|deltat} |\n     * {@link http://eclipse.gsfc.nasa.gov/SEcat5/deltatpoly.html|Expressions} |\n     * {@link http://www.projectpluto.com/dt.htm|Formules}\n     * @param {Number} an - Année\n     * @return {Number} Différence entre temps terrestre et temps universel,\n     * en secondes\n     * @example\n     * deltaT(2015); // 67.855\n     */\n\n    var deltaT = function () {\n      function deltaT(an) {\n        var dt = void 0;\n        var maxindex = 1618 + delta.length * 2;\n\n        if (an >= 1620 && an < maxindex) {\n          var i = (an - 1620) / 2;\n\n          dt = (an - 1620) % 2 ? (delta[i - 0.5] + delta[i + 0.5]) / 2 :\n            delta[i];\n        } else {\n          var t = (an - 2000) / 100;\n\n          if (an === maxindex) {\n            dt = delta[delta.length - 1];\n          } else if (an < 948) {\n            dt = 2177 + 497 * t + 44.1 * t * t;\n          } else {\n            dt = 102 + 102 * t + 25.3 * t * t;\n            if (an > 2000 && an < 2100) {\n              dt += 0.37 * (an - 2100);\n            }\n          }\n        }\n\n        return dt;\n      }\n\n      return deltaT;\n    }();\n\n    /**\n     * Pour calculer l'obliquité de l'écliptique pour un nombre de jours juliens.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|obliqeq}\n     * @param  {Number} jj - Nombre de jours juliens\n     * @return {Number} Obliquité de l'écliptique\n     * @example\n     * obliquiteEcliptique(2457333.5); // 23.437230456425635\n     */\n    var obliquiteEcliptique = function () {\n      function obliquiteEcliptique(jj) {\n        var oTerms = [-4680.93, -1.55, 1999.25, -51.38, -249.67, -39.05,\n          7.12, 27.87, 5.79, 2.45\n        ];\n        var u = (jj - jjAn2000Gregorien) / (siecleJulien * 100);\n        var v = u;\n        var eps = 23 + 26 / 60.0 + 21.448 / 3600.0;\n        var i = void 0;\n\n        if (Math.abs(u) < 1.0) {\n          for (i = 0; i < 10; i++) {\n            eps += oTerms[i] / 3600.0 * v;\n            v *= u;\n          }\n        }\n\n        return eps;\n      }\n\n      return obliquiteEcliptique;\n    }();\n\n    /**\n     * Pour calculer la position du soleil.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|sunpos}\n     * @param  {Number} jj - Nombre de jours juliens\n     * @return {Array} Position du soleil : Angles en degrés.\n     * [0] Longitude moyenne géométrique du Soleil,\n     * [1] Anomalie moyenne du Soleil,\n     * [2] Excentricité de l'orbite de la Terre,\n     * [3] Équation du centre du Soleil,\n     * [4] Longitude réelle du Soleil,\n     * [5] Anomalie réelle du Soleil,\n     * [6] Rayon vecteur du Soleil,\n     * [7] Longitude apparente du Soleil pour une equinoxe,\n     * [8] Ascension réelle du Soleil,\n     * [9] Déclinaison réelle du Soleil,\n     * [10] Ascension apparente du Soleil,\n     * [11] Déclinaison apparente du Soleil\n     * @example\n     * positionSoleil(2457333.5); //[225.88621192607388, 302.6763369039327,\n     * // 0.016701968773317977, -1.6291396906692837, 224.2570722354046,\n     * // 301.0471972132634, 0.9911840619194138, 224.25125854183977,\n     * // 221.79690960202632, -16.115660127694625, 221.79168151491098,\n     * // -16.112230690435588]\n     */\n    var positionSoleil = function () {\n      function positionSoleil(jj) {\n        var T = (jj - jjAn2000Gregorien) / siecleJulien;\n        var t2 = T * T;\n        var l0 = normaliserDegres(280.46646 + 36000.76983 * T + 0.0003032 *\n          t2);\n        var M = normaliserDegres(357.52911 + 35999.05029 * T + -0.0001537 *\n          t2);\n        var e = 0.016708634 + -0.000042037 * T + -0.0000001267 * t2;\n        var C = (1.914602 + -0.004817 * T + -0.000014 * t2) * sinus(M) + (\n          0.019993 - 0.000101 * T) * sinus(2 * M) + 0.000289 * sinus(3 *\n          M);\n        var sunLong = l0 + C;\n        var sunAnomaly = M + C;\n        var sunR = 1.000001018 * (1 - e * e) / (1 + e * cosinus(sunAnomaly));\n        var Omega = 125.04 - 1934.136 * T;\n        var Lambda = sunLong + -0.00569 + -0.00478 * sinus(Omega);\n        var epsilon0 = obliquiteEcliptique(jj);\n        var epsilon = epsilon0 + 0.00256 * cosinus(Omega);\n        var Alpha = normaliserDegres(radiansVersDegres(Math.atan2(cosinus(\n          epsilon0) * sinus(sunLong), cosinus(sunLong))));\n        var Delta = radiansVersDegres(Math.asin(sinus(epsilon0) * sinus(\n          sunLong)));\n        var AlphaApp = normaliserDegres(radiansVersDegres(Math.atan2(\n          cosinus(epsilon) * sinus(Lambda), cosinus(Lambda))));\n        var DeltaApp = radiansVersDegres(Math.asin(sinus(epsilon) * sinus(\n          Lambda)));\n\n        return [l0, M, e, C, sunLong, sunAnomaly, sunR, Lambda, Alpha,\n          Delta, AlphaApp, DeltaApp\n        ];\n      }\n\n      return positionSoleil;\n    }();\n\n    /**\n     * Pour calculer la nutation en longitude (deltaPsi),\n     * et obliquité (deltaEpsilon) pour un nombre de jours juliens.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|nutation}\n     * @param  {Number} jj - Nombre de jours juliens\n     * @return {Array} Nutation en [0] longitude et [1] obliquité en degrés\n     * @example\n     * nutation(2457333.5);\n     * // [-0.000514859690208824, -0.0025586654864005456]\n     */\n    var nutation = function () {\n      function nutation(jj) {\n        var ta = [];\n        var t = (jj - 2451545.0) / 36525.0;\n        var t2 = t * t;\n        var t3 = t * t2;\n        var dp = 0;\n        var de = 0;\n\n        ta[0] = degresVersRadians(297.850363 + 445267.11148 * t - 0.0019142 *\n          t2 + t3 / 189474.0);\n        ta[1] = degresVersRadians(357.52772 + 35999.05034 * t - 0.0001603 *\n          t2 - t3 / 300000.0);\n        ta[2] = degresVersRadians(134.96298 + 477198.867398 * t + 0.0086972 *\n          t2 + t3 / 56250.0);\n        ta[3] = degresVersRadians(93.27191 + 483202.017538 * t - 0.0036825 *\n          t2 + t3 / 327270);\n        ta[4] = degresVersRadians(125.04452 - 1934.136261 * t + 0.0020708 *\n          t2 + t3 / 450000.0);\n        for (var i = 0; i < 5; i++) {\n          ta[i] -= 2 * Math.PI * Math.floor(ta[i] / (2 * Math.PI));\n        }\n        var to10 = t / 10.0;\n\n        for (var _i = 0; _i < 63; _i++) {\n          var ang = 0;\n\n          for (var j = 0; j < 5; j++) {\n            if (argNutMult[_i * 5 + j] !== 0) {\n              ang += argNutMult[_i * 5 + j] * ta[j];\n            }\n          }\n          dp += (argNutCoeff[_i * 4 + 0] + argNutCoeff[_i * 4 + 1] * to10) *\n            Math.sin(ang);\n          de += (argNutCoeff[_i * 4 + 2] + argNutCoeff[_i * 4 + 3] * to10) *\n            Math.cos(ang);\n        }\n\n        return [dp / (3600.0 * 10000.0), de / (3600.0 * 10000.0)];\n      }\n\n      return nutation;\n    }();\n\n    /**\n     * Pour calculer l'équation du temps pour un moment précis.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|equationOfTime}\n     * @param  {Number} jj - Nombre de jours juliens\n     * @return {Number} Équation du temps pour une fraction de jour\n     * @example\n     * equationDuTemps(2457333.5); // 0.002839122270852552\n     */\n    var equationDuTemps = function () {\n      function equationDuTemps(jj) {\n        var tau = (jj - jjAn2000Gregorien) / (siecleJulien * 10);\n        var l0 = normaliserDegres(280.4664567 + 360007.6982779 * tau +\n          0.03032028 * Math.pow(tau, 2) + Math.pow(tau, 3) / 49931 + -(\n            Math.pow(tau, 4) / 15300) + -(Math.pow(tau, 5) / 2000000));\n        var alpha = positionSoleil(jj)[10];\n        var deltaPsi = nutation(jj)[0];\n        var epsilon = obliquiteEcliptique(jj) + nutation(jj)[1];\n        var E = l0 + -0.0057183 + -alpha + deltaPsi * cosinus(epsilon);\n\n        E -= 20.0 * Math.floor(E / 20.0);\n\n        return E / (24 * 60);\n      }\n\n      return equationDuTemps;\n    }();\n\n    /**\n     * Pour calculer le nombre de jours juliens et la fraction de l'équinoxe\n     * de septembre au méridien de Paris pour une année grégorienne.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|equinoxe_a_paris}\n     * @param {Number} an - Année grégorienne\n     * @return {Number} Nombre de jours juliens et fraction de l'équinoxe\n     * de septembre au méridien de Paris pour une année grégorienne\n     * @example\n     * fractionEquinoxe(2015); // 2457288.855100263\n     */\n    var fractionEquinoxe = function () {\n      function fractionEquinoxe(an) {\n        var equJED = equinoxe(an, 2);\n        var equJD = equJED - deltaT(an) / (24 * 60 * 60);\n        var equAPP = equJD + equationDuTemps(equJED);\n        var dtParis = (2 + 20 / 60.0 + 15 / (60 * 60.0)) / 360;\n\n        return equAPP + dtParis;\n      }\n\n      return fractionEquinoxe;\n    }();\n\n    /**\n     * Pour calculer le nombre de jours juliens correspondant à l'équinoxe\n     * de septembre au méridien de Paris, pour une année grégorienne.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|paris_equinoxe_jd}\n     * @param {Number} an - Année grégorienne\n     * @return {Number} Nombre de jours juliens pour l'équinoxe de septembre\n     * @example\n     * equinoxeAParis(2015); // 2457288.5\n     */\n    var equinoxeAParis = function () {\n      function equinoxeAParis(an) {\n        var ep = fractionEquinoxe(an);\n\n        return Math.floor(ep - 0.5) + 0.5;\n      }\n\n      return equinoxeAParis;\n    }();\n\n    /**\n     * Pour déterminer si une année grégorienne est bissextile.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|leap_gregorian}\n     * @param {Number} an - Année grégorienne\n     * @return {Boolean} Est-ce une année bissextile ?\n     * @example\n     * gregorienBissextile(2012); // true\n     */\n    var gregorienBissextile = function () {\n      function gregorienBissextile(an) {\n        var result = an % 4 === 0 && !(an % 100 === 0 && an % 400 !== 0);\n\n        return result;\n      }\n\n      return gregorienBissextile;\n    }();\n\n    /**\n     * Pour calculer le nombre de jours juliens (jj) à partir d'une date\n     * grégorienne.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|gregorian_to_jd}\n     * @param {Number} an - Année grégorienne\n     * @param {Number} mois - Mois grégorien\n     * @param {Number} jour - Jour grégorien\n     * @return {Number} Nombre de jours juliens\n     * @example\n     * gregorienVersJj(2015,11,7); // 2457333.5\n     */\n    var gregorienVersJj = function () {\n      function gregorienVersJj(an, mois, jour) {\n        var anneeBissextile = gregorienBissextile(an) ? -1 : -2;\n\n        return jjAn1Gregorien - 1 + 365 * (an - 1) + Math.floor((an - 1) /\n            4) + -Math.floor((an - 1) / 100) + Math.floor((an - 1) / 400) +\n          Math.floor((367 * mois - 362) / 12 + (mois <= 2 ? 0 :\n            anneeBissextile) + jour);\n      }\n\n      return gregorienVersJj;\n    }();\n\n    /**\n     * Pour calculer une date grégorienne à partir du nombre de jours juliens.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|jd_to_gregorian}\n     * @param {Number} jj - Nombre de jours juliens\n     * @return {Array} [0] Année, [1] Mois et [2] Jour grégorien\n     * @example\n     * jjVersGregorien(2457333.5); // [2015, 11, 7]\n     */\n    var jjVersGregorien = function () {\n      function jjVersGregorien(jj) {\n        var wjd = Math.floor(jj - 0.5) + 0.5;\n        var depoch = wjd - jjAn1Gregorien;\n        var quadricent = Math.floor(depoch / 146097);\n        var dqc = reste(depoch, 146097);\n        var cent = Math.floor(dqc / 36524);\n        var dcent = reste(dqc, 36524);\n        var quad = Math.floor(dcent / 1461);\n        var dquad = reste(dcent, 1461);\n        var yindex = Math.floor(dquad / 365);\n        var an = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n        var anneeBissextile = gregorienBissextile(an) ? 1 : 2;\n\n        if (!(cent === 4 || yindex === 4)) an++;\n        var yearday = wjd - gregorienVersJj(an, 1, 1);\n        var leapadj = wjd < gregorienVersJj(an, 3, 1) ? 0 : anneeBissextile;\n        var mois = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n        var jour = wjd - gregorienVersJj(an, mois, 1) + 1;\n\n        return [an, mois, jour];\n      }\n\n      return jjVersGregorien;\n    }();\n\n    /**\n     * Pour mettre en capitale le premier caractère d'une chaîne.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {String} str - la chaîne à modifier\n     * @return {String} la chaîne avec le premier caractère en capitale\n     * @example\n     * initialeEnCapitale(\"vingt\"); // \"Vingt\"\n     */\n    var initialeEnCapitale = function () {\n      function initialeEnCapitale(str) {\n        var result = str.charAt(0).toUpperCase() + str.slice(1);\n\n        return result;\n      }\n\n      return initialeEnCapitale;\n    }();\n\n    /**\n     * Pour convertir uniquement 'un' en nombre ordinal.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {Number} saisie - le nombre en lettres\n     * @param {String} [genre] - par défaut, le genre masculin est appliqué.\n     * Pour utiliser le genre féminin, il suffit d'ajouter un argument.\n     * @return {String} le nombre - ordinal ou non - en lettres\n     * @example\n     * premierOrdinalEnLettres(\"Un\"); // \"Premier\"\n     * premierOrdinalEnLettres(\"Un\", 1); // \"Première\"\n     * premierOrdinalEnLettres(\"Deux\"); // \"Deux\"\n     * premierOrdinalEnLettres(\"Vingt-trois\"); // \"Vingt-trois\"\n     */\n    var premierOrdinalEnLettres = function () {\n      function premierOrdinalEnLettres(saisie, genre) {\n        var str = saisie.toString();\n        var prem = genre ? 'ère' : 'er';\n        var result = str === 'Un' ? 'Premi' + prem : str;\n\n        return result;\n      }\n\n      return premierOrdinalEnLettres;\n    }();\n\n    /**\n     * Pour ajouter un préfixe de 0 à un nombre compris entre 1 et 9.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {Number} n - le nombre à préfixer\n     * @return {String} le nombre avec préfixe zéro\n     * @example\n     * prefixeZero(20); // 20\n     * prefixeZero(9); // \"09\"\n     * prefixeZero(0); // 0\n     * prefixeZero(-4); // -4\n     */\n    var prefixeZero = function () {\n      function prefixeZero(n) {\n        var result = n < 10 && n > 0 ? '0' + n : n;\n\n        return result;\n      }\n\n      return prefixeZero;\n    }();\n\n    /**\n     * Pour convertir les nombres en toutes lettres.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {Number} n - le nombre en chiffres\n     * @param {String} [r] - par défaut, la réforme de 1990 est appliquée.\n     * Pour utiliser l'ancienne notation, il suffit d'ajouter un argument.\n     * @return {String} le nombre en toutes lettres\n     * @example\n     * nombreEnLettres(2371); // \"Deux-mille-trois-cent-soixante-et-onze\"\n     * nombreEnLettres(1799,1); // \"Mille sept cent quatre-vingt-dix-neuf\"\n     */\n    var nombreEnLettres = function () {\n      function nombreEnLettres(n, r) {\n        var mill = void 0;\n        var sepcen = void 0;\n        var centl = void 0;\n        var sepdix = void 0;\n        var dixl = void 0;\n        var sepunit = void 0;\n        var unitl = void 0;\n        var dizunit = void 0;\n        var res = void 0;\n\n        if (typeof n === 'number' && n > -10000 && n < 10000) {\n          // UnitesEnLettres\n          var u = unitesEnLettres;\n\n          // DixainesEnLettres\n          var v = dixainesEnLettres;\n\n          // Saisie en valeur absolue\n          var abs = Math.abs(n);\n          var splus = r ? ' ' : '-';\n\n          // Milliers\n          var mil = parseInt(abs / 1000, 10);\n\n          // Centaines\n          var cent = parseInt(abs % 1000 / 100, 10);\n\n          // Dixaines\n          var dix = parseInt(abs % 100 / 10, 10);\n\n          // Unités\n          var unit = parseInt(abs % 10, 10);\n\n          // Milliers\n          if (mil === 1) {\n            // Un seul millier\n            mill = 'mille';\n          } else if (mil > 1) {\n            // Plusieurs milliers\n            mill = '' + u[mil] + splus + 'mille';\n          } else {\n            // Pas de milliers\n            mill = '';\n          }\n\n          // Centaines\n          sepcen = mil > 0 ? splus : '';\n          if (cent === 1) {\n            // Une seule centaine\n            centl = sepcen + 'cent';\n          } else if (cent > 1 && dix === 0 && unit === 0) {\n            // Plusieurs centaines\n            centl = '' + sepcen + u[cent] + splus + 'cents';\n          } else if (cent > 1) {\n            // Plusieurs centaines suivies de dizaines\n            centl = '' + sepcen + u[cent] + splus + 'cent';\n          } else {\n            // Pas de centaines\n            centl = '';\n          }\n\n          // Dizaines et unités\n          sepdix = mil + cent > 0 && dix + unit > 0 ? splus : '';\n          if (dix > 0) {\n            dixl = v[dix];\n\n            // Splus\n            sepunit = '-';\n          } else {\n            dixl = '';\n            sepunit = '';\n          }\n\n          // Unités\n          unitl = abs > 0 ? sepunit + u[unit] : 'zéro';\n\n          // Multiples de 10\n          if ((dix * 10 + unit) % 10 === 0) {\n            unitl = '';\n          }\n\n          // Dix, soixante-dix, quatre-vingt-dix\n          if ((dix === 1 || dix === 7 || dix === 9) && unit === 0) {\n            dixl = dix === 1 ? 'dix' : v[dix] + '-dix';\n            unitl = dix === 1 ? '' : u[unit];\n          }\n\n          // Onze+\n          // soixante-et-onze+, quatre-vingt-onze+\n          if ((dix === 1 || dix === 7 || dix === 9) && unit >= 1) {\n            dixl = dix === 1 ? '' : v[dix];\n            if (dix === 1) {\n              sepunit = '';\n            }\n            unitl = dix === 7 && unit === 1 ? splus + 'et' + splus + u[10 +\n              unit] : sepunit + u[10 + unit];\n          }\n\n          // Vingt-et-un, trente-et-un, quarante-et-un,\n          // cinquante-et-un, soixante-et-un\n          if (dix >= 2 && dix <= 6 && unit === 1) {\n            unitl = splus + 'et' + splus + u[unit];\n          }\n\n          // Pluriel sur 80\n          if (dix === 8 && unit === 0) {\n            dixl = v[dix] + 's';\n            unitl = '';\n          }\n\n          dizunit = sepdix + dixl + unitl;\n\n          // Si nombre négatif\n          var avjc = n < 0 ? 'Moins ' : '';\n\n          res = abs > 0 ? initialeEnCapitale(avjc + mill + centl + dizunit) :\n            'Zéro';\n        } else {\n          res = '';\n        }\n        return res;\n      }\n\n      return nombreEnLettres;\n    }();\n\n    /**\n     * Pour convertir les nombres en toutes lettres en nombres ordinaux.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {Number} saisie - le nombre en lettres\n     * @param {String} [genre] - par défaut, le genre masculin est appliqué.\n     * Pour utiliser le genre féminin, il suffit d'ajouter un argument.\n     * @return {String} le nombre ordinal en lettres\n     * @example\n     * ordinauxEnLettres(\"Un\"); // \"Premier\"\n     * ordinauxEnLettres(\"Un\", 1); // \"Première\"\n     * ordinauxEnLettres(\"Deux\"); // \"Deuxième\"\n     * ordinauxEnLettres(\"Vingt-trois\"); // \"Vingt-troisième\"\n     */\n    var ordinauxEnLettres = function () {\n      function ordinauxEnLettres(saisie, genre) {\n        var str = saisie.toString();\n        var result = void 0;\n\n        // Dernier caractère\n        /* eslint-disable indent */\n        switch (str.slice(-1)) {\n        case 't':\n        case 'x':\n          result = str + 'ième';\n          break;\n        case 'q':\n          result = str + 'uième';\n          break;\n        case 'f':\n          result = str.slice(0, str.length - 1) + 'vième';\n          break;\n        case 'e':\n          result = str.slice(0, str.length - 1) + 'ième';\n          break;\n        case 's':\n          result = str.slice(-2) === 'ts' ? str.slice(0, str.length - 1) +\n            'ième' : str + 'ième';\n          break;\n        case 'n':\n          if (str.slice(-5) === 'et-un' || str.slice(-5) === 'et un') {\n            result = str + 'ième';\n          } else {\n            result = premierOrdinalEnLettres(str, genre);\n          }\n          break;\n        default:\n          result = str + 'ième';\n        }\n\n        /* eslint-enable indent */\n        return result;\n      }\n\n      return ordinauxEnLettres;\n    }();\n\n    /**\n     * Pour convertir les nombres en nombres ordinaux.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {Number} n - le nombre en chiffres\n     * @param {String} prem - le suffixe pour le chiffre 1\n     * @param {String} exp - le suffixe pour les chiffres différents de 1\n     * @return {String} le nombre ordinal\n     * @example\n     * nombreOrdinal(1,\"er\",\"e\"); // \"1er\"\n     * nombreOrdinal(1,\"re\",\"e\"); // \"1re\"\n     * nombreOrdinal(2,\"er\",\"e\"); // \"2e\"\n     */\n    var nombreOrdinal = function () {\n      function nombreOrdinal(n, prem, exp) {\n        var result = n === 1 || n === '1er' || n === '1re' ? '1' + prem : n +\n          exp;\n\n        return result;\n      }\n\n      return nombreOrdinal;\n    }();\n\n    /**\n     * Pour créer un objet date grégorien valide.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.1\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {Number} jour - le jour du mois gregorien en chiffres\n     * @param {Number} mois - le mois gregorien en chiffres\n     * @param {Number} an - l'année gregorienne en chiffres\n     * @return {Object} L'objet date valide\n     * @example\n     * dateValide(10,12,34); // Sun Dec 10 34 00:00:00 GMT+0100 (CET)\n     */\n    var dateValide = function () {\n      function dateValide(jour, mois, an) {\n        var resultat = new Date(an, mois - 1, jour);\n\n        resultat.setFullYear(an);\n\n        return resultat;\n      }\n\n      return dateValide;\n    }();\n\n    /**\n     * Pour calculer le nombre de jours entre deux dates.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {Number} j1 - le jour du mois de la première date en chiffres\n     * @param {Number} m1 - le mois de la date de la première date en chiffres\n     * @param {Number} a1 - l'année de la date de la première date en chiffres\n     * @param {Number} j2 - le jour du mois de la deuxième date en chiffres\n     * @param {Number} m2 - le mois de la date de la deuxième date en chiffres\n     * @param {Number} a2 - l'année de la date de la deuxième date en chiffres\n     * @return {Number} le nombre de jours entre les deux dates\n     * @example\n     * periodeEnJours(1, 1, 2016, 15, 1, 2016]); // 15\n     * periodeEnJours(15, 1, 2016, 1, 1, 2016]); // 15\n     * periodeEnJours(1, 1, 2016, 1, 1, 2016]); // 1\n     */\n    var periodeEnJours = function () {\n      function periodeEnJours(j1, m1, a1, j2, m2, a2) {\n        var date1 = dateValide(j1, m1, a1);\n        var date2 = dateValide(j2, m2, a2);\n        var debut = date2 > date1 ? date1 : date2;\n        var fin = date2 > date1 ? date2 : date1;\n\n        return Math.ceil((fin - debut) / (1000 * 60 * 60 * 24)) + 1;\n      }\n\n      return periodeEnJours;\n    }();\n\n    /**\n     * Pour calculer le nombre de semaines depuis le début de l'année ou du mois.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {Number} j - le jour du mois grégorien\n     * @param {Number} m - le mois grégorien\n     * @param {Number} a - l'année grégorienne\n     * @param {Number} [mois] - par défaut, le calcul correspond à l'année.\n     * Pour calculer sur le mois en cours, il suffit d'ajouter un argument.\n     * @return {Number} le nombre de semaines\n     * @example\n     * semaineComplete(14, 7, 2016); // 28\n     * semaineComplete(14, 7, 2016, 1); // 2\n     */\n    var semaineComplete = function () {\n      function semaineComplete(j, m, a, mois) {\n        // Si l'argument mois existe, calcule depuis le début du mois.\n        // sinon depuis le début de l'année\n        var x = mois ? m : 1;\n        var jourSemaine = dateValide(1, x, a).getDay();\n\n        jourSemaine = jourSemaine === 0 ? 7 : jourSemaine;\n\n        // Si le premier jour < jeudi (4), ajouter une semaine\n        var n = jourSemaine <= 4 ? 1 : 0;\n        var nombreSemaines = (periodeEnJours(1, x, a, j, m, a) - (8 -\n          jourSemaine)) / 7;\n        var semainesValides = nombreSemaines > parseInt(nombreSemaines, 10) ?\n          parseInt(nombreSemaines, 10) + n + 1 : parseInt(nombreSemaines,\n            10) + n;\n\n        return semainesValides;\n      }\n\n      return semaineComplete;\n    }();\n\n    /**\n     * Pour convertir en nombre entier positif.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.1\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {Number} num - le nombre à convertir\n     * @return {Number} Le nombre entier positif\n     * @example\n     * absInt(-23.45); // 23\n     */\n    var absInt = function () {\n      function absInt(num) {\n        var result = Math.abs(parseInt(num, 10));\n\n        return result;\n      }\n\n      return absInt;\n    }();\n\n    /**\n     * Pour calculer l'année républicaine correspondant à un nombre de jours\n     * juliens.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link fourmilab.ch/documents/calendar/|annee_da_la_revolution}\n     * @param {Number} jj - Nombre de jours juliens\n     * @return {Array} [0] An républicain,\n     * [1] Nombre de jours juliens pour l'équinoxe de l'année républicaine\n     * @example\n     * anRepublicain(2379902.5); // [12, 2379857.5]\n     */\n    var anRepublicain = function () {\n      function anRepublicain(jj) {\n        var guess = jjVersGregorien(jj)[0] - 2;\n        var lasteq = equinoxeAParis(guess);\n\n        while (lasteq > jj) {\n          guess--;\n          lasteq = equinoxeAParis(guess);\n        }\n\n        var nexteq = lasteq - 1;\n\n        while (!(lasteq <= jj && jj < nexteq)) {\n          lasteq = nexteq;\n          guess++;\n          nexteq = equinoxeAParis(guess);\n        }\n        var adr = Math.round((lasteq - jjDebutRepublicain) / anneeTropique) +\n          1;\n\n        return [adr, lasteq];\n      }\n\n      return anRepublicain;\n    }();\n\n    /**\n     * Pour convertir des chiffres arabes en chiffres romains.\n     * @access private\n     * @author Iván Montes\n     * @since 0.0.1\n     * @license unknown\n     * @see {@link http://blog.stevenlevithan.com/?p=65#comment-16107|Blog}\n     * @param {Number} arabe - Chiffre arabe\n     * @return {String} Chiffre romain\n     * @example\n     * arabeVersRomain(2012); // 'MMXII'\n     */\n    var arabeVersRomain = function () {\n      function arabeVersRomain(arabe) {\n        var lookup = {\n          M: 1000,\n          CM: 900,\n          D: 500,\n          CD: 400,\n          C: 100,\n          XC: 90,\n          L: 50,\n          XL: 40,\n          X: 10,\n          IX: 9,\n          V: 5,\n          IV: 4,\n          I: 1\n        };\n        var tempArabe = Math.abs(arabe);\n        var sign = arabe < 0 ? '-' : '';\n        var romain = '';\n        var i = void 0;\n\n        for (i in lookup) {\n          /* istanbul ignore else  */\n          if (lookup.hasOwnProperty(i)) {\n            while (tempArabe >= lookup[i]) {\n              romain += i;\n              tempArabe -= lookup[i];\n            }\n          }\n        }\n\n        return sign + romain;\n      }\n\n      return arabeVersRomain;\n    }();\n\n    /**\n     * Pour appliquer les balises et filtres aux prototypes gregorien(),\n     * julien() et republicain().\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {Number} x - Saisie\n     * @param {Object} obj - Objet content les dates\n     * @return {String} Saisie filtrée\n     * @example\n     * balisesEtFiltres(x, dobj(tvg));\n     */\n    var balisesEtFiltres = function () {\n      function balisesEtFiltres(x, obj) {\n        var arabe = void 0;\n        var ordinaux = void 0;\n        var res = x;\n        var chiffres = true;\n\n        // BALISES\n        if (x.match(/A/)) {\n          if (x.match(/AN/)) {\n            // AN = Année\n            res = obj.A;\n          } else {\n            // A = Année\n            res = obj.A;\n          }\n        }\n        if (x.match(/J/)) {\n          if (x.match(/JA/)) {\n            // JA = Jour dans l'Année\n            res = obj.JA;\n          } else {\n            // J = Jour dans le mois\n            res = obj.J;\n          }\n        }\n        if (x.match(/M/)) {\n          if (x.match(/MA/)) {\n            // MA = Mois dans l'Année\n            res = obj.M;\n          } else if (x.match(/JM/)) {\n            // JM = Jour dans le Mois\n            res = obj.J;\n          } else {\n            // M = Mois dans l'année\n            res = obj.M;\n          }\n        }\n        if (x.match(/D/)) {\n          if (x.match(/DA/)) {\n            // DA = Décade/Semaine dans l'Année\n            res = obj.S;\n          } else if (x.match(/DM/)) {\n            // DM = Décade/Semaine dans le Mois\n            res = obj.D;\n          } else if (x.match(/JD/)) {\n            // JD = Jour de la Décade/Semaine\n            res = obj.JS;\n          } else {\n            // D = Décade/Semaine dans le mois\n            res = obj.D;\n          }\n        }\n        if (x.match(/S/)) {\n          if (x.match(/SA/)) {\n            // SA = Décade/Semaine dans l'année\n            res = obj.S;\n          } else if (x.match(/SM/)) {\n            // SM = Décade/Semaine dans le mois\n            res = obj.D;\n          } else if (x.match(/JS/)) {\n            // JS = Jour de la décade/semaine\n            res = obj.JS;\n          } else {\n            // S = Décade/Semaine dans l'année\n            res = obj.S;\n          }\n        }\n\n        /* FILTRES */\n        if (x.match(/r/)) {\n          // - r = chiffres en Romains\n          arabe = res;\n          res = arabeVersRomain(res);\n        }\n        if (x.match(/z/)) {\n          // - z = Zéro devant le chiffre\n          if (!arabe) {\n            arabe = res;\n          }\n          res = prefixeZero(res);\n        }\n        if (x.match(/l|v/)) {\n          if (x.match(/[^JDS](MA|M)/)) {\n            // MAl | Ml = Mois en Lettres\n            res = obj.Ml[0];\n            chiffres = false;\n          } else if (x.match(/(JS|JD)/)) {\n            // JSl | JDl = Jour de la Décade/Semaine en Lettres\n            res = obj.JSl[0];\n            chiffres = false;\n          } else {\n            if (x.match(/v/)) {\n              // - v = chiffres en lettres (Vieille notation)\n              res = arabe ? nombreEnLettres(arabe, 1) : nombreEnLettres(res,\n                1);\n            } else {\n              // - l = chiffres en Lettres\n              res = arabe ? nombreEnLettres(arabe) : nombreEnLettres(res);\n            }\n            ordinaux = true;\n          }\n        }\n        if (x.match(/a/)) {\n          if (x.match(/[^JDS](MA|M)/)) {\n            // MAa | Ma = Mois en Abrégé\n            res = obj.Ml[1];\n          }\n          if (x.match(/(JS|JD)/)) {\n            // JSa | JDa = Jour de la Décade/Semaine en Abrégé\n            res = obj.JSl[1];\n          }\n        }\n        if (x.match(/3/)) {\n          if (x.match(/[^JDS](MA|M)/)) {\n            // MA3 | M3 = Mois en Abrégé sur 3 caractères\n            res = obj.Ml[2];\n          }\n          if (x.match(/(JS|JD)/)) {\n            // JS3 | JD3 = Jour de la Décade/Semaine en Abrégé\n            // sur 3 caractères\n            res = obj.JSl[2];\n          }\n        }\n        if (x.match(/2/)) {\n          if (x.match(/[^JDS](MA|M)/)) {\n            // MA2 | M2 = Mois en Abrégé sur 2 caractères\n            res = obj.Ml[3];\n          }\n          if (x.match(/(JS|JD)/)) {\n            // JS2 | JD2 = Jour de la Décade/Semaine en Abrégé\n            // sur 2 caractères\n            res = obj.JSl[3];\n          }\n        }\n        if (x.match(/1/)) {\n          if (x.match(/[^JDS](MA|M)/)) {\n            // MA1 | M1 = Mois en Abrégé sur 1 caractère\n            res = obj.Ml[4];\n          }\n          if (x.match(/(JS|JD)/)) {\n            // JS1 | JD1 = Jour de la Décade/Semaine en Abrégé\n            // sur 1 caractère\n            res = obj.JSl[4];\n          }\n        }\n\n        // ENCOURS bugs globaux avec chiffres et lettres\n        // cf %Jrzl\n        var lettres = res;\n\n        // - o = lettres ou chiffres en Ordinaux\n        if (x.match(/o/)) {\n          /* istanbul ignore else  */\n          if (ordinaux && x.match(/f/)) {\n            res = ordinauxEnLettres(lettres, 1);\n          } else if (ordinaux) {\n            res = ordinauxEnLettres(lettres);\n          } else if (x.match(/f/) && chiffres) {\n            res = nombreOrdinal(lettres, 're', 'e');\n          } else if (chiffres) {\n            res = nombreOrdinal(lettres, 'er', 'e');\n          }\n        }\n\n        // - p = Premier ou 1er\n        if (x.match(/p/)) {\n          if (ordinaux) {\n            res = premierOrdinalEnLettres(lettres);\n          } else {\n            res = nombreOrdinal(lettres, 'er', '');\n          }\n        }\n\n        // - f = Féminin de p (première ou 1re)\n        if (x.match(/[^o]f/)) {\n          if (ordinaux) {\n            res = premierOrdinalEnLettres(lettres, 1);\n          } else {\n            res = nombreOrdinal(lettres, 're', '');\n          }\n        }\n        if (x.match(/b/)) {\n          // - b = en Bas de casse (minuscules)\n          res = res.toString().toLowerCase();\n        }\n        if (x.match(/c|m/)) {\n          // - c | m = en Capitales (Majuscules)\n          res = res.toString().toUpperCase();\n        }\n        return res;\n      }\n\n      return balisesEtFiltres;\n    }();\n\n    /**\n     * Pour générer les prototypes de formatage de Jour.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {String} format - Un format personnalisé\n     * @param {String} erreur - Un message d'erreur personnalisé\n     * @param {Function} rappel - Une fonction de rappel\n     * @param {String} df - Le format par défaut\n     * @param {Object} dt - La référence aux variables dans Jour\n     * @param {Object} dd - La référence exlicite à une variable dans dt\n     * @param {Object} dobj - Une fonction ou un objet utilisable\n     * @param {Object} [pro] - La référence du prototype si nécessaire\n     * @return {String} La date formatée\n     * @example\n     * formatageDeJour(format, erreur, rappel, '%Jp %Mlb %A',\n     * 'Pas de correspondances.', this.variables.gregorien, objGregorien);\n     */\n    var formatageDeJour = function () {\n      function formatageDeJour(format, erreur, rappel, df, dt, dd, dobj,\n        pro) {\n        var frmt = format || df;\n        var err = erreur || 'Pas de correspondances.';\n        var tvg = dt;\n        var resultat = void 0;\n\n        if (tvg[dd]) {\n          resultat = frmt.replace(/%[ADJMNSabcflmoprvz123]+/g,\n\n            // jscs:disable\n            function (x) {\n              // jscs:enable\n              var res = balisesEtFiltres(x, dobj(tvg, pro));\n\n              return res;\n            });\n          if (typeof rappel === 'function') {\n            resultat = rappel(resultat, dobj(tvg, pro));\n          }\n        } else {\n          resultat = err;\n        }\n        return resultat;\n      }\n\n      return formatageDeJour;\n    }();\n\n    /**\n     * Pour calculer une date julienne à partir du nombre de jours juliens.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|jd_to_julian}\n     * @param {Number} jj - Nombre de jours juliens\n     * @return {Array} [0] An, [1] Mois et [2] Jour julien\n     * @example\n     * jjVersJulien(2457346.5); // [2015,11,7]\n     */\n    var jjVersJulien = function () {\n      function jjVersJulien(jj) {\n        var b = Math.floor(jj + 0.5) + 1524;\n        var c = Math.floor((b - 122.1) / 365.25);\n        var d = Math.floor(365.25 * c);\n        var e = Math.floor((b - d) / 30.6001);\n        var mois = Math.floor(e < 14 ? e - 1 : e - 13);\n        var jour = b - d - Math.floor(30.6001 * e);\n        var an = Math.floor(mois > 2 ? c - 4716 : c - 4715);\n\n        if (an < 1) {\n          an--;\n        }\n\n        return [an, mois, jour];\n      }\n\n      return jjVersJulien;\n    }();\n\n    /**\n     * Pour calculer la date républicaine à partir du nombre de jours juliens,\n     * les 4 ou 5 'sansculottides' sont considérés comme un 13e mois.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link fourmilab.ch/documents/calendar/|jd_to_french_revolutionary}\n     * @param {Number} jj - Nombre de jours juliens\n     * @return {Array} [0] An, [1] Mois, [2] Décade et [3] Jour républicain\n     * @example\n     * jjVersRepublicain(2379902.5); // [12, 2, 2, 6]\n     */\n    var jjVersRepublicain = function () {\n      function jjVersRepublicain(jj) {\n        var tempJj = Math.floor(jj) + 0.5;\n        var adr = anRepublicain(tempJj);\n        var an = adr[0];\n        var equinox = adr[1];\n        var mois = Math.floor((tempJj - equinox) / 30) + 1;\n        var jour = (tempJj - equinox) % 30;\n        var decade = Math.floor(jour / 10) + 1;\n\n        jour = jour % 10 + 1;\n\n        return [an, mois, decade, jour];\n      }\n\n      return jjVersRepublicain;\n    }();\n\n    /**\n     * Pour calculer le jour de la semaine à partir du nombre de jours juliens.\n     * @access private\n     * @author John Walker\n     * @since 0.0.15\n     * @license Domaine public\n     * @see {@link http://fourmilab.ch/documents/calendar/|jwday}\n     * @param  {Number} jj - Nombre de jours juliens\n     * @return {Number} Le jour de la semaine (0-6)\n     * @example\n     * jourSemaineJulien(2378625.5); // 6\n     */\n    var jourSemaineJulien = function () {\n      function jourSemaineJulien(jj) {\n        var result = reste(Math.floor(jj + 1.5), 7);\n\n        return result;\n      }\n\n      return jourSemaineJulien;\n    }();\n\n    /**\n     * Pour retourner un objet utilisable par le prototype .gregorien().\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {Object} d - un objet de Jour.variables\n     * @param {Object} [pro] - La référence du prototype si nécessaire\n     * @return {Object} result - un nouvel objet contenant toutes les valeurs\n     * @example\n     * objGregorien(tvg);\n     */\n    var objGregorien = function () {\n      function objGregorien(d, pro) {\n        var js = pro === 'julien' ? jourSemaineJulien(d.jj) : d.od.getDay();\n        var result = {\n\n          // A = Année\n          A: d.a,\n\n          // D = Décade/Semaine dans le mois\n          D: semaineComplete(d.jm, d.m, d.a, 1),\n\n          // JA = Jour dans l'Année\n          JA: periodeEnJours(1, 1, d.a, d.jm, d.m, d.a),\n\n          // J = Jour dans le mois\n          J: d.jm,\n\n          // JS = Jour de la décade/semaine\n          JS: js,\n\n          // JSl = Jour de la décade/semaine en lettres\n          JSl: jourGregorien[js],\n\n          // M = Mois dans l'année\n          M: d.m,\n\n          // Ml = Mois dans l'année en lettres\n          Ml: moisGregorien[d.m - 1],\n\n          // S = Décade/Semaine dans l'année\n          S: semaineComplete(d.jm, d.m, d.a, 0)\n        };\n\n        return result;\n      }\n\n      return objGregorien;\n    }();\n\n    /**\n     * Pour retourner un objet utilisable par le prototype .republicain().\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.15\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {Object} d - un objet de Jour.variables\n     * @return {Object} result - un nouvel objet contenant toutes les valeurs\n     * @example\n     * objGregorien(tvg);\n     */\n    var objRepublicain = function () {\n      function objRepublicain(d) {\n        var result = {\n\n          // A = Année\n          A: d.a,\n\n          // D = Décade/Semaine dans le mois\n          D: d.d,\n\n          // JA = Jour dans l'Année\n          JA: (d.m - 1) * 30 + d.jm,\n\n          // J = Jour dans le mois\n          J: d.jm,\n\n          // JS = Jour de la décade/semaine\n          JS: d.jd,\n\n          // JSl = Jour de la décade/semaine en lettres\n          JSl: jourRepublicain[d.jd - 1],\n\n          // M = Mois dans l'année\n          M: d.m,\n\n          // Ml = Mois dans l'année en lettres\n          Ml: moisRepublicain[d.m - 1],\n\n          // S = Décade/Semaine dans l'année\n          S: (d.m - 1) * 3 + d.d\n        };\n\n        return result;\n      }\n\n      return objRepublicain;\n    }();\n\n    /**\n     * Pour remplacer en série avec un objet contenant des regex.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.1\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {String} texte - Le texte à modifier\n     * @param {Object} regex - Les expressions régulières de remplacements\n     * @param {String} options - Les options des expressions régulières\n     * @return {String} Le texte modifié\n     * @example\n     * remplacements('Bonjour', {'jour': 'soir'}, 'gi');\n     * // 'Bonsoir'\n     */\n    var remplacements = function () {\n      function remplacements(texte, regex, options) {\n        var resultat = regex.reduce(\n\n          // jscs:disable\n          function (data, item) {\n            var result = data.replace(new RegExp(item.regexp, options),\n              item.replace);\n\n            return result;\n          }, texte);\n\n        // jscs:enable\n        return resultat;\n      }\n\n      return remplacements;\n    }();\n\n    /**\n     * Pour calculer le nombre de jours juliens à partir d'une date républicaine.\n     * @access private\n     * @author John Walker\n     * @since 0.0.1\n     * @license Domaine public\n     * @see {@link fourmilab.ch/documents/calendar/|french_revolutionary_to_jd}\n     * @param {Number} an - Année républicaine\n     * @param {Number} mois - Mois républicain\n     * @param {Number} decade - Décade républicaine\n     * @param {Number} jour - Jour de la décade républicaine\n     * @return {Number} Nombre de jours juliens\n     * @example\n     * republicainVersJj(12, 2, 2, 6); // 2379902.5\n     */\n    var republicainVersJj = function () {\n      function republicainVersJj(an, mois, decade, jour) {\n        var guess = jjDebutRepublicain + anneeTropique * (an - 1 - 1);\n        var adr = [an - 1, 0];\n\n        while (adr[0] < an) {\n          adr = anRepublicain(guess);\n          guess = adr[1] + (anneeTropique + 2);\n        }\n\n        return adr[1] + 30 * (mois - 1) + 10 * (decade - 1) + (jour - 1);\n      }\n\n      return republicainVersJj;\n    }();\n\n    /**\n     * Pour convertir le jour du mois républicain en décade.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.1\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {Number} rjmc - le jour du mois républicain\n     * @return {Number} La décade républicaine\n     * @example\n     * rjmcVersRdc(28); // 3\n     */\n    var rjmcVersRdc = function () {\n      function rjmcVersRdc(rjmc) {\n        var resultat = Math.abs(parseInt(rjmc, 10) % 10) === 0 ? Math.abs(\n          parseInt(rjmc / 10, 10)) : Math.abs(parseInt(rjmc / 10, 10) + 1);\n\n        return resultat;\n      }\n\n      return rjmcVersRdc;\n    }();\n\n    /**\n     * Pour convertir le jour du mois républicain en jour de la décade.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.1\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {Number} rjmc - le jour du mois républicain\n     * @return {Number} Le jour de la décade républicaine\n     * @example\n     * rjmcVersRjdc(28); // 8\n     */\n    var rjmcVersRjdc = function () {\n      function rjmcVersRjdc(rjmc) {\n        var resultat = Math.abs(parseInt(rjmc, 10) % 10) === 0 ? 10 : Math.abs(\n          parseInt(rjmc, 10) % 10);\n\n        return resultat;\n      }\n\n      return rjmcVersRjdc;\n    }();\n\n    /**\n     * Pour convertir des chiffres romains en chiffres arabes.\n     * @access private\n     * @author Iván Montes\n     * @since 0.0.1\n     * @license unknown\n     * @see {@link http://blog.stevenlevithan.com/?p=65#comment-16129|Blog}\n     * @param {String} romain - Chiffre romain\n     * @return {Number} Chiffre arabe\n     * @example\n     * romainVersArabe('MMXII'); // 2012\n     */\n    var romainVersArabe = function () {\n      function romainVersArabe(romain) {\n        var lookup = {\n          I: 1,\n          V: 5,\n          X: 10,\n          L: 50,\n          C: 100,\n          D: 500,\n          M: 1000\n        };\n        var arabe = 0;\n        var i = romain.length - 1;\n        var tempRomain = romain.toUpperCase();\n\n        for (i; i >= 0; i--) {\n          if (lookup[tempRomain[i]] < lookup[tempRomain[i + 1]]) {\n            arabe -= lookup[tempRomain[i]];\n          } else {\n            arabe += lookup[tempRomain[i]];\n          }\n        }\n\n        return arabe;\n      }\n\n      return romainVersArabe;\n    }();\n\n    /**\n     * Pour obtenir une saisie valide.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.1\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {String} saisie - La saisie d'une date\n     * @param {Object} regexp - Un objet regexpRepublicain ou regexpGregorien\n     * pour convertir les mois\n     * @return {Array} La saisie valide\n     * @example\n     * saisieValide(saisie, regexpRepublicain);\n     * saisieValide(saisie, regexpGregorien);\n     */\n    var saisieValide = function () {\n      function saisieValide(saisie, regexp) {\n        var tempSaisie = saisie;\n        var u = void 0;\n\n        // On remplace le texte restant par des chiffres arabes\n        tempSaisie = remplacements(tempSaisie, regexp, 'gi').split(\n          /[\\/\\.]+/gi);\n\n        // Si il n'y a que l'année [1,1,ac]\n        if (!tempSaisie[1] && !tempSaisie[2]) {\n          if (tempSaisie[0].match(/\\d-/gi) || tempSaisie[0] === '') {\n            tempSaisie[0] = u;\n          } else {\n            tempSaisie = [1, 1, tempSaisie[0]];\n          }\n        }\n\n        // Si il n'y a que l'année et le mois [1,mc,ac]\n        if (!tempSaisie[0] && tempSaisie[1] && tempSaisie[2]) {\n          tempSaisie = [1, tempSaisie[1], tempSaisie[2]];\n        }\n        if (tempSaisie[1] && !tempSaisie[2]) {\n          tempSaisie = [1, tempSaisie[0], tempSaisie[1]];\n        }\n\n        return tempSaisie;\n      }\n\n      return saisieValide;\n    }();\n\n    /**\n     * Pour convertir la saisie grégorienne ou julienne en Objet Jour.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.1\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {String} saisie - Saisie d'une date\n     * @param {Boolean} limites - Par défaut, les résultats sont limités\n     * aux périodes d'utilisation des calendriers. Seule la valeur `false`\n     * permet de désactiver ces limites.\n     * @return {Array} Les dates républicaines, grégoriennes et juliennes\n     * @example\n     * tabGregorien(saisie, this.limites);\n     */\n    var tabGregorien = function () {\n      function tabGregorien(saisie, limites) {\n        // Uniformisation de la saisie\n        var iesaisie = saisie[0] === '/' ? '1' + saisie : saisie;\n        var saisieGregorien = saisieValide(iesaisie, regexpGregorien);\n        var tab = [];\n\n        // Lorsque la date est valide [gjmc,gmc,gac]\n        if (saisieGregorien[2] && saisieGregorien[0] < 32 && absInt(\n            saisieGregorien[0]) !== 0 && saisieGregorien[1] < 13 &&\n          saisieGregorien[1] !== '' && absInt(saisieGregorien[1]) !== 0) {\n          tab[4] = gregorienVersJj(parseInt(saisieGregorien[2], 10), absInt(\n            saisieGregorien[1]), absInt(saisieGregorien[0]));\n\n          // Limitations gregorien/julien\n          if (limites === true && tab[4] < jjDebutGregorien) {\n            tab[5] = absInt(saisieGregorien[0]);\n            tab[6] = absInt(saisieGregorien[1]);\n            tab[7] = parseInt(saisieGregorien[2], 10);\n            tab[8] = dateValide(tab[5], tab[6], tab[7]);\n          } else {\n            tab[0] = absInt(saisieGregorien[0]);\n            tab[1] = absInt(saisieGregorien[1]);\n            tab[2] = parseInt(saisieGregorien[2], 10);\n            tab[3] = dateValide(tab[0], tab[1], tab[2]);\n            var dateJulienne = jjVersJulien(tab[4]);\n\n            tab[5] = dateJulienne[2];\n            tab[6] = dateJulienne[1];\n            tab[7] = dateJulienne[0];\n            tab[8] = dateValide(tab[5], tab[6], tab[7]);\n          }\n\n          // Limitations republicain\n          if (tab[4] >= jjDebutRepublicain && tab[4] <= jjFinRepublicain ||\n            tab[4] >= jjDebutCommuneDeParis && tab[4] <=\n            jjFinCommuneDeParis || limites === false) {\n            var dateRepublicaine = jjVersRepublicain(tab[4]);\n\n            tab = tab.concat([dateRepublicaine[3], dateRepublicaine[2], (\n                dateRepublicaine[2] - 1) * 10 + dateRepublicaine[3],\n              dateRepublicaine[1], dateRepublicaine[0]\n            ]);\n          }\n        }\n\n        return tab;\n      }\n\n      return tabGregorien;\n    }();\n\n    /**\n     * Pour convertir la saisie républicaine en Objet Jour.\n     * @access private\n     * @author Gilles Toubiana\n     * @since 0.0.1\n     * @license MIT\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {String} saisie - Saisie d'une date\n     * @param {Boolean} limites - Par défaut, les résultats sont limités\n     * aux périodes d'utilisation des calendriers. Seule la valeur `false`\n     * permet de désactiver ces limites.\n     * @return {Array} Les dates républicaines, grégoriennes et juliennes\n     * @example\n     * tabRepublicain(saisie, this.limites);\n     */\n    var tabRepublicain = function () {\n      function tabRepublicain(saisie, limites) {\n        // On remplace les chiffres romains en chiffres arabes\n        var saisieRepublicain = saisie.replace(\n          /\\W?an\\s-?([-MDCLXVI]+)\\W?/gi,\n\n          // jscs:disable\n          function (x, p1) {\n            var rva = romainVersArabe(p1);\n\n            return x.match(/-/) ? ' -' + rva : ' ' + rva;\n          });\n\n        // jscs:enable\n        var tab = [];\n\n        // Uniformisation de la saisie\n        saisieRepublicain = saisieValide(saisieRepublicain,\n          regexpRepublicain);\n\n        // Lorsque la date est valide [rjmc,rmc,rac]\n        if (saisieRepublicain[2] && saisieRepublicain[0] < 31 && absInt(\n            saisieRepublicain[0]) !== 0 && saisieRepublicain[1] < 14 &&\n          absInt(saisieRepublicain[1]) !== 0) {\n          tab[4] = republicainVersJj(parseInt(saisieRepublicain[2], 10),\n            parseInt(saisieRepublicain[1], 10), rjmcVersRdc(\n              saisieRepublicain[0]), rjmcVersRjdc(saisieRepublicain[0]));\n\n          // Si jj (tab[4]) est dans les limites ou en illimité\n          if (tab[4] >= jjDebutRepublicain && tab[4] <= jjFinRepublicain ||\n            tab[4] >= jjDebutCommuneDeParis && tab[4] <=\n            jjFinCommuneDeParis || limites === false) {\n            var dateGregorienne = jjVersGregorien(tab[4]);\n            var dateJulienne = jjVersJulien(tab[4]);\n\n            tab[0] = dateGregorienne[2];\n            tab[1] = dateGregorienne[1];\n            tab[2] = dateGregorienne[0];\n            tab[3] = dateValide(tab[0], tab[1], tab[2]);\n            tab[5] = dateJulienne[2];\n            tab[6] = dateJulienne[1];\n            tab[7] = dateJulienne[0];\n            tab[8] = dateValide(tab[5], tab[6], tab[7]);\n            tab[9] = rjmcVersRjdc(saisieRepublicain[0]);\n            tab[10] = rjmcVersRdc(saisieRepublicain[0]);\n            tab[11] = absInt(saisieRepublicain[0]);\n            tab[12] = parseInt(saisieRepublicain[1], 10);\n            tab[13] = parseInt(saisieRepublicain[2], 10);\n          }\n        }\n\n        return tab;\n      }\n\n      return tabRepublicain;\n    }();\n\n    /**\n     * Pour convertir une saisie en objet JavaScript.\n     * @memberof acte\n     * @class\n     * @chainable\n     * @access public\n     * @author Gilles Toubiana\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @param {String} saisie - Saisie d'une date grégorienne ou républicaine.\n     * @param {Boolean} [limites=true] - Par défaut, les résultats sont limités\n     * aux périodes d'utilisation des calendriers :<br>\n     * - une saisie de date grégorienne sera considérée comme julienne avant\n     * le 15/10/1582<br>\n     * - une saisie de date républicaine ne sera valide que du 22/9/1792 au\n     * 31/12/1805 (Période républicaine) et du 18/3/1871 au 28/5/1871\n     * (Commune de Paris).<br>\n     * La valeur `false` permet de désactiver ces limitations.\n     * @example\n     * new acte.Jour('15/10/1582').gregorien() // 15 octobre 1582\n     * new acte.Jour('5 Xbre 1793').gregorien() // 5 décembre 1793\n     * new acte.Jour('5 Jet 1793').gregorien() // 5 juillet 1793\n     * new acte.Jour('10 nivôse an XIV').gregorien() // 31 décembre 1805\n     * new acte.Jour('8 frimaire an XVIII').gregorien() // Pas de correspondances.\n     * new acte.Jour('8 frimaire an XVIII', false).gregorien() // 29 novembre 1809\n     * new acte.Jour('14/10/1582').gregorien() // Pas de correspondances.\n     * new acte.Jour('14/10/1582', false).gregorien() // 14 octobre 1582\n     * @since 0.0.1\n     * @license MIT\n     */\n    acte.Jour = function () {\n      function Jour(saisie, limites) {\n        _classCallCheck(this, Jour);\n\n        var tab = [];\n\n        this.variables = this.variables || {};\n        this.limites = limites !== false;\n\n        // On détecte si c'est une date républicaine\n        if (saisie.match(/\\W?an\\s-?([-MDCLXVI]+|\\d+)\\W?/gi)) {\n          tab = tabRepublicain(saisie, this.limites);\n\n          // Si ce n'est pas du républicain (donc grégorien ou julien)\n        } else {\n          tab = tabGregorien(saisie, this.limites);\n        }\n\n        // Ecriture de toutes les valeurs\n        this.variables = {\n          gregorien: {\n            jm: tab[0],\n            m: tab[1],\n            a: tab[2],\n            od: tab[3]\n          },\n          julien: {\n            jj: tab[4],\n            jm: tab[5],\n            m: tab[6],\n            a: tab[7],\n            od: tab[8]\n          },\n          republicain: {\n            jd: tab[9],\n            d: tab[10],\n            jm: tab[11],\n            m: tab[12],\n            a: tab[13]\n          },\n          limites: this.limites\n        };\n      }\n\n      return Jour;\n    }();\n\n    /**\n     * Pour formater une date grégorienne.\n     * @memberof acte\n     * @access public\n     * @since 0.0.15\n     * @author Gilles Toubiana\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @license MIT\n     * @param {String} [format='%Jp %Mlb %A'] - Le modèle de formatage :<br><br>\n     * <strong>BALISES</strong><br>\n     * `%A` ou `%AN` - Année<br>\n     * `%D`, `%DM` ou `%SM` - Décade/Semaine dans le mois<br>\n     * `%J` ou `%JM` - Jour dans le mois<br>\n     * `%JA` - Jour dans l'année<br>\n     * `%JS` ou `%JD` - Jour de la Décade/Semaine<br>\n     * `%M` ou `%MA` - Mois dans l'année<br>\n     * `%S`, `%SA` ou `%DA` - Semaine/Décade dans l'année<br><br>\n     * <strong>FILTRES</strong><br>\n     * `1` - mois ou jour sur 1 caractère<br>\n     * `2` - mois ou jour sur 2 caractères<br>\n     * `3` - mois ou jour sur 3 caractères<br>\n     * `a` - mois ou jour en Abrégé<br>\n     * `b` - en Bas de casse (minuscules)<br>\n     * `c` ou `m` - en Capitales (Majuscules)<br>\n     * `f` - Féminin de p (première ou 1re)<br>\n     * `l` - chiffres en Lettres<br>\n     * `o` - lettres ou chiffres en Ordinaux<br>\n     * `p` - Premier ou 1er<br>\n     * `r` - chiffres en Romains<br>\n     * `v` - chiffres en lettres (Vieille notation)<br>\n     * `z` - Zéro devant le chiffre<br>\n     * @param {String} [erreur='Pas de correspondances.'] - Le message d'erreur\n     * @param {Function} [rappel] - Une fonction de rappel\n     * @return {String} La date grégorienne formatée\n     * @example\n     * new acte.Jour('1/1/1600').gregorien() // '1er janvier 1600'\n     * new acte.Jour('').gregorien(0, 'Erreur.') // 'Erreur.'\n     * new acte.Jour('3 avril 1605').gregorien('%Jz/%Mz', 0, ((res, obj) => {\n     *   const an = (obj.A % 100) < 10 ? `0${obj.A % 100}` : obj.A % 100;\n     *   return `${res}/${an}`;\n     * }))) // '03/04/05'\n     */\n    acte.Jour.prototype.gregorien = function () {\n      function gregorien(format, erreur, rappel) {\n        var resultat = formatageDeJour(format, erreur, rappel,\n          '%Jp %Mlb %A', this.variables.gregorien, 'od', objGregorien);\n\n        return resultat;\n      }\n\n      return gregorien;\n    }();\n\n    /**\n     * Pour formater une date julienne.\n     * @memberof acte\n     * @access public\n     * @since 0.0.15\n     * @author Gilles Toubiana\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @license MIT\n     * @param {String} [format='%Jp %Mlb %A'] - Le modèle de formatage.<br>\n     * Voir [.gregorien](#acte.Jour+gregorien) pour la syntaxe.\n     * @param {String} [erreur='Pas de correspondances.'] - Le message d'erreur\n     * @param {Function} [rappel] - Une fonction de rappel\n     * @return {String} La date julienne formatée\n     * @example\n     * new acte.Jour('1/1/1600').julien() // '22 décembre 1599'\n     * new acte.Jour('').julien(0, 'Erreur.') // 'Erreur.'\n     * new acte.Jour('3 avril 1605').julien('%Jz/%Mz', 0, ((res, obj) => {\n     *   const an = (obj.A % 100) < 10 ? `0${obj.A % 100}` : obj.A % 100;\n     *   return `${res}/${an}`;\n     * }))) // '24/03/05'\n     */\n    acte.Jour.prototype.julien = function () {\n      function julien(format, erreur, rappel) {\n        var resultat = formatageDeJour(format, erreur, rappel,\n          '%Jp %Mlb %A', this.variables.julien, 'od', objGregorien,\n          'julien');\n\n        return resultat;\n      }\n\n      return julien;\n    }();\n\n    /**\n     * Pour formater une date républicaine.\n     * @memberof acte\n     * @access public\n     * @since 0.0.15\n     * @author Gilles Toubiana\n     * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n     * @license MIT\n     * @param {String} [format='%Jp %Mlb %A'] - Le modèle de formatage.<br>\n     * Voir [.gregorien](#acte.Jour+gregorien) pour la syntaxe.\n     * @param {String} [erreur='Pas de correspondances.'] - Le message d'erreur\n     * @param {Function} [rappel] - Une fonction de rappel\n     * @return {String} La date républicaine formatée\n     * @example\n     * new acte.Jour('1/1/1600').républicain() // '?/?/?'\n     * new acte.Jour('').républicain(0, 'Erreur.') // 'Erreur.'\n     * new acte.Jour('3 avril 1605').républicain('%Jz/%Mz', 0, ((res, obj) => {\n     *   const an = (obj.A % 100) < 10 ? `0${obj.A % 100}` : obj.A % 100;\n     *   return `${res}/${an}`;\n     * }))) // '?/?/?'\n     */\n    acte.Jour.prototype.republicain = function () {\n      function republicain(format, erreur, rappel) {\n        var resultat = formatageDeJour(format, erreur, rappel,\n          '%Jp %Mlb an %Ar', this.variables.republicain, 'a',\n          objRepublicain);\n\n        return resultat;\n      }\n\n      return republicain;\n    }();\n    return acte;\n  }\n\n  return umdCallback;\n}());\n"],"sourceRoot":"/source/"}