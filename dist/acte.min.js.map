{"version":3,"sources":["acte.min.js"],"names":["root","factory","tempRoot","exports","module","define","amd","acte","this","_classCallCheck","instance","Constructor","TypeError","anneeTropique","argNutCoeff","argNutMult","delta","jde0Tab1000","jde0Tab2000","jjAn1Gregorien","jjAn2000Gregorien","jjDebutCommuneDeParis","jjDebutGregorien","jjDebutRepublicain","jjFinCommuneDeParis","jjFinRepublicain","regexpGregorien","regexp","replace","regexpRepublicain","siecleJulien","termesPerEquinoxes","degresVersRadians","d","Math","PI","normaliserDegres","a","floor","radiansVersDegres","r","reste","b","sinus","sin","cosinus","cos","equinoxe","an","item","i","j","Jde0tab","S","Y","Jde0","pow","T","W","deltaL","deltaT","dt","f","t","obliquiteEcliptique","jj","oTerms","u","v","eps","abs","positionSoleil","t2","l0","M","e","C","sunLong","sunAnomaly","sunR","Omega","Lambda","epsilon0","epsilon","Alpha","atan2","Delta","asin","AlphaApp","DeltaApp","nutation","ta","t3","dp","de","to10","_i","ang","equationDuTemps","tau","alpha","deltaPsi","E","fractionEquinoxe","equJED","equJD","equAPP","dtParis","equinoxeAParis","ep","gregorienBissextile","gregorienVersJj","mois","jour","anneeBissextile","jjVersGregorien","wjd","depoch","quadricent","dqc","cent","dcent","quad","dquad","yindex","yearday","leapadj","absInt","num","parseInt","anRepublicain","guess","lasteq","nexteq","adr","round","dateValide","resultat","Date","setFullYear","jjVersJulien","c","jjVersRepublicain","tempJj","equinox","decade","remplacements","texte","regex","options","reduce","data","result","RegExp","republicainVersJj","rjmcVersRdc","rjmc","rjmcVersRjdc","romainVersArabe","romain","lookup","I","V","X","L","D","arabe","length","tempRomain","toUpperCase","saisieValide","saisie","tempSaisie","split","match","tabGregorien","limites","iesaisie","saisieGregorien","tab","dateJulienne","dateRepublicaine","concat","tabRepublicain","saisieRepublicain","x","p1","rva","dateGregorienne","Jour","variables","gregorien","jmc","mc","ac","od","julien","republicain","jdc","dc"],"mappings":"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","file":"acte.min.js","sourcesContent":["/**\n * acte - Librairie Javascript pour manipuler des données généalogiques\n * @copyright 2015-Present, Gilles Toubiana\n * @namespace acte\n * @version 0.0.6\n * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n * @license MIT\n */\n'use strict';\n(function universalModuleDefinition(root, factory) {\n  var tempRoot = root;\n\n  /* istanbul ignore next */\n  if (typeof exports === 'object' && typeof module === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    define([], factory);\n  } else if (typeof exports === 'object') {\n    exports.acte = factory();\n  } else {\n    tempRoot.acte = factory();\n  }\n}(this, function umdCallback() {\n  /** @namespace */\n  /* eslint-disable no-use-before-define */\n  var acte = acte || {};\n\n  /* eslint-enable no-use-before-define */\n  /* istanbul ignore next */\n  function _classCallCheck(instance, Constructor) {\n    if (!(instance instanceof Constructor)) {\n      throw new TypeError(\"Cannot call a class as a function\");\n    }\n  }\n\n  /**\n   * Nombre de jours, sur Terre, pour que le Soleil retourne à la même\n   * position\n   * dans le cycle des saisons\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @see {@link http://fourmilab.ch/documents/calendar/|TropicalYear}\n   * @constant {Number}\n   */\n  var anneeTropique = 365.24219878;\n\n  /**\n   * Coefficient des sinus et cosinus de l'argument pour la nutation\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @see {@link http://fourmilab.ch/documents/calendar/|nutArgCoeff}\n   * @constant {Array}\n   */\n  var argNutCoeff = [-171996, -1742, 92095, 89, -13187, -16, 5736, -31, -\n    2274, -2, 977, -5, 2062, 2, -895, 5, 1426, -34, 54, -1, 712, 1, -7, 0, -\n    517, 12, 224, -6, -386, -4, 200, 0, -301, 0, 129, -1, 217, -5, -95, 3, -\n    158, 0, 0, 0, 129, 1, -70, 0, 123, 0, -53, 0, 63, 0, 0, 0, 63, 1, -33,\n    0, -59, 0, 26, 0, -58, -1, 32, 0, -51, 0, 27, 0, 48, 0, 0, 0, 46, 0, -\n    24, 0, -38, 0, 16, 0, -31, 0, 13, 0, 29, 0, 0, 0, 29, 0, -12, 0, 26,\n    0, 0, 0, -22, 0, 0, 0, 21, 0, -10, 0, 17, -1, 0, 0, 16, 0, -8, 0, -16,\n    1, 7, 0, -15, 0, 9, 0, -13, 0, 7, 0, -12, 0, 6, 0, 11, 0, 0, 0, -10,\n    0, 5, 0, -8, 0, 3, 0, 7, 0, -3, 0, -7, 0, 0, 0, -7, 0, 3, 0, -7, 0, 3,\n    0, 6, 0, 0, 0, 6, 0, -3, 0, 6, 0, -3, 0, -6, 0, 3, 0, -6, 0, 3, 0, 5,\n    0, 0, 0, -5, 0, 3, 0, -5, 0, 3, 0, -5, 0, 3, 0, 4, 0, 0, 0, 4, 0, 0,\n    0, 4, 0, 0, 0, -4, 0, 0, 0, -4, 0, 0, 0, -4, 0, 0, 0, 3, 0, 0, 0, -3,\n    0, 0, 0, -3, 0, 0, 0, -3, 0, 0, 0, -3, 0, 0, 0, -3, 0, 0, 0, -3, 0, 0,\n    0, -3, 0, 0, 0\n  ];\n\n  /**\n   * Termes périodiques pour la nutation en longitude et obliquité\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @see {@link http://fourmilab.ch/documents/calendar/|nutArgMult}\n   * @constant {Array}\n   */\n  var argNutMult = [0, 0, 0, 0, 1, -2, 0, 0, 2, 2, 0, 0, 0, 2, 2, 0, 0, 0,\n    0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, -2, 1, 0, 2, 2, 0, 0, 0, 2, 1, 0,\n    0, 1, 2, 2, -2, -1, 0, 2, 2, -2, 0, 1, 0, 0, -2, 0, 0, 2, 1, 0, 0, -1,\n    2, 2, 2, 0, 0, 0, 0, 0, 0, 1, 0, 1, 2, 0, -1, 2, 2, 0, 0, -1, 0, 1, 0,\n    0, 1, 2, 1, -2, 0, 2, 0, 0, 0, 0, -2, 2, 1, 2, 0, 0, 2, 2, 0, 0, 2, 2,\n    2, 0, 0, 2, 0, 0, -2, 0, 1, 2, 2, 0, 0, 0, 2, 0, -2, 0, 0, 2, 0, 0, 0, -\n    1, 2, 1, 0, 2, 0, 0, 0, 2, 0, -1, 0, 1, -2, 2, 0, 2, 2, 0, 1, 0, 0, 1, -\n    2, 0, 1, 0, 1, 0, -1, 0, 0, 1, 0, 0, 2, -2, 0, 2, 0, -1, 2, 1, 2, 0,\n    1, 2, 2, 0, 1, 0, 2, 2, -2, 1, 1, 0, 0, 0, -1, 0, 2, 2, 2, 0, 0, 2, 1,\n    2, 0, 1, 0, 0, -2, 0, 2, 2, 2, -2, 0, 1, 2, 1, 2, 0, -2, 0, 1, 2, 0,\n    0, 0, 1, 0, -1, 1, 0, 0, -2, -1, 0, 2, 1, -2, 0, 0, 0, 1, 0, 0, 2, 2,\n    1, -2, 0, 2, 0, 1, -2, 1, 0, 2, 1, 0, 0, 1, -2, 0, -1, 0, 1, 0, 0, -2,\n    1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 2, 0, -1, -1, 1, 0, 0, 0, 1, 1, 0,\n    0, 0, -1, 1, 2, 2, 2, -1, -1, 2, 2, 0, 0, -2, 2, 2, 0, 0, 3, 2, 2, 2, -\n    1, 0, 2, 2\n  ];\n\n  /**\n   * Tableau des Delta T (différence entre Temps universel et temps terrestre)\n   * tous les 2 ans de 1620 à 2014\n   * @access private\n   * @author John Walker & Gilles Toubiana\n   * @since 0.0.1\n   * @see {@link http://fourmilab.ch/documents/calendar/|deltaTtab} |\n   * {@link http://maia.usno.navy.mil/ser7/deltat.data|Valeurs} |\n   * {@link http://maia.usno.navy.mil/ser7/deltat.preds|Predictions} |\n   * {@link http://eclipse.gsfc.nasa.gov/SEcat5/deltatpoly.html|Expressions}\n   * @constant {Array}\n   */\n  var delta = [121, 112, 103, 95, 88, 82, 77, 72, 68, 63, 60, 56, 53, 51,\n    48, 46, 44, 42, 40, 38, 35, 33, 31, 29, 26, 24, 22, 20, 18, 16, 14,\n    12, 11, 10, 9, 8, 7, 7, 7, 7, 7, 7, 8, 8, 9, 9, 9, 9, 9, 10, 10, 10,\n    10, 10, 10, 10, 10, 11, 11, 11, 11, 11, 12, 12, 12, 12, 13, 13, 13,\n    14, 14, 14, 14, 15, 15, 15, 15, 15, 16, 16, 16, 16, 16, 16, 16, 16,\n    15, 15, 14, 13, 13.1, 12.5, 12.2, 12, 12, 12, 12, 12, 12, 11.9, 11.6,\n    11, 10.2, 9.2, 8.2, 7.1, 6.2, 5.6, 5.4, 5.3, 5.4, 5.6, 5.9, 6.2, 6.5,\n    6.8, 7.1, 7.3, 7.5, 7.6, 7.7, 7.3, 6.2, 5.2, 2.7, 1.4, -1.2, -2.8, -\n    3.8, -4.8, -5.5, -5.3, -5.6, -5.7, -5.9, -6, -6.3, -6.5, -6.2, -4.7, -\n    2.8, -0.1, 2.6, 5.3, 7.7, 10.4, 13.3, 16, 18.2, 20.2, 21.1, 22.4,\n    23.5, 23.8, 24.3, 24, 23.9, 23.9, 23.7, 24, 24.3, 25.3, 26.2, 27.3,\n    28.2, 29.1, 30, 30.7, 31.4, 32.2, 33.1, 34, 35, 36.5, 38.3, 40.2,\n    42.2, 44.9, 46.9, 49, 50.9, 52.5, 54, 55.1, 56.1, 57.2, 58.7, 60.4,\n    61.9, 63.2, 64, 64.4, 64.6, 65, 65.6, 66.2, 66.7, 67.5\n  ];\n\n  /**\n   * Jours juliens des équinoxes avant l'an 1000\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @see {@link http://fourmilab.ch/documents/calendar/|JDE0tab1000}\n   * @constant {Array}\n   */\n  var jde0Tab1000 = [\n    [1721139.29189, 365242.13740, 0.06134, 0.00111, -0.00071],\n    [1721233.25401, 365241.72562, -0.05323, 0.00907, 0.00025],\n    [1721325.70455, 365242.49558, -0.11677, -0.00297, 0.00074],\n    [1721414.39987, 365242.88257, -0.00769, -0.00933, -0.00006]\n  ];\n\n  /**\n   * Jours juliens des équinoxes de l'an 1000 à l'an 2000\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @see {@link http://fourmilab.ch/documents/calendar/|JDE0tab2000}\n   * @constant {Array}\n   */\n  var jde0Tab2000 = [\n    [2451623.80984, 365242.37404, 0.05169, -0.00411, -0.00057],\n    [2451716.56767, 365241.62603, 0.00325, 0.00888, -0.00030],\n    [2451810.21715, 365242.01767, -0.11575, 0.00337, 0.00078],\n    [2451900.05952, 365242.74049, -0.06223, -0.00823, 0.00032]\n  ];\n\n  /**\n   * Nombre de jours juliens correspondants à l'an 1 gregorien\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @see {@link http://fourmilab.ch/documents/calendar/|GREGORIAN_EPOCH}\n   * @constant {Number}\n   * @example\n   * jjVersGregorien(1721425.5); // [1, 1, 1]\n   * jjVersGregorien(jjAn1Gregorien); // [1, 1, 1]\n   */\n  var jjAn1Gregorien = 1721425.5;\n\n  /**\n   * Nombre de jours juliens correspondants à l'an 2000 grégorien\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @see {@link http://fourmilab.ch/documents/calendar/|J2000}\n   * @constant {Number}\n   * @example\n   * jjVersGregorien(2451545.0); // [2000, 1, 1]\n   * jjVersGregorien(jjAn2000Gregorien); // [2000, 1, 1]\n   */\n  var jjAn2000Gregorien = 2451545.0;\n\n  /**\n   * Nombre de jours juliens correspondants à l'adoption du calendrier\n   * républicain dans le journal officiel lors de la Commune de Paris\n   * en 1871\n   * @access private\n   * @author Gilles Toubiana\n   * @since 0.0.1\n   * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n   * @constant {Number}\n   * @example\n   * jjVersGregorien(2404504.5); // [1871, 3, 18]\n   * jjVersGregorien(jjDebutCommuneDeParis); // [1871, 3, 18]\n   * jjVersRepublicain(2404504.5); // [79, 6, 3, 7]\n   * jjVersRepublicain(jjDebutCommuneDeParis); // [79, 6, 3, 7]\n   */\n  var jjDebutCommuneDeParis = 2404504.5;\n\n  /**\n   * Nombre de jours juliens correspondants à l'adoption du calendrier\n   * grégorien\n   * @access private\n   * @author Gilles Toubiana\n   * @since 0.0.1\n   * @see {@link https://github.com/gtoubiana/acte.js|Projet sur GitHub}\n   * @constant {Number}\n   * @example\n   * jjVersGregorien(2299160.5); // [1582, 10, 15]\n   * jjVersGregorien(jjDebutGregorien); // [1582, 10, 15]\n   * jjVersJulien(2299160.5); // [1582, 10, 5]\n   * jjVersJulien(jjDebutGregorien); // [1582, 10, 5]\n   */\n  var jjDebutGregorien = 2299160.5;\n\n  /**\n   * Nombre de jours juliens correspondants à l'an 1 républicain\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @see {@link fourmilab.ch/documents/calendar/|FRENCH_REVOLUTIONARY_EPOCH}\n   * @constant {Number}\n   * @example\n   * jjVersGregorien(2375839.5); // [1792, 9, 22]\n   * jjVersGregorien(jjDebutRepublicain); // [1792, 9, 22]\n   * jjVersRepublicain(2375839.5); // [1, 1, 1, 1]\n   * jjVersRepublicain(jjDebutRepublicain); // [1, 1, 1, 1]\n   */\n  var jjDebutRepublicain = 2375839.5;\n\n  /**\n   * Nombre de jours juliens correspondants à l'abrogation du calendrier\n   * républicain dans le journal officiel lors de la Commune de Paris\n   * en 1871\n   * @access private\n   * @author Gilles Toubiana\n   * @since 0.0.1\n   * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n   * @constant {Number}\n   * @example\n   * jjVersGregorien(2404575.5); // [1871, 5, 28]\n   * jjVersGregorien(jjFinCommuneDeParis); // [1871, 5, 28]\n   * jjVersRepublicain(2404575.5); // [79, 9, 1, 8]\n   * jjVersRepublicain(jjFinCommuneDeParis); // [79, 9, 1, 8]\n   */\n  var jjFinCommuneDeParis = 2404575.5;\n\n  /**\n   * Nombre de jours juliens correspondants à l'abrogation du calendrier\n   * républicain\n   * @access private\n   * @author Gilles Toubiana\n   * @since 0.0.1\n   * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n   * @constant {Number}\n   * @example\n   * jjVersGregorien(2380686.5); // [1805, 12, 31]\n   * jjVersGregorien(jjFinRepublicain); // [1805, 12, 31]\n   * jjVersRepublicain(2380686.5); // [14, 4, 1, 10]\n   * jjVersRepublicain(jjFinRepublicain); // [14, 4, 1, 10]\n   */\n  var jjFinRepublicain = 2380686.5;\n\n  /**\n   * Expressions régulières pour convertir les mois gregoriens\n   * @access private\n   * @author Gilles Toubiana\n   * @since 0.0.1\n   * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n   * @constant {Array}\n   */\n  var regexpGregorien = [{\n    regexp: 'jan(v)?(\\\\.)?(ier)?',\n    replace: '/1/'\n  }, {\n    regexp: 'f(é|e)v(r)?(\\\\.)?(ier)?',\n    replace: '/2/'\n  }, {\n    regexp: 'mar(s|\\\\.)?',\n    replace: '/3/'\n  }, {\n    regexp: 'avr(il|\\\\.)?',\n    replace: '/4/'\n  }, {\n    regexp: 'mai',\n    replace: '/5/'\n  }, {\n    regexp: 'ju(i)?n',\n    replace: '/6/'\n  }, {\n    regexp: 'ju(i)?l(\\\\.|l)?(\\\\.)?(et)?',\n    replace: '/7/'\n  }, {\n    regexp: 'ao(u|û)(t|\\\\.)?',\n    replace: '/8/'\n  }, {\n    regexp: 'sep(t)?(\\\\.)?(embre)?',\n    replace: '/9/'\n  }, {\n    regexp: '7bre',\n    replace: '/9/'\n  }, {\n    regexp: 'oct(obre|\\\\.)?',\n    replace: '/10/'\n  }, {\n    regexp: '8bre',\n    replace: '/10/'\n  }, {\n    regexp: 'nov(embre|\\\\.)?',\n    replace: '/11/'\n  }, {\n    regexp: '9bre',\n    replace: '/11/'\n  }, {\n    regexp: 'd(é|e)c(embre|\\\\.)?',\n    replace: '/12/'\n  }, {\n    regexp: 'Xbre',\n    replace: '/12/'\n  }, {\n    regexp: '[^-()\\\\d/*+.]',\n    replace: ''\n  }];\n\n  /**\n   * Expressions régulières pour convertir les mois républicains\n   * @access private\n   * @author Gilles Toubiana\n   * @since 0.0.1\n   * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n   * @constant {Array}\n   */\n  var regexpRepublicain = [{\n    regexp: 'vend(é|e)miaire',\n    replace: '/1/'\n  }, {\n    regexp: 'brumaire',\n    replace: '/2/'\n  }, {\n    regexp: 'frimaire',\n    replace: '/3/'\n  }, {\n    regexp: 'niv(ô|o)se',\n    replace: '/4/'\n  }, {\n    regexp: 'pluvi(ô|o)se',\n    replace: '/5/'\n  }, {\n    regexp: 'vent(ô|o)se',\n    replace: '/6/'\n  }, {\n    regexp: 'germinal',\n    replace: '/7/'\n  }, {\n    regexp: 'flor(é|e)al',\n    replace: '/8/'\n  }, {\n    regexp: 'prairial',\n    replace: '/9/'\n  }, {\n    regexp: 'messidor',\n    replace: '/10/'\n  }, {\n    regexp: 'thermidor',\n    replace: '/11/'\n  }, {\n    regexp: 'fructidor',\n    replace: '/12/'\n  }, {\n    regexp: 'san(s-)?culottide(s)?',\n    replace: '/13/'\n  }, {\n    regexp: 'jour(s)?\\\\scompl(é|e)mentaire(s)?',\n    replace: '/13/'\n  }, {\n    regexp: 'd(é|e)cade\\\\s(\\\\d){1,2}',\n    replace: ''\n  }, {\n    regexp: '[^-()\\\\d/*+.]',\n    replace: ''\n  }];\n\n  /**\n   * Nombre de jours dans un siècle julien\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @see {@link http://fourmilab.ch/documents/calendar/|JulianCentury}\n   * @constant {Number}\n   */\n  var siecleJulien = 36525.0;\n\n  /**\n   * Termes périodiques pour obtenir des temps réels\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @see {@link http://fourmilab.ch/documents/calendar/|EquinoxpTerms}\n   * @constant {Array}\n   */\n  var termesPerEquinoxes = [485, 324.96, 1934.136, 203, 337.23, 32964.467,\n    199, 342.08, 20.186, 182, 27.85, 445267.112, 156, 73.14, 45036.886,\n    136, 171.52, 22518.443, 77, 222.54, 65928.934, 74, 296.72, 3034.906,\n    70, 243.58, 9037.513, 58, 119.81, 33718.147, 52, 297.17, 150.678, 50,\n    21.02, 2281.226, 45, 247.54, 29929.562, 44, 325.15, 31555.956, 29,\n    60.93, 4443.417, 18, 155.12, 67555.328, 17, 288.79, 4562.452, 16,\n    198.04, 62894.029, 14, 199.76, 31436.921, 12, 95.39, 14577.848, 12,\n    287.11, 31931.756, 12, 320.81, 34777.259, 9, 227.73, 1222.114, 8,\n    15.45, 16859.074\n  ];\n\n  /**\n   * Pour convertir des degrés en radians\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|dtr}\n   * @param  {Number} d - Angle en degrés\n   * @return {Number} Angle en radians\n   * @example\n   * degresVersRadians(90); // 1.5707963267948966\n   */\n  var degresVersRadians = function degresVersRadians(d) {\n    return d * Math.PI / 180.0;\n  };\n\n  /**\n   * Pour normaliser un angle entre 0 et 360 degrés\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|fixangle}\n   * @param  {Number} a - Angle en degrés\n   * @return {Number} Angle entre 0 et 360 degrés\n   * @example\n   * normaliserDegres(375); // 15\n   */\n  var normaliserDegres = function normaliserDegres(a) {\n    return a - 360.0 * Math.floor(a / 360.0);\n  };\n\n  /**\n   * Pour convertir des radians en degrés\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|rtd}\n   * @param  {Number} r - Angle en radians\n   * @return {Number} Angle en degrés\n   * @example\n   * radiansVersDegres(1.5707963267948966); // 90\n   */\n  var radiansVersDegres = function radiansVersDegres(r) {\n    return r * 180.0 / Math.PI;\n  };\n\n  /**\n   * Pour calculer les restes avec des nombres décimaux\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|mod}\n   * @param  {Number} a - Nombre à diviser\n   * @param  {Number} b - Diviseur\n   * @return {Number} Reste de a par b\n   * @example\n   * reste(3,2); // 1\n   */\n  var reste = function reste(a, b) {\n    return a - b * Math.floor(a / b);\n  };\n\n  /**\n   * Pour calculer le sinus d'un angle en degrés\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|dsin}\n   * @param  {Number} d - Angle en degrés\n   * @return {Number} Sinus de l'angle en degrés\n   * @example\n   * sinus(90); // 1\n   */\n  var sinus = function sinus(d) {\n    return Math.sin(degresVersRadians(d));\n  };\n\n  /**\n   * Pour calculer le cosinus d'un angle en degrés\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|dcos}\n   * @param  {Number} d - Angle en degrés\n   * @return {Number} Cosinus de l'angle en degrés\n   * @example\n   * cosinus(0); // 1\n   */\n  var cosinus = function cosinus(d) {\n    return Math.cos(degresVersRadians(d));\n  };\n\n  /**\n   * Pour calculer le nombre de jours juliens d'une equinoxe ou d'un solstice\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|equinox}\n   * @param  {Number} an - Année\n   * @param  {Number} item - L'item à calculer :\n   * 0 = Equinoxe de Mars,\n   * 1 = Solstice de Juin,\n   * 2 = Equinoxe de Septembre,\n   * 3 = Solstice de Décembre\n   * @return {Number} Le nombre de jours juliens pour l'equinoxe ou solstice\n   * @example\n   * equinoxe(2015,0); // 2457102.4488504543\n   */\n  var equinoxe = function equinoxe(an, item) {\n    var i = void 0;\n    var j = void 0;\n    var Jde0tab = void 0;\n    var S = void 0;\n    var Y = void 0;\n\n    if (an < 1000) {\n      Jde0tab = jde0Tab1000;\n      Y = an / 1000;\n    } else {\n      Jde0tab = jde0Tab2000;\n      Y = (an - 2000) / 1000;\n    }\n    var Jde0 = Jde0tab[item][0] + Jde0tab[item][1] * Y + Jde0tab[item][2] *\n      Math.pow(Y, 2) + Jde0tab[item][3] * Math.pow(Y, 3) + Jde0tab[item][\n        4\n      ] * Math.pow(Y, 4);\n    var T = (Jde0 - 2451545.0) / 36525;\n    var W = 35999.373 * T - 2.47;\n    var deltaL = 1 + 0.0334 * cosinus(W) + 0.0007 * cosinus(2 * W);\n    S = 0;\n\n    for (i = j = 0; i < 24; i++) {\n      S += termesPerEquinoxes[j] * cosinus(termesPerEquinoxes[j + 1] +\n        termesPerEquinoxes[j + 2] * T);\n      j += 3;\n    }\n\n    return Jde0 + S * 0.00001 / deltaL;\n  };\n\n  /**\n   * Pour calculer la différence entre temps terrestre et temps universel,\n   * en secondes\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|deltat}\n   * @param {Number} an - Année\n   * @return {Number} Différence entre temps terrestre et temps universel,\n   * en secondes\n   * @example\n   * deltaT(2015); // 86.41924999999999\n   */\n  var deltaT = function deltaT(an) {\n    var dt = void 0;\n\n    if (an >= 1620 && an <= 2012) {\n      var i = Math.floor((an - 1620) / 2);\n      var f = (an - 1620) / 2 - i;\n      dt = delta[i] + (delta[i + 1] - delta[i]) * f;\n    } else {\n      var t = (an - 2000) / 100;\n      if (an < 948) {\n        dt = 2177 + 497 * t + 44.1 * t * t;\n      } else {\n        dt = 102 + 102 * t + 25.3 * t * t;\n        if (an > 2000 && an < 2100) {\n          dt += 0.37 * (an - 2100);\n        }\n      }\n    }\n\n    return dt;\n  };\n\n  /**\n   * Pour calculer l'obliquité de l'écliptique pour un nombre de jours juliens\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|obliqeq}\n   * @param  {Number} jj - Nombre de jours juliens\n   * @return {Number} Obliquité de l'écliptique\n   * @example\n   * obliquiteEcliptique(2457333.5); // 23.437230456425635\n   */\n  var obliquiteEcliptique = function obliquiteEcliptique(jj) {\n    var oTerms = [-4680.93, -1.55, 1999.25, -51.38, -249.67, -39.05, 7.12,\n      27.87, 5.79, 2.45\n    ];\n    var u = (jj - jjAn2000Gregorien) / (siecleJulien * 100);\n    var v = u;\n    var eps = 23 + 26 / 60.0 + 21.448 / 3600.0;\n    var i = void 0;\n\n    if (Math.abs(u) < 1.0) {\n      for (i = 0; i < 10; i++) {\n        eps += oTerms[i] / 3600.0 * v;\n        v *= u;\n      }\n    }\n\n    return eps;\n  };\n\n  /**\n   * Pour calculer la position du soleil\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|sunpos}\n   * @param  {Number} jj - Nombre de jours juliens\n   * @return {Array} Position du soleil : Angles en degrés.\n   * [0] Longitude moyenne géométrique du Soleil,\n   * [1] Anomalie moyenne du Soleil,\n   * [2] Excentricité de l'orbite de la Terre,\n   * [3] Équation du centre du Soleil,\n   * [4] Longitude réelle du Soleil,\n   * [5] Anomalie réelle du Soleil,\n   * [6] Rayon vecteur du Soleil,\n   * [7] Longitude apparente du Soleil pour une equinoxe,\n   * [8] Ascension réelle du Soleil,\n   * [9] Déclinaison réelle du Soleil,\n   * [10] Ascension apparente du Soleil,\n   * [11] Déclinaison apparente du Soleil\n   * @example\n   * positionSoleil(2457333.5); //[225.88621192607388, 302.6763369039327,\n   * // 0.016701968773317977, -1.6291396906692837, 224.2570722354046,\n   * // 301.0471972132634, 0.9911840619194138, 224.25125854183977,\n   * // 221.79690960202632, -16.115660127694625, 221.79168151491098,\n   * // -16.112230690435588]\n   */\n  var positionSoleil = function positionSoleil(jj) {\n    var T = (jj - jjAn2000Gregorien) / siecleJulien;\n    var t2 = T * T;\n    var l0 = normaliserDegres(280.46646 + 36000.76983 * T + 0.0003032 *\n      t2);\n    var M = normaliserDegres(357.52911 + 35999.05029 * T + -0.0001537 *\n      t2);\n    var e = 0.016708634 + -0.000042037 * T + -0.0000001267 * t2;\n    var C = (1.914602 + -0.004817 * T + -0.000014 * t2) * sinus(M) + (\n      0.019993 - 0.000101 * T) * sinus(2 * M) + 0.000289 * sinus(3 * M);\n    var sunLong = l0 + C;\n    var sunAnomaly = M + C;\n    var sunR = 1.000001018 * (1 - e * e) / (1 + e * cosinus(sunAnomaly));\n    var Omega = 125.04 - 1934.136 * T;\n    var Lambda = sunLong + -0.00569 + -0.00478 * sinus(Omega);\n    var epsilon0 = obliquiteEcliptique(jj);\n    var epsilon = epsilon0 + 0.00256 * cosinus(Omega);\n    var Alpha = normaliserDegres(radiansVersDegres(Math.atan2(cosinus(\n      epsilon0) * sinus(sunLong), cosinus(sunLong))));\n    var Delta = radiansVersDegres(Math.asin(sinus(epsilon0) * sinus(\n      sunLong)));\n    var AlphaApp = normaliserDegres(radiansVersDegres(Math.atan2(cosinus(\n      epsilon) * sinus(Lambda), cosinus(Lambda))));\n    var DeltaApp = radiansVersDegres(Math.asin(sinus(epsilon) * sinus(\n      Lambda)));\n\n    return [l0, M, e, C, sunLong, sunAnomaly, sunR, Lambda, Alpha, Delta,\n      AlphaApp, DeltaApp\n    ];\n  };\n\n  /**\n   * Pour calculer la nutation en longitude (deltaPsi),\n   * et obliquité (deltaEpsilon) pour un nombre de jours juliens\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|nutation}\n   * @param  {Number} jj - Nombre de jours juliens\n   * @return {Array} Nutation en [0] longitude et [1] obliquité en degrés\n   * @example\n   * nutation(2457333.5);\n   * // [-0.000514859690208824, -0.0025586654864005456]\n   */\n  var nutation = function nutation(jj) {\n    var ta = [];\n    var t = (jj - 2451545.0) / 36525.0;\n    var t2 = t * t;\n    var t3 = t * t2;\n    var dp = 0;\n    var de = 0;\n\n    ta[0] = degresVersRadians(297.850363 + 445267.11148 * t - 0.0019142 *\n      t2 + t3 / 189474.0);\n    ta[1] = degresVersRadians(357.52772 + 35999.05034 * t - 0.0001603 *\n      t2 - t3 / 300000.0);\n    ta[2] = degresVersRadians(134.96298 + 477198.867398 * t + 0.0086972 *\n      t2 + t3 / 56250.0);\n    ta[3] = degresVersRadians(93.27191 + 483202.017538 * t - 0.0036825 *\n      t2 + t3 / 327270);\n    ta[4] = degresVersRadians(125.04452 - 1934.136261 * t + 0.0020708 *\n      t2 + t3 / 450000.0);\n    for (var i = 0; i < 5; i++) {\n      ta[i] -= 2 * Math.PI * Math.floor(ta[i] / (2 * Math.PI));\n    }\n    var to10 = t / 10.0;\n\n    for (var _i = 0; _i < 63; _i++) {\n      var ang = 0;\n\n      for (var j = 0; j < 5; j++) {\n        if (argNutMult[_i * 5 + j] !== 0) {\n          ang += argNutMult[_i * 5 + j] * ta[j];\n        }\n      }\n      dp += (argNutCoeff[_i * 4 + 0] + argNutCoeff[_i * 4 + 1] * to10) *\n        Math.sin(ang);\n      de += (argNutCoeff[_i * 4 + 2] + argNutCoeff[_i * 4 + 3] * to10) *\n        Math.cos(ang);\n    }\n\n    return [dp / (3600.0 * 10000.0), de / (3600.0 * 10000.0)];\n  };\n\n  /**\n   * Pour calculer l'équation du temps pour un moment précis\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|equationOfTime}\n   * @param  {Number} jj - Nombre de jours juliens\n   * @return {Number} Équation du temps pour une fraction de jour\n   * @example\n   * equationDuTemps(2457333.5); // 0.002839122270852552\n   */\n  var equationDuTemps = function equationDuTemps(jj) {\n    var tau = (jj - jjAn2000Gregorien) / (siecleJulien * 10);\n    var l0 = normaliserDegres(280.4664567 + 360007.6982779 * tau +\n      0.03032028 * Math.pow(tau, 2) + Math.pow(tau, 3) / 49931 + -(Math\n        .pow(tau, 4) / 15300) + -(Math.pow(tau, 5) / 2000000));\n    var alpha = positionSoleil(jj)[10];\n    var deltaPsi = nutation(jj)[0];\n    var epsilon = obliquiteEcliptique(jj) + nutation(jj)[1];\n    var E = l0 + -0.0057183 + -alpha + deltaPsi * cosinus(epsilon);\n\n    E -= 20.0 * Math.floor(E / 20.0);\n\n    return E / (24 * 60);\n  };\n\n  /**\n   * Pour calculer le nombre de jours juliens et la fraction de l'équinoxe\n   * de septembre au méridien de Paris pour une année grégorienne\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|equinoxe_a_paris}\n   * @param {Number} an - Année grégorienne\n   * @return {Number} Nombre de jours juliens et fraction de l'équinoxe\n   * de septembre au méridien de Paris pour une année grégorienne\n   * @example\n   * fractionEquinoxe(2015); // 2457288.855100263\n   */\n  var fractionEquinoxe = function fractionEquinoxe(an) {\n    var equJED = equinoxe(an, 2);\n    var equJD = equJED - deltaT(an) / (24 * 60 * 60);\n    var equAPP = equJD + equationDuTemps(equJED);\n    var dtParis = (2 + 20 / 60.0 + 15 / (60 * 60.0)) / 360;\n\n    return equAPP + dtParis;\n  };\n\n  /**\n   * Pour calculer le nombre de jours juliens correspondant à l'équinoxe\n   * de septembre au méridien de Paris, pour une année grégorienne\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|paris_equinoxe_jd}\n   * @param {Number} an - Année grégorienne\n   * @return {Number} Nombre de jours juliens pour l'équinoxe de septembre\n   * @example\n   * equinoxeAParis(2015); // 2457288.5\n   */\n  var equinoxeAParis = function equinoxeAParis(an) {\n    var ep = fractionEquinoxe(an);\n\n    return Math.floor(ep - 0.5) + 0.5;\n  };\n\n  /**\n   * Pour déterminer si une année grégorienne est bissextile\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|leap_gregorian}\n   * @param {Number} an - Année grégorienne\n   * @return {Boolean} Est-ce une année bissextile ?\n   * @example\n   * gregorienBissextile(2012); // true\n   */\n  var gregorienBissextile = function gregorienBissextile(an) {\n    return an % 4 === 0 && !(an % 100 === 0 && an % 400 !== 0);\n  };\n\n  /**\n   * Pour calculer le nombre de jours juliens (jj) à partir d'une date\n   * grégorienne\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|gregorian_to_jd}\n   * @param {Number} an - Année grégorienne\n   * @param {Number} mois - Mois grégorien\n   * @param {Number} jour - Jour grégorien\n   * @return {Number} Nombre de jours juliens\n   * @example\n   * gregorienVersJj(2015,11,7); // 2457333.5\n   */\n  var gregorienVersJj = function gregorienVersJj(an, mois, jour) {\n    var anneeBissextile = gregorienBissextile(an) ? -1 : -2;\n\n    return jjAn1Gregorien - 1 + 365 * (an - 1) + Math.floor((an - 1) / 4) +\n      -Math.floor((an - 1) / 100) + Math.floor((an - 1) / 400) + Math.floor(\n        (367 * mois - 362) / 12 + (mois <= 2 ? 0 : anneeBissextile) +\n        jour);\n  };\n\n  /**\n   * Pour calculer une date grégorienne à partir du nombre de jours juliens\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|jd_to_gregorian}\n   * @param {Number} jj - Nombre de jours juliens\n   * @return {Array} [0] Année, [1] Mois et [2] Jour grégorien\n   * @example\n   * jjVersGregorien(2457333.5); // [2015, 11, 7]\n   */\n  var jjVersGregorien = function jjVersGregorien(jj) {\n    var wjd = Math.floor(jj - 0.5) + 0.5;\n    var depoch = wjd - jjAn1Gregorien;\n    var quadricent = Math.floor(depoch / 146097);\n    var dqc = reste(depoch, 146097);\n    var cent = Math.floor(dqc / 36524);\n    var dcent = reste(dqc, 36524);\n    var quad = Math.floor(dcent / 1461);\n    var dquad = reste(dcent, 1461);\n    var yindex = Math.floor(dquad / 365);\n    var an = quadricent * 400 + cent * 100 + quad * 4 + yindex;\n    var anneeBissextile = gregorienBissextile(an) ? 1 : 2;\n    if (!(cent === 4 || yindex === 4)) an++;\n    var yearday = wjd - gregorienVersJj(an, 1, 1);\n    var leapadj = wjd < gregorienVersJj(an, 3, 1) ? 0 : anneeBissextile;\n    var mois = Math.floor(((yearday + leapadj) * 12 + 373) / 367);\n    var jour = wjd - gregorienVersJj(an, mois, 1) + 1;\n\n    return [an, mois, jour];\n  };\n\n  /**\n   * Pour convertir en nombre entier positif\n   * @access private\n   * @author Gilles Toubiana\n   * @since 0.0.1\n   * @license MIT\n   * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n   * @param {Number} num - le nombre à convertir\n   * @return {Number} Le nombre entier positif\n   * @example\n   * absInt(-23.45); // 23\n   */\n  var absInt = function absInt(num) {\n    return Math.abs(parseInt(num, 10));\n  };\n\n  /**\n   * Pour calculer l'année républicaine correspondant à un nombre de jours\n   * juliens\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link fourmilab.ch/documents/calendar/|annee_da_la_revolution}\n   * @param {Number} jj - Nombre de jours juliens\n   * @return {Array} [0] An républicain,\n   * [1] Nombre de jours juliens pour l'équinoxe de l'année républicaine\n   * @example\n   * anRepublicain(2379902.5); // [12, 2379857.5]\n   */\n  var anRepublicain = function anRepublicain(jj) {\n    var guess = jjVersGregorien(jj)[0] - 2;\n    var lasteq = equinoxeAParis(guess);\n\n    while (lasteq > jj) {\n      guess--;\n      lasteq = equinoxeAParis(guess);\n    }\n\n    var nexteq = lasteq - 1;\n    while (!(lasteq <= jj && jj < nexteq)) {\n      lasteq = nexteq;\n      guess++;\n      nexteq = equinoxeAParis(guess);\n    }\n    var adr = Math.round((lasteq - jjDebutRepublicain) / anneeTropique) +\n      1;\n\n    return [adr, lasteq];\n  };\n\n  /**\n   * Pour créer un objet date grégorien valide\n   * @access private\n   * @author Gilles Toubiana\n   * @since 0.0.1\n   * @license MIT\n   * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n   * @param {Number} jour - le jour du mois gregorien en chiffres\n   * @param {Number} mois - le mois gregorien en chiffres\n   * @param {Number} an - l'année gregorienne en chiffres\n   * @return {Object} L'objet date valide\n   * @example\n   * dateValide(10,12,34); // Sun Dec 10 34 00:00:00 GMT+0100 (CET)\n   */\n  var dateValide = function dateValide(jour, mois, an) {\n    var resultat = new Date(an, mois - 1, jour);\n\n    resultat.setFullYear(an);\n\n    return resultat;\n  };\n\n  /**\n   * Pour calculer une date julienne à partir du nombre de jours juliens\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link http://fourmilab.ch/documents/calendar/|jd_to_julian}\n   * @param {Number} jj - Nombre de jours juliens\n   * @return {Array} [0] An, [1] Mois et [2] Jour julien\n   * @example\n   * jjVersJulien(2457346.5); // [2015,11,7]\n   */\n  var jjVersJulien = function jjVersJulien(jj) {\n    var b = Math.floor(jj + 0.5) + 1524;\n    var c = Math.floor((b - 122.1) / 365.25);\n    var d = Math.floor(365.25 * c);\n    var e = Math.floor((b - d) / 30.6001);\n    var mois = Math.floor(e < 14 ? e - 1 : e - 13);\n    var jour = b - d - Math.floor(30.6001 * e);\n    var an = Math.floor(mois > 2 ? c - 4716 : c - 4715);\n\n    if (an < 1) {\n      an--;\n    }\n\n    return [an, mois, jour];\n  };\n\n  /**\n   * Pour calculer la date républicaine à partir du nombre de jours juliens,\n   * les 4 ou 5 'sansculottides' sont considérés comme un 13e mois\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link fourmilab.ch/documents/calendar/|jd_to_french_revolutionary}\n   * @param {Number} jj - Nombre de jours juliens\n   * @return {Array} [0] An, [1] Mois, [2] Décade et [3] Jour républicain\n   * @example\n   * jjVersRepublicain(2379902.5); // [12, 2, 2, 6]\n   */\n  var jjVersRepublicain = function jjVersRepublicain(jj) {\n    var tempJj = Math.floor(jj) + 0.5;\n    var adr = anRepublicain(tempJj);\n    var an = adr[0];\n    var equinox = adr[1];\n    var mois = Math.floor((tempJj - equinox) / 30) + 1;\n    var jour = (tempJj - equinox) % 30;\n    var decade = Math.floor(jour / 10) + 1;\n\n    jour = jour % 10 + 1;\n\n    return [an, mois, decade, jour];\n  };\n\n  /**\n   * Pour remplacer en série avec un objet contenant des regex\n   * @access private\n   * @author Gilles Toubiana\n   * @since 0.0.1\n   * @license MIT\n   * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n   * @param {String} texte - Le texte à modifier\n   * @param {Object} regex - Les expressions régulières de remplacements\n   * @param {String} options - Les options des expressions régulières\n   * @return {String} Le texte modifié\n   * @example\n   * remplacements('Bonjour', {'jour': 'soir'}, 'gi');\n   * // 'Bonsoir'\n   */\n  var remplacements = function remplacements(texte, regex, options) {\n    var resultat = regex.reduce(function (data, item) {\n      var result = data.replace(new RegExp(item.regexp, options),\n        item.replace);\n      return result;\n    }, texte);\n    return resultat;\n  };\n\n  /**\n   * Pour calculer le nombre de jours juliens à partir d'une date républicaine\n   * @access private\n   * @author John Walker\n   * @since 0.0.1\n   * @license Domaine public\n   * @see {@link fourmilab.ch/documents/calendar/|french_revolutionary_to_jd}\n   * @param {Number} an - Année républicaine\n   * @param {Number} mois - Mois républicain\n   * @param {Number} decade - Décade républicaine\n   * @param {Number} jour - Jour de la décade républicaine\n   * @return {Number} Nombre de jours juliens\n   * @example\n   * republicainVersJj(12, 2, 2, 6); // 2379902.5\n   */\n  var republicainVersJj = function republicainVersJj(an, mois, decade, jour) {\n    var guess = jjDebutRepublicain + anneeTropique * (an - 1 - 1);\n    var adr = [an - 1, 0];\n\n    while (adr[0] < an) {\n      adr = anRepublicain(guess);\n      guess = adr[1] + (anneeTropique + 2);\n    }\n\n    return adr[1] + 30 * (mois - 1) + 10 * (decade - 1) + (jour - 1);\n  };\n\n  /**\n   * Pour convertir le jour du mois républicain en décade\n   * @access private\n   * @author Gilles Toubiana\n   * @since 0.0.1\n   * @license MIT\n   * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n   * @param {Number} rjmc - le jour du mois républicain\n   * @return {Number} La décade républicaine\n   * @example\n   * rjmcVersRdc(28); // 3\n   */\n  var rjmcVersRdc = function rjmcVersRdc(rjmc) {\n    var resultat = Math.abs(parseInt(rjmc, 10) % 10) === 0 ? Math.abs(\n      parseInt(rjmc / 10, 10)) : Math.abs(parseInt(rjmc / 10, 10) + 1);\n    return resultat;\n  };\n\n  /**\n   * Pour convertir le jour du mois républicain en jour de la décade\n   * @access private\n   * @author Gilles Toubiana\n   * @since 0.0.1\n   * @license MIT\n   * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n   * @param {Number} rjmc - le jour du mois républicain\n   * @return {Number} Le jour de la décade républicaine\n   * @example\n   * rjmcVersRjdc(28); // 8\n   */\n  var rjmcVersRjdc = function rjmcVersRjdc(rjmc) {\n    var resultat = Math.abs(parseInt(rjmc, 10) % 10) === 0 ? 10 : Math.abs(\n      parseInt(rjmc, 10) % 10);\n    return resultat;\n  };\n\n  /**\n   * Pour convertir des chiffres romains en chiffres arabes\n   * @access private\n   * @author Iván Montes\n   * @since 0.0.1\n   * @license unknown\n   * @see {@link http://blog.stevenlevithan.com/?p=65#comment-16129|Blog}\n   * @param {String} romain - Chiffre romain\n   * @return {Number} Chiffre arabe\n   * @example\n   * romainVersArabe('MMXII'); // 2012\n   */\n  var romainVersArabe = function romainVersArabe(romain) {\n    var lookup = {\n      I: 1,\n      V: 5,\n      X: 10,\n      L: 50,\n      C: 100,\n      D: 500,\n      M: 1000\n    };\n    var arabe = 0;\n    var i = romain.length - 1;\n    var tempRomain = romain.toUpperCase();\n\n    for (i; i >= 0; i--) {\n      if (lookup[tempRomain[i]] < lookup[tempRomain[i + 1]]) {\n        arabe -= lookup[tempRomain[i]];\n      } else {\n        arabe += lookup[tempRomain[i]];\n      }\n    }\n\n    return arabe;\n  };\n\n  /**\n   * Pour obtenir une saisie valide\n   * @access private\n   * @author Gilles Toubiana\n   * @since 0.0.1\n   * @license MIT\n   * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n   * @param {String} saisie - La saisie d'une date\n   * @param {Object} regexp - Un objet regexpRepublicain ou regexpGregorien\n   * pour convertir les mois\n   * @return {Array} La saisie valide\n   * @example\n   * saisieValide(saisie, regexpRepublicain);\n   * saisieValide(saisie, regexpGregorien);\n   */\n  var saisieValide = function saisieValide(saisie, regexp) {\n    var tempSaisie = saisie;\n    var u = void 0;\n\n    // On remplace le texte restant par des chiffres arabes\n    tempSaisie = remplacements(tempSaisie, regexp, 'gi').split(\n      /[\\/\\.]+/gi);\n\n    // Si il n'y a que l'année [1,1,ac]\n    if (!tempSaisie[1] && !tempSaisie[2]) {\n      if (tempSaisie[0].match(/\\d-/gi) || tempSaisie[0] === '') {\n        tempSaisie[0] = u;\n      } else {\n        tempSaisie = [1, 1, tempSaisie[0]];\n      }\n    }\n\n    // Si il n'y a que l'année et le mois [1,mc,ac]\n    if (!tempSaisie[0] && tempSaisie[1] && tempSaisie[2]) {\n      tempSaisie = [1, tempSaisie[1], tempSaisie[2]];\n    }\n    if (tempSaisie[1] && !tempSaisie[2]) {\n      tempSaisie = [1, tempSaisie[0], tempSaisie[1]];\n    }\n\n    return tempSaisie;\n  };\n\n  /**\n   * Pour convertir la saisie grégorienne ou julienne en Objet Jour\n   * @access private\n   * @author Gilles Toubiana\n   * @since 0.0.1\n   * @license MIT\n   * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n   * @param {String} saisie - Saisie d'une date\n   * @param {Boolean} limites - Par défaut, les résultats sont limités\n   * aux périodes d'utilisation des calendriers. Seule la valeur `false`\n   * permet de désactiver ces limites.\n   * @return {Array} Les dates républicaines, grégoriennes et juliennes\n   * @example\n   * tabGregorien(saisie, this.limites);\n   */\n  var tabGregorien = function tabGregorien(saisie, limites) {\n    // Uniformisation de la saisie\n    var iesaisie = saisie[0] === '/' ? '1' + saisie : saisie;\n    var saisieGregorien = saisieValide(iesaisie, regexpGregorien);\n    var tab = [];\n\n    // Lorsque la date est valide [gjmc,gmc,gac]\n    if (saisieGregorien[2] && saisieGregorien[0] < 32 && absInt(\n        saisieGregorien[0]) !== 0 && saisieGregorien[1] < 13 &&\n      saisieGregorien[1] !== '' && absInt(saisieGregorien[1]) !== 0) {\n      tab[4] = gregorienVersJj(parseInt(saisieGregorien[2], 10), absInt(\n        saisieGregorien[1]), absInt(saisieGregorien[0]));\n\n      // Limitations gregorien/julien\n      if (limites === true && tab[4] < jjDebutGregorien) {\n        tab[5] = absInt(saisieGregorien[0]);\n        tab[6] = absInt(saisieGregorien[1]);\n        tab[7] = parseInt(saisieGregorien[2], 10);\n        tab[8] = dateValide(tab[5], tab[6], tab[7]);\n      } else {\n        tab[0] = absInt(saisieGregorien[0]);\n        tab[1] = absInt(saisieGregorien[1]);\n        tab[2] = parseInt(saisieGregorien[2], 10);\n        tab[3] = dateValide(tab[0], tab[1], tab[2]);\n        var dateJulienne = jjVersJulien(tab[4]);\n        tab[5] = dateJulienne[2];\n        tab[6] = dateJulienne[1];\n        tab[7] = dateJulienne[0];\n        tab[8] = dateValide(tab[5], tab[6], tab[7]);\n      }\n\n      // Limitations republicain\n      if (tab[4] >= jjDebutRepublicain && tab[4] <= jjFinRepublicain ||\n        tab[4] >= jjDebutCommuneDeParis && tab[4] <= jjFinCommuneDeParis ||\n        limites === false) {\n        var dateRepublicaine = jjVersRepublicain(tab[4]);\n        tab = tab.concat([dateRepublicaine[3], dateRepublicaine[2], (\n            dateRepublicaine[2] - 1) * 10 + dateRepublicaine[3],\n          dateRepublicaine[1], dateRepublicaine[0]\n        ]);\n      }\n    }\n\n    return tab;\n  };\n\n  /**\n   * Pour convertir la saisie républicaine en Objet Jour\n   * @access private\n   * @author Gilles Toubiana\n   * @since 0.0.1\n   * @license MIT\n   * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n   * @param {String} saisie - Saisie d'une date\n   * @param {Boolean} limites - Par défaut, les résultats sont limités\n   * aux périodes d'utilisation des calendriers. Seule la valeur `false`\n   * permet de désactiver ces limites.\n   * @return {Array} Les dates républicaines, grégoriennes et juliennes\n   * @example\n   * tabRepublicain(saisie, this.limites);\n   */\n  var tabRepublicain = function tabRepublicain(saisie, limites) {\n    // On remplace les chiffres romains en chiffres arabes\n    var saisieRepublicain = saisie.replace(/\\W?an\\s-?([-MDCLXVI]+)\\W?/gi,\n      function (x, p1) {\n        var rva = romainVersArabe(p1);\n        return x.match(/-/) ? ' -' + rva : ' ' + rva;\n      });\n    var tab = [];\n\n    // Uniformisation de la saisie\n    saisieRepublicain = saisieValide(saisieRepublicain, regexpRepublicain);\n\n    // Lorsque la date est valide [rjmc,rmc,rac]\n    if (saisieRepublicain[2] && saisieRepublicain[0] < 30 && absInt(\n        saisieRepublicain[0]) !== 0 && saisieRepublicain[1] < 14 &&\n      absInt(saisieRepublicain[1]) !== 0) {\n      tab[4] = republicainVersJj(parseInt(saisieRepublicain[2], 10),\n        parseInt(saisieRepublicain[1], 10), rjmcVersRdc(\n          saisieRepublicain[0]), rjmcVersRjdc(saisieRepublicain[0]));\n\n      // Si jj (tab[4]) est dans les limites ou en illimité\n      if (tab[4] >= jjDebutRepublicain && tab[4] <= jjFinRepublicain ||\n        tab[4] >= jjDebutCommuneDeParis && tab[4] <= jjFinCommuneDeParis ||\n        limites === false) {\n        var dateGregorienne = jjVersGregorien(tab[4]);\n        var dateJulienne = jjVersJulien(tab[4]);\n        tab[0] = dateGregorienne[2];\n        tab[1] = dateGregorienne[1];\n        tab[2] = dateGregorienne[0];\n        tab[3] = dateValide(tab[0], tab[1], tab[2]);\n        tab[5] = dateJulienne[2];\n        tab[6] = dateJulienne[1];\n        tab[7] = dateJulienne[0];\n        tab[8] = dateValide(tab[5], tab[6], tab[7]);\n        tab[9] = rjmcVersRjdc(saisieRepublicain[0]);\n        tab[10] = rjmcVersRdc(saisieRepublicain[0]);\n        tab[11] = absInt(saisieRepublicain[0]);\n        tab[12] = parseInt(saisieRepublicain[1], 10);\n        tab[13] = parseInt(saisieRepublicain[2], 10);\n      }\n    }\n\n    return tab;\n  };\n\n  /**\n   * Pour convertir une saisie en objet JavaScript\n   * @memberof acte\n   * @class\n   * @chainable\n   * @access public\n   * @author Gilles Toubiana\n   * @see {@link https://github.com/gtoubiana/acte|Projet sur GitHub}\n   * @param {String} saisie - Saisie d'une date grégorienne ou républicaine.\n   * @param {Boolean} [limites=true] - Par défaut, les résultats sont limités\n   * aux périodes d'utilisation des calendriers :<br>\n   * - une saisie de date grégorienne sera considérée comme julienne avant\n   * le 15/10/1582<br>\n   * - une saisie de date républicaine ne sera valide que du 22/9/1792 au\n   * 31/12/1805 (Période républicaine) et du 18/3/1871 au 28/5/1871\n   * (Commune de Paris).<br>\n   * La valeur `false` permet de désactiver ces limitations.\n   * @since 0.0.1\n   * @license MIT\n   */\n  acte.Jour = function Jour(saisie, limites) {\n    _classCallCheck(this, Jour);\n\n    var tab = [];\n\n    this.variables = this.variables || {};\n    this.limites = limites !== false;\n\n    // On détecte si c'est une date républicaine\n    if (saisie.match(/\\W?an\\s-?([-MDCLXVI]+|\\d+)\\W?/gi)) {\n      tab = tabRepublicain(saisie, this.limites);\n\n      // Si ce n'est pas du républicain (donc grégorien ou julien)\n    } else {\n      tab = tabGregorien(saisie, this.limites);\n    }\n\n    // Ecriture de toutes les valeurs\n    this.variables = {\n      gregorien: {\n        jmc: tab[0],\n        mc: tab[1],\n        ac: tab[2],\n        od: tab[3]\n      },\n      julien: {\n        jj: tab[4],\n        jmc: tab[5],\n        mc: tab[6],\n        ac: tab[7],\n        od: tab[8]\n      },\n      republicain: {\n        jdc: tab[9],\n        dc: tab[10],\n        jmc: tab[11],\n        mc: tab[12],\n        ac: tab[13]\n      },\n      limites: this.limites\n    };\n  };\n  return acte;\n}));\n"],"sourceRoot":"/source/"}