MEMO:
  ☐ @NEW_DOWN cmd-enter @NEW_UP cmd-shift-enter @DONE cmd-d @ARCHIVE cmd-shift-a
  ☐ @CANCEL ctrl-c @UPDATE ctrl-s @TITLE : @LABEL @ @ISSUE #
0-0-2:
  ☐ Nettoyer les issues copiées de bms.js
  ☐ Revoir les taches gulp en dev + ci + services
0-0-3+:
  ☐ @readme ajouter des readmes dans /src, /test, /gulp
  ☐ @npm Créer un script npm ou une tâche gulp pour les npm publish + commit + release (https://help.github.com/articles/creating-releases/) && (https://github.com/blog/1547-release-your-software) && https://github.com/gulpjs/gulp/blob/master/docs/recipes/automate-release-workflow.md
  ☐ utiliser babel et reprogrammer en es6 (cf. twbootstrap 4-dev) => gulp-babel pour concat src
  ☐ migrer de airbnb/legacy à airbnb/base en utilisant babel
  ☐ harmoniser opensaucelabs tests avec ceux de twbootstrap 4-dev
  ☐ Migrer de jsbeautifier à esformatter (compatible eslint & standard)
  ☐ structure de projet : http://www.veams.org/veams-cli/project/project-structure.html @proposition
  ☐ acte.jour().gregorien()
  ☐ acte.jour({string}).gregorien({template}, {fallback}, {callback})
  ☐ Créer une fonction privée pour gérer le formatage ? @gregorien @julien
  ☐ Déterminer comment gérer les defaults et callbacks @gregorien
  ☐ Appeler une fonction privée dans le prototype ? @gregorien @julien @republicain
  ☐ Permettre le formatage 1er 2nd 3e en @gregorien ?
  ☐ acte.jour().julien()
  ☐ acte.jour().republicain()
  ☐ page de démo @demo
  ☐ Créer la page html de démo @demo
  ☐ Créer une page de doc @doc @demo
  ☐ Revoir le README.md

＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿＿
Archive:
  ✔ #3 2 bugs avec IE8 sous Win7 (cf. portable + ietester. Préparer une page de tests) @done(2016-04-05) @project(0-0-2)
  ✔ #2 Configurer karma et openSauceLabs : Jasmine + Karma + openSauceLabs + Gulp + Travis => une version dev et une version Travis + badge @done(2016-04-05) @project(0-0-2)
  ✔ Debug Gulp openSauce (n'Exit pas proprement) @done(2016-04-05) @project(0-0-2)
  ✘ commit + release + npm publish https://docs.npmjs.com/getting-started/publishing-npm-packages @cancelled(2016-04-05) @project(0-0-2)
  ✔ Réinjecter le sommaire dans le template doc constantes @done(2016-03-31) @project(0-0-2)
  ✔ Réinjecter le sommaire dans le template doc utilitaires @done(2016-03-31) @project(0-0-2)
  ✔ Base de template pour la doc des constantes @done(2016-03-31) @project(0-0-2)
  ✔ Base de template pour la doc des utilitaires @done(2016-03-31) @project(0-0-2)
  ✔ Base de template pour la doc dans dist @done(2016-03-31) @project(0-0-2)
  ✔ supprimer le repertoire bms.js @done(2016-03-30) @project(0-0-3+)
  ✔ migrer les issues de bms.js (dans /src/archives) https://github-issue-mover.appspot.com/ @done(2016-03-30) @project(0-0-2)
  ✔ Création d'un nouveau projet ACTE @done(2016-03-25) @project(0-0-2)
  ✔ renommer le module acte plutot que acte.js => remettre à jour tous les liens + npm @done(2016-03-25) @project(0-0-2)
  ✔ republier le npm 0.0.1 pour acte @done(2016-03-25) @project(0-0-2)
  ✔ migrer les codes de bms.js (dans /src/archives) @done(2016-03-25) @project(0-0-2)
  ✔ migrer les issues de acte.js (dans /src/archives) @done(2016-03-25) @project(0-0-2)
  ✔ supprimer acte.js @done(2016-03-25) @project(0-0-2)
  ✔ Revoir certains codestyle avec airbnb (private, constantes...) @done(2016-03-30) @project(0-0-2)
  ✔ @eslint code style | airbnb/legacy => encours @done(2016-03-24) @project(0-0-2)
  ✔ @eslint pour gulp (https://www.npmjs.com/package/eslint-config-gulp) @done(2016-03-23) @project(0-0-2)
  ✔ @eslint pour jasmine (https://github.com/ds82/eslint-config-ds82-jasmine) @done(2016-03-23) @project(0-0-2)
  ✔ @eslint revoir ouverture du module et esformatter/jsbeautifier pour validation finale @done(2016-03-24) @project(0-0-2)
  ✔ tester couvertures et validations @done(2016-03-24) @project(0-0-2)
  ✔ supprimer les certifications ? @done(2016-03-24) @project(0-0-2)
  ✔ @eslint bug pour espace fonction nommée Jour () => beautifier pas compatible. Se débarasser du beautifier ??? @done(2016-03-24) @project(0-0-2)
  ✔ @eslint fonctions anonymes seulement pour gulp et jasmine ? @done(2016-03-24) @project(0-0-2)
  ✔ Tout migrer vers airbnb/legacy http://nerds.airbnb.com/our-javascript-style-guide/ @done(2016-03-24) @project(0-0-2)
  ✘ @esformatter @standard @gulp-esformatter https://github.com/maxogden/standard-format/blob/master/rc/esformatter.json @cancelled(2016-03-24) @project(0-0-2)
  ✔ Vérifier la génération de l'api @done(2016-03-24) @project(0-0-2)
  ✔ @eslint vars on top ? @done(2016-03-21) @project(0-0-2)
  ✔ @eslint param reassign @done(2016-03-21) @project(0-0-2)
  ✔ @codestyle règles eslint = recommended + airbnb/legacy + gulp + standardjs + custom @done(2016-03-20) @project(0-0-2)
  ✔ @eslint @config @airbnbES5 https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb/rules @done(2016-03-20) @project(0-0-2)
  ✔ airbnb share configs http://eslint.org/docs/developer-guide/shareable-configs#sharing-multiple-configs @done(2016-03-20) @project(0-0-2)
  ✔ @eslint @config @standard https://github.com/feross/eslint-config-standard/blob/master/eslintrc.json @done(2016-03-20) @project(0-0-2)
  ✔ @eslint @config @gulp https://github.com/gulpjs/eslint-config-gulp/blob/master/eslint.json @done(2016-03-20) @project(0-0-2)
  ✔ @gulp supprimer certifications.js ??? (airbnb via eslint dans validations.js) @done(2016-03-20) @project(0-0-2)
  ✔ @codestyle airbnb ? https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb#eslint-config-airbnblegacy @done(2016-03-16) @project(0-0-2)
  ✔ @eslint @config @recommended https://github.com/eslint/eslint/blob/master/conf/eslint.json @done(2016-03-16) @project(0-0-2)
  ✔ Stream events : https://nodejs.org/api/stream.html @done(2016-03-15) @project(0-0-2)
  ✘ nouveaux plugins http://alferov.github.io/awesome-gulp/#caching @cancelled(2016-03-15) @project(0-0-2)
  ✔ Bugs avec newer @done(2016-03-15) @project(0-0-2)
  ✘ Revoir le script de couverture (avec cache + remember ?) @cancelled(2016-03-15) @project(0-0-2)
  ✘ @newer generation.licence @question @cached @cancelled(2016-03-15) @project(0-0-2)
  ✘ @newer generation.zip @question @cached @cancelled(2016-03-15) @project(0-0-2)
  ✘ depcheck badge https://github.com/depcheck/depcheck, https://depcheck.tk/ @cancelled(2016-03-13) @project(0-0-2)
  ✘ @newer generation.licence ? @question @cached @cancelled(2016-03-13) @project(0-0-2)
  ✘ @newer generation.zip ? @question @cached @cancelled(2016-03-13) @project(0-0-2)
  ✔ @lazy lazyStandard @done(2016-03-13) @project(0-0-2)
  ✔ @newer certification.standard @done(2016-03-13) @project(0-0-2)
  ✔ @newer generation.doc.constantes @done(2016-03-12) @project(0-0-2)
  ✔ @newer generation.doc.utilitaires @done(2016-03-13) @project(0-0-2)
  ✔ @newer generation.script @done(2016-03-13) @project(0-0-2)
  ✔ @newer generation.script.min @done(2016-03-13) @project(0-0-2)
  ✔ @newer generation.doc.dist @done(2016-03-13) @project(0-0-2)
  ✔ @newer validation.constantes @done(2016-03-13) @project(0-0-2)
  ✔ @newer validation.utilitaires @done(2016-03-13) @project(0-0-2)
  ✔ @newer validation.gulp @done(2016-03-13) @project(0-0-2)
  ✔ @newer validation.methodes @done(2016-03-13) @project(0-0-2)
  ✔ @newer validation.tests @done(2016-03-13) @project(0-0-2)
  ✔ @newer specifications.tests @done(2016-03-13) @project(0-0-2)
  ✘ @newer specifications.node @cancelled(2016-03-13) @project(0-0-2)
  ✔ @newer specifications.lib @done(2016-03-13) @project(0-0-2)
  ✘ @newer couverture.generation @cancelled(2016-03-13) @project(0-0-2)
  ✘ @newer couverture.rapport @cancelled(2016-03-13) @project(0-0-2)
  ✔ limiter les fichiers liés au npm avec .npmignore @done(2016-03-12) @project(0-0-2)
  ✔ Bouger les dossiers /dist/report => test/coverage @done(2016-03-12) @project(0-0-2)
  ✔ Bouger les dossiers dist/test => test/jasmine @done(2016-03-12) @project(0-0-2)
  ✔ @gulp revoir les taches de nettoyage avant apres pour optimiser newer() @done(2016-03-12) @project(0-0-2)
  ✔ @gulp pipe(newer()) pour les concat et les docs @done(2016-03-12) @project(0-0-2)
  ✔ @test Revoir les tests unitaires de Jour(), en simplifiant @done(2016-03-11) @project(0-0-2)
  ✘ @test Revoir les tests unitaires de Jour(), en incluant le test des constantes (REGEX) @cancelled(2016-03-11) @project(0-0-2)
  ✔ @cache Utiliser gulp pour les fichiers qui ne changent pas (gulp-newer) @done(2016-03-11) @project(0-0-2)
  ✔ @gulpfile Séparer les configs et fichiers => http://makina-corpus.com/blog/metier/2015/make-your-gulp-modular, http://blog.rangle.io/angular-gulp-bestpractices/ @done(2016-03-11) @project(0-0-2)
  ✔ @gulpfile Créer une config pour les chemins dans le gulpfile (http://makina-corpus.com/blog/metier/2015/make-your-gulp-modular, http://blog.rangle.io/angular-gulp-bestpractices/) @done(2016-03-10) @project(0-0-2)
  ✔ @lazypipe pour les regex dans gulpfile (qui sont déjà uniformisés): https://www.npmjs.com/package/lazypipe, https://www.reddit.com/r/angularjs/comments/2hanaj/help_large_web_application_development_with_gulp/ @done(2016-03-10) @project(0-0-2)
  ✔ @structure Sortir /tests de ./src/js et le placer au niveau de ./src, puis le renommer /test. Dossier fixture ? @done(2016-03-10) @project(0-0-2)
  ✔ @build Concaténer tous les scripts en une seule passe (config.js) dans gulp gen.script (supprimer /temp) @done(2016-03-09) @project(0-0-2)
  ✔ @docs traduire tous les termes des docs constantes et utilitaires (gen.docs.utilitaires, gen.docs.constantes) @done(2016-03-09) @project(0-0-2)
  ✔ @docs générer les docs en README.md dans les dossiers /constantes /methodes et /utilitaires avec l'option {'private': true} @done(2016-03-09) @project(0-0-2)
  ✔ @docs classer les constantes et utilitaires par ordre alphabétique dans les docs @done(2016-03-09) @project(0-0-2)
  ✔ @structure renommer le dossier src/js/temp en src/js/.temp et ajouter un .gitignore @done(2016-03-09) @project(0-0-2)
  ✔ @jsdoc @api Proposer l'API publique et privée dans le README.md de /dist ou /src @done(2016-03-08) @project(0-0-1)
  ✔ @ide Utiliser atom-standard et/ou atom-eslint @done(2016-03-08) @project(0-0-1)
  ✘ @eslint Classer les statements alphabetiquement ? @cancelled(2016-03-08) @project(0-0-1)
  ✔ Améliorer ou laisser tomber le regex pour formater utilitaires.js et constantes.js après concat @done(2016-03-07) @project(0-0-3)
  ✔ Pourquoi les fonctions non utilisées n'ont pas été détectée par jshint ds dist/acte.js ? @done(2016-03-07) @project(0-0-3)
  ✘ Ajouter un hook codacy sur github @cancelled(2016-03-07) @project(0-0-3)
  ✔ Installer et configurer gulp-eslint @codacy, https://github.com/adametry/gulp-eslint, http://eslint.org/docs/user-guide/configuring#configuring-rules, http://eslint.org/docs/rules/, http://eslint.org/docs/user-guide/configuring#using-configuration-files, https://gist.github.com/cletusw/e01a85e399ab563b1236 @done(2016-03-07) @project(0-0-3)
  ✔ Configurer eslintrc http://rapilabs.github.io/eslintrc-generator/ @done(2016-03-07) @project(0-0-3)
  ✔ utilitaires-alt.js coverage 95% (fonctions non utilisées) @done(2016-03-07) @project(0-0-3)
  ✘ migrer la config beautifier dans gulpfile ? @cancelled(2016-03-04) @project(0-0-2)
  ✘ Se passer du beautifier avec eslint --fix option @cancelled(2016-03-07) @project(0-0-2)
  ✔ revoir gulp check.dist ? @done(2016-03-07) @project(0-0-2)
  ✘ concat temp const & utils puis regex en déclaration var unique @cancelled(2016-03-07) @project(0-0-2)
  ✔ configuration eslint @done(2016-03-03) @project(0-0-2)
  ✘ traduction eslint @cancelled(2016-03-03) @project(0-0-2)
  ✘ gulp-standard => en cours de test @cancelled(2016-03-03) @project(0-0-2)
  ✘ Revoir les lint & styles (jscs, jslint, jshint, eslint, codacy, standard...) => eslint + plugin de config @cancelled(2016-03-03) @project(0-0-2)
  ✔ Travis a fait une erreur sur Coveralls @done(2016-02-22) @project(0-0-2)
  ✔ Suppression de codacy coverage au profit de coveralls @done(2016-02-22) @project(0-0-2)
  ✔ Quotes & semicolons in gulpfile @done(2016-02-23) @project(0-0-2)
  ✔ Utilitaires order @done(2016-02-23) @project(0-0-2)
  ✔ gulp-coveralls => en cours de test @done(2016-02-23) @project(0-0-2)
  ✔ Travis n'a pas construit le build 'coverage' en entier => en cours @done(2016-02-22) @project(0-0-2)
  ✔ gulp-plumber @done(2016-02-22) @project(0-0-2)
  ✘ gulp-changed or gulp-cached => voir plus tard dans le projet ! @cancelled(2016-02-22) @project(0-0-2)
  ✘ essayer en série avec grunt pour un meilleur contrôle @cancelled(2016-02-22) @project(0-0-1)
  ✔ créer un dossier ./src/js/temp et générer constantes.js et utilitaires.js avec un timestamp en prefix (ex:constantes-873987165948134.js) @done(2016-01-02) @project(0-0-1)
  ✔ Supprimer l'utilisation de phantomjs @done(2016-01-02) @project(0-0-1)
  ✔ Intégrer les dossiers /utilitaires et /constantes dans le build @done(2016-01-02) @project(0-0-1)
  ✔ Expliquer les limites dans le jsdoc de Jour() @done(2016-01-02) @project(0-0-1)
  ✔ COMMIT: correctif gulpfile @done(2016-01-02) @project(0-0-1)
  ✔ Essayer de segmenter utilitaires.js en fichiers multiples @done(2016-01-02) @project(0-0-1)
  ✔ Segmenter constantes.js @done(2016-01-02) @project(0-0-1)
  ✔ commits: coverage @done(2016-01-02) @project(0-0-1)
  ✔ Constantes classées par ordre alphabétique @done(2015-12-31) @project(0-0-1)
  ✔ Classer les fonctions.js par ordre alphabetique (reste de R à Z) @done(2015-12-31) @project(0-0-1)
  ✔ Renommer fonctions.js en utilitaires.js @done(2015-12-31) @project(0-0-1)
  ✔ Déplacement du fichier .todo @done(2015-12-31) @project(0-0-1)
  ✘ Classer les constantes.js par ordre alphabetique @cancelled(2015-12-30) @project(0-0-1)
  ✔ Ajouter les tests unitaires pour un coverage à 100% @istanbul @done(2015-12-30) @project(0-0-1)
  ✔ #35 Implémenter les tests unitaires restants @jasmine @coverage @done(2015-12-29) @project(0-0-1)
  ✔ #15 Intégrer un stand-alone.zip avec les releases @done(2015-12-28) @project(0-0-1)
  ✔ UMD & hasownproperty coverage : https://github.com/gotwarlost/istanbul/blob/master/ignoring-code-for-coverage.md @done(2015-12-28) @project(0-0-1)
  ✔ Fichier .zip pour la pre-release @done(2015-12-28) @project(0-0-1)
  ✔ Réorganiser les taches gulp @done(2015-12-28) @project(0-0-1)
  ✔ GULP: Debugger Travis @done(2015-12-27) @project(0-0-1)
  ✔ GULP: jshint sur acte.js => define note defined ? @done(2015-12-27) @project(0-0-1)
  ✔ GULP: SpecRunner.html mal copié @done(2015-12-27) @project(0-0-1)
  ✔ GULP: Tests jasmine lancés 2 fois (doublon) @done(2015-12-27) @project(0-0-1)
  ✘ Badge Codacy Coverage quand disponible chez shields.io @codacy @cancelled(2015-12-24) @project(0-0-1)
  ✔ Configurer gulp-istanbul (ou karma) pour codacy @coverage (https://dzone.com/articles/code-coverage-jasmine-tests) @done(2015-12-24) @project(0-0-1)
  ✔ Simplifier le gulpfile pour les tests coverage @done(2015-12-24) @project(0-0-1)
  ✘ Configuer mocha + chai + (karma) + istanbul @cancelled(2015-12-24) @project(0-0-1)
  ✘ Améliorer le gulpfile : https://coderwall.com/p/adgitg/coverage-report-with-gulp-and-istanbul @cancelled(2015-12-24) @project(0-0-1)
  ✔ Bug travis (déploiement gulp) -> problème de droits sur package.json => non, capitale dans les noms de fichiers ? => non, attention, browserspecs prettified 3 fois !!! @done(2015-12-23) @project(0-0-1)
  ✔ Bug codacy avec déclaration de variable i @done(2015-12-22) @project(0-0-1)
  ✔ Lier les tests jasmine specrunner.html avec le jasmine des node_modules @done(2015-12-21) @project(0-0-1)
  ✔ Réduire la cyclomatique : Couper Jour() en 3 avec 2 fonctions appelées @codacy @done(2015-12-21) @project(0-0-1)
  ✔ Optimiser pour codacy (arg 5, statements 25, complexity 10) @codacy @done(2015-12-21) @project(0-0-1)
  ✘ #50 Améliorer les regexp de capture des mois grégoriens (10 JR 1978 - code à 2 cars.), (10 JA 1978 - code bilingue) @jour @regex @cancelled(2015-12-21) @project(0-0-1)
  ✔ jsdoc pour les constantes regex @done(2015-12-20) @project(0-0-1)
  ✔ Debugger gjjj dans Jour() @jour @done(2015-12-19) @project(0-0-1)
  ✔ Les fonctions ou constantes dans les objets CONST. et priv. ne sont pas minifiées ! Revenir à la version précédente @done(2015-12-13) @project(0-0-1)
  ✔ Simplifier les fonctions privées (multiples déclarations de variables...) @done(2015-12-13) @project(0-0-1)
  ✔ Automatiser l'ajout de date dans la LICENCE @gulp /Copyright (c) 2015-2016 Gilles Toubiana/g +currentYearDisplay @done(2015-12-12) @project(0-0-1)
  ✔ Ajouter l'appartenance des constantes et méthodes de CONST. et priv. dans jsdoc (member of) @done(2015-12-12) @project(0-0-1)
  ✔ Revoir la longueur maximal des lignes avec les nouveaux objets (80, 82, + ?) @done(2015-12-12) @project(0-0-1)
  ✘ Mettre tout le code de l'objet acte dans sa déclaration au début de fichier @cancelled(2015-12-12) @project(0-0-1)
  ✔ Renommer l'objet CONSTANTES en CONST @done(2015-12-12) @project(0-0-1)
  ✔ Créer un objet priv = {} pour les fonctiones privées (ex priv.dateValide()) @done(2015-12-12) @project(0-0-1)
  ✔ Renommer les fichiers js : CONST.js, priv.js, Jour.js et revoir les appels dans le gulpfile.js @done(2015-12-12) @project(0-0-1)
  ✔ Ajout d'une fonction privée pour les dates valides @done(2015-12-10) @project(0-0-1)
  ✔ Simplifier les constantes @done(2015-12-10) @project(0-0-1)
  ✔ Revoir les noms et jsdoc des constants déplacées depuis private.js @jsdoc @done(2015-12-10) @project(0-0-1)
  ✔ @BUG travis CI avec la création de browserSpecs.js dans node 10 et 4 => flux corrigé @done(2015-12-09) @project(0-0-1)
  ✔ Réduire le nombre de statements dans nutation() @done(2015-12-09) @project(0-0-1)
  ✔ Télécharger la sourcemap @done(2015-12-09) @project(0-0-1)
  ✔ @BUG avec gulp browser et phantomjs sous node 5 @done(2015-12-09) @project(0-0-1)
  ✔ virer phantomjs et déplacer browserSpecs dans dist avec les docs.html @done(2015-12-09) @project(0-0-1)
  ✔ @gulp renommer jscs-jsdoc => jsdoc et jsdoc => docs @done(2015-12-09) @project(0-0-1)
  ✔ ajouter le sourcemap dans le /dist (concat + uglify) (https://www.npmjs.com/package/gulp-concat) @done(2015-12-09) @project(0-0-1)
  ✔ #47 Optimisation du CODE STYLE avec @codacy @done(2015-12-08) @project(0-0-1)
  ✔ Sortir les fonctions privées des closures @codacy @done(2015-12-08) @project(0-0-1)
  ✔ #47 Mieux contrôler la complexité du code (http://elijahmanor.com/control-the-complexity-of-your-javascript-functions-with-jshint/) @done(2015-12-08) @project(0-0-1)
  ✔ intégrer gulp jscs et gulp jsdoc dans le gulp par défaut @gulp @done(2015-12-08) @project(0-0-1)
  ✘ Multiline comments in JSODC (@see) @codacy @cancelled(2015-12-07) @project(0-0-1)
  ✘ Utilisation de var name = (function ())() @codacy @cancelled(2015-12-07) @project(0-0-1)
  ✔ Installer correctement node 5 @node @done(2015-12-07) @project(0-0-1)
  ✔ #48 Enregistrer le npm en ligne + badge npm et license @npm @done(2015-12-07) @project(0-0-1)
  ✔ #49 Tests unitaires Travis lors de la mise en ligne + badge @travis @done(2015-12-07) @project(0-0-1)
  ✔ #1 acte.jour() @done(2015-12-07) @project(0-0-1)
  ✔ Afficher les dépendances (David) @done(2015-12-06) @project(0.0.1)
  ✘ Nettoyer les commentaires en production @gulp @cancelled(2015-12-06) @project(0.0.1)
  ✔ Réécrire le JSDOC @jour @done(2015-12-06) @project(0.0.1)
  ✔ Formater avec gulp jscs et gulp jsdoc @jour @done(2015-12-05) @project(0.0.1)
  ✔ Supprimer l'ancien acte.Jour() et renommer acte.JourAlt() @jour @done(2015-12-05) @project(0.0.1)
  ✔ #46 Optimiser le script acte.Jour() @done(2015-12-05) @project(0.0.1)
  ✔ #33 jour(saisie, limite); @done(2015-12-05) @project(0.0.1)
  ✔ #17 Intégrer le script julian to jd @done(2015-12-05) @project(0.0.1)
  ✔ #14 Peut-on saisir une date avant JC ? @done(2015-12-05) @project(0.0.1)
  ✔ #13 La saisie de date avant l'ère grégorienne devrait correspondre à une date julienne @done(2015-12-05) @project(0.0.1)
  ✔ Modifier le formatage de cette todolist pour les dates (exemple 2015-12-04) @done(2015-12-05) @project(0.0.1)
